
# Code Quality Standards

## Always Include in Code Changes:
- Proper error handling and logging
- Input validation and sanitization
- Security best practices
- Performance considerations
- Accessibility requirements (for frontend)

## Testing Requirements:
- **Unit tests required for every code change**
- **Minimum 85% test coverage for all new/modified code**
- Test both success and failure scenarios
- Mock external dependencies appropriately
- Include edge case testing
- Ensure tests are fast and reliable

## Test Coverage Standards:
- Run `npm test -- --coverage` or equivalent before committing
- Verify coverage meets or exceeds 85% threshold
- Focus on critical business logic and error paths
- Test utility functions and helper methods
- Include integration tests for API endpoints
- Test error handling and edge cases

## Documentation Requirements:
- Update README if adding new features
- Document API changes
- Include JSDoc/TSDoc for public functions
- Update environment variable documentation
- Document test coverage expectations

## Git Commit Standards:
- Use conventional commits (feat:, fix:, docs:, etc.)
- Keep commits atomic and focused
- Write clear, descriptive commit messages
- Reference issue numbers when applicable
- **Include test coverage report in commit message if below 95%**

## Pre-commit Checklist:
- [ ] All unit tests pass
- [ ] Test coverage â‰¥ 85%
- [ ] No linting errors
- [ ] Code follows project style guidelines
- [ ] Documentation updated
- [ ] Security review completed