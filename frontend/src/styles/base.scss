@use 'variables' as *;
@use 'mixins' as *;

/* Base styles and global resets */
* {
  box-sizing: border-box;
}

/* Reset textarea to match input styling */
textarea {
  font-family: inherit;
  font-size: inherit;
}

html {
  /* Prevent overscroll bounce and flickering */
  overscroll-behavior: none;
  scroll-behavior: smooth;
  height: 100%;
}

body {
  margin: 0;
  font-family: $font-family-base;
  background: $gradient-light;
  background-size: 400% 400%;
  animation: aura-move 15s ease infinite;
  min-height: 100vh;
  height: 100%;
  padding: 0;
  color: $text-color;
  transition: background $transition-normal, color $transition-normal;
  
  /* Prevent overscroll bounce and flickering */
  overscroll-behavior: none;
  overscroll-behavior-y: none;
  -webkit-overflow-scrolling: touch;
  
  /* Prevent horizontal scroll */
  overflow-x: hidden;
  overflow-y: auto;
}

@keyframes aura-move {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* Dark mode styles */
@include dark-mode {
  body {
    background: $gradient-dark;
    background-size: 300% 300%;
    animation: dark-aura-move 180s ease-in-out infinite;
    color: $dark-text;
    position: relative;
    overflow-x: hidden;
  }
  
  /* Dark mode aura animation */
  @keyframes dark-aura-move {
    0% {
      background-position: 0% 50%;
      box-shadow: 0 0 100px rgba(15, 52, 96, 0.2);
    }
    20% {
      background-position: 50% 25%;
      box-shadow: 0 0 110px rgba(83, 52, 131, 0.25);
    }
    40% {
      background-position: 100% 50%;
      box-shadow: 0 0 120px rgba(22, 33, 62, 0.3);
    }
    60% {
      background-position: 75% 100%;
      box-shadow: 0 0 130px rgba(26, 26, 46, 0.25);
    }
    80% {
      background-position: 25% 75%;
      box-shadow: 0 0 120px rgba(15, 52, 96, 0.2);
    }
    100% {
      background-position: 0% 50%;
      box-shadow: 0 0 100px rgba(15, 52, 96, 0.2);
    }
  }
}

/* Seasoning background canvas - available for both light and dark modes */
.seasoning-background {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: -1;
  pointer-events: none;
  display: block;
}

/* Container and basic layout */
.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: $spacing-md;
  padding-top: $spacing-xl + $spacing-lg; /* Increased top padding to provide space for title and FABs */
  min-height: 100vh;
  position: relative;
}

/* Header container for title and FAB */
.header-container {
  position: fixed;
  top: $spacing-md;
  left: 50%;
  transform: translateX(-50%);
  z-index: $z-overlay;
  display: flex;
  flex-direction: column; // Changed to column to stack search results below
  align-items: stretch; // Changed from center to stretch for full width children
  gap: 0; // Remove gap since we'll handle spacing differently
  max-width: 600px; // Set a fixed max-width to match search panel
  width: calc(100% - #{$spacing-md * 2});
  
  // Enhanced glass morphism effect
  background: rgba(255, 255, 255, 0.15);
  backdrop-filter: blur(20px) saturate(180%);
  -webkit-backdrop-filter: blur(20px) saturate(180%);
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: $border-radius-xl;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12),
              0 4px 16px rgba(0, 0, 0, 0.08),
              0 2px 8px rgba(0, 0, 0, 0.05),
              inset 0 0 0 1px rgba(255, 255, 255, 0.2),
              inset 0 1px 2px rgba(255, 255, 255, 0.3);
  padding: $spacing-sm;
  
  transition: all $transition-normal;
  overflow: hidden; // Ensure content stays within rounded corners
  
  /* Fade effect controlled by JS */
  &.fade-out {
    opacity: 0;
    transform: translateX(-50%) translateY(-20px);
    pointer-events: none;
    
    .title-search {
      opacity: 0;
    }
  }
  
  /* Responsive adjustments */
  @media (max-width: 900px) {
    max-width: calc(100% - #{$spacing-sm * 2});
    width: calc(100% - #{$spacing-sm * 2});
  }
  
  @media (max-width: 640px) {
    width: calc(100% - #{$spacing-sm * 2});
    max-width: none;
    padding: $spacing-xs;
    padding-bottom: $spacing-sm; /* Extra bottom padding for search bar separation */
    
    /* Add border-bottom on mobile to separate from content */
    border-bottom: 3px solid rgba(255, 255, 255, 0.4);
    box-shadow: 
      0 8px 32px rgba(0, 0, 0, 0.12),
      0 4px 16px rgba(0, 0, 0, 0.08),
      0 2px 8px rgba(0, 0, 0, 0.05); /* Enhanced shadow for better separation */
    
    /* Ensure minimum height when search results are not shown */
    min-height: auto;
  }
}

.title {
  font-size: 2rem;
  margin: 0;
  font-weight: 700;
  color: white;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
  display: flex;
  align-items: center;
  gap: 12px;
  
  /* Remove fixed positioning since parent handles it now */
  position: relative;
  
  /* Full width to contain search bar */
  width: 100%;
  
  /* Fade effect controlled by parent now */
  transition: opacity 0.3s ease-in-out;
  opacity: 1;
  
  /* Remove individual glass effect since parent has it */
  background: transparent;
  backdrop-filter: none;
  -webkit-backdrop-filter: none;
  border-radius: 0;
  padding: 0; // Remove padding since parent has it
}

.title-icon {
  width: 36px;
  height: 36px;
  filter: drop-shadow(2px 2px 4px rgba(0, 0, 0, 0.3));
  margin-right: 4px; // Add small margin for better spacing
}

/* Title search bar styles */
.title-search {
  display: flex;
  align-items: center;
  margin-left: auto;
  background: rgba(255, 255, 255, 0.15);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.25);
  border-radius: calc(#{$border-radius-lg} - 5px); // 20px to complement the 25px panel
  padding: 4px;
  transition: all $transition-normal;
  min-width: 320px;
  height: 40px; // Set consistent height
  gap: 4px; // Add gap between buttons
  box-shadow: inset 0 1px 1px rgba(255, 255, 255, 0.2);
  
  &:hover {
    background: rgba(255, 255, 255, 0.2);
    border-color: rgba(255, 255, 255, 0.35);
    box-shadow: inset 0 1px 1px rgba(255, 255, 255, 0.3);
  }
  
  &:focus-within {
    background: rgba(255, 255, 255, 0.25);
    border-color: rgba(255, 255, 255, 0.45);
    box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.2),
                inset 0 1px 1px rgba(255, 255, 255, 0.3);
  }
  
  // Loading state with pulsating glow
  &.clipping {
    animation: pulse-glow 1.5s ease-in-out infinite;
    border-color: rgba(76, 175, 80, 0.8);
    
    .title-search-input {
      &:disabled {
        opacity: 0.8;
        cursor: wait;
      }
    }
  }
  
  // Error state with red glow
  &.clip-error {
    animation: error-pulse 0.5s ease-in-out;
    border-color: rgba(244, 67, 54, 0.8);
    background: rgba(244, 67, 54, 0.2);
    box-shadow: 0 0 10px rgba(244, 67, 54, 0.5);
    
    &:hover {
      background: rgba(244, 67, 54, 0.25);
      border-color: rgba(244, 67, 54, 0.9);
    }
  }
}

// Pulsating glow animation
@keyframes pulse-glow {
  0% {
    box-shadow: 0 0 5px rgba(76, 175, 80, 0.4);
  }
  50% {
    box-shadow: 0 0 20px rgba(76, 175, 80, 0.8), 0 0 30px rgba(76, 175, 80, 0.4);
  }
  100% {
    box-shadow: 0 0 5px rgba(76, 175, 80, 0.4);
  }
}

// Error pulse animation
@keyframes error-pulse {
  0% {
    transform: translateX(0);
  }
  25% {
    transform: translateX(-5px);
  }
  50% {
    transform: translateX(5px);
  }
  75% {
    transform: translateX(-5px);
  }
  100% {
    transform: translateX(0);
  }
}

.title-search-input {
  background: transparent;
  border: none;
  color: white;
  padding: 6px 12px;
  font-size: 0.875rem;
  outline: none;
  width: 280px;
  transition: width $transition-normal;
  border-radius: calc(#{$border-radius-lg} - 9px); // Match inner curve
  height: 100%; // Fill parent height
  flex: 1; // Take remaining space
  
  &::placeholder {
    color: rgba(255, 255, 255, 0.7);
  }
  
  &:focus {
    width: 350px;
  }
}

.title-search-button {
  background: transparent;
  border: none;
  color: white;
  padding: 8px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%; // Make button circular
  transition: all $transition-normal; // Include all properties for smooth transitions
  height: 100%; // Fill parent height
  aspect-ratio: 1; // Make button square (which becomes circular with border-radius)
  
  &:hover {
    background: rgba(255, 255, 255, 0.1);
    transform: scale(1.05); // Slight scale on hover
  }
  
  &:active {
    background: rgba(255, 255, 255, 0.2);
    transform: scale(0.95); // Slight scale down on active
  }
  
  // Style for both SVG and IMG icons
  svg, img {
    width: 18px;
    height: 18px;
    display: block;
    transition: transform $transition-fast, filter $transition-normal;
  }
  
  img.clip-icon {
    filter: brightness(0) invert(1); // Keep white by default
  }
  
  img.clip-icon-available {
    // Keep icon white but add green glass background to button
    filter: brightness(0) invert(1); // White icon
  }
  
  // Green glass background when clipper is available
  &.clipper-available {
    background: rgba(76, 175, 80, 0.3);
    backdrop-filter: blur(10px) saturate(150%);
    -webkit-backdrop-filter: blur(10px) saturate(150%);
    border: 1px solid rgba(76, 175, 80, 0.5);
    box-shadow: 
      0 2px 8px rgba(76, 175, 80, 0.3),
      inset 0 1px 2px rgba(255, 255, 255, 0.2);
    
    &:hover {
      background: rgba(76, 175, 80, 0.4);
      border-color: rgba(76, 175, 80, 0.6);
      box-shadow: 
        0 4px 12px rgba(76, 175, 80, 0.4),
        inset 0 1px 2px rgba(255, 255, 255, 0.3);
      transform: scale(1.05);
    }
    
    &:active {
      background: rgba(76, 175, 80, 0.5);
      transform: scale(0.95);
    }
  }
  
  &:hover {
    svg, img {
      transform: scale(1.1);
    }
  }
  
  // Loading spinner
  .loading-spinner {
    display: flex;
    align-items: center;
    justify-content: center;
    transform-origin: center center;
    transform: none; // Ensure no transform interference
    
    svg {
      animation: spin 1s linear infinite;
      will-change: transform;
      backface-visibility: hidden;
      transform-origin: center center;
    }
  }
  
  &:disabled {
    cursor: not-allowed;
    opacity: 0.7;
    transform: none;
    
    &:hover {
      transform: none;
    }
  }
}

// Spin animation for loading
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Dark mode title */
@media (prefers-color-scheme: dark) {
  .header-container {
    // Dark mode glass effect
    background: rgba(30, 30, 30, 0.4);
    backdrop-filter: blur(20px) saturate(180%);
    -webkit-backdrop-filter: blur(20px) saturate(180%);
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.4),
                0 4px 16px rgba(0, 0, 0, 0.25),
                0 2px 8px rgba(0, 0, 0, 0.2),
                inset 0 0 0 1px rgba(255, 255, 255, 0.15),
                inset 0 1px 1px rgba(255, 255, 255, 0.1);
    
    /* Add border-bottom on mobile for dark mode */
    @media (max-width: 640px) {
      border-bottom: 3px solid rgba(255, 255, 255, 0.3);
      box-shadow: 
        0 8px 32px rgba(0, 0, 0, 0.5),
        0 4px 16px rgba(0, 0, 0, 0.3),
        0 2px 8px rgba(0, 0, 0, 0.2), /* Enhanced shadow for separation */
        inset 0 0 0 1px rgba(255, 255, 255, 0.15);
    }
  }

  .title {
    color: #ecf0f1;
    text-shadow: 2px 2px 6px rgba(0, 0, 0, 0.5);
    background: transparent; // Keep transparent in dark mode
  }
  
  .title-search {
    background: rgba(255, 255, 255, 0.08);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border-color: rgba(255, 255, 255, 0.15);
    box-shadow: inset 0 1px 1px rgba(255, 255, 255, 0.1);
    
    &:hover {
      background: rgba(255, 255, 255, 0.12);
      border-color: rgba(255, 255, 255, 0.2);
      box-shadow: inset 0 1px 1px rgba(255, 255, 255, 0.15);
    }
    
    &:focus-within {
      background: rgba(255, 255, 255, 0.15);
      border-color: rgba(255, 255, 255, 0.25);
      box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.15),
                  inset 0 1px 1px rgba(255, 255, 255, 0.2);
    }
  }
  
  .title-search-input {
    color: #ecf0f1;
    
    &::placeholder {
      color: rgba(236, 240, 241, 0.6);
    }
  }
  
  .title-search-button {
    color: #ecf0f1;
    
    img.clip-icon-available {
      // Keep icon white in dark mode too
      filter: brightness(0) invert(1);
    }
    
    // Enhanced green glass background in dark mode
    &.clipper-available {
      background: rgba(76, 175, 80, 0.25);
      backdrop-filter: blur(10px) saturate(150%);
      -webkit-backdrop-filter: blur(10px) saturate(150%);
      border: 1px solid rgba(76, 175, 80, 0.4);
      box-shadow: 
        0 2px 8px rgba(76, 175, 80, 0.4),
        0 0 10px rgba(76, 175, 80, 0.2),
        inset 0 1px 2px rgba(255, 255, 255, 0.15);
      
      &:hover {
        background: rgba(76, 175, 80, 0.35);
        border-color: rgba(76, 175, 80, 0.6);
        box-shadow: 
          0 4px 12px rgba(76, 175, 80, 0.5),
          0 0 15px rgba(76, 175, 80, 0.3),
          inset 0 1px 2px rgba(255, 255, 255, 0.2);
        transform: scale(1.05);
      }
      
      &:active {
        background: rgba(76, 175, 80, 0.4);
        transform: scale(0.95);
      }
    }
  }
  
  // Enhanced glow effects in dark mode
  .title-search {
    &.clipping {
      box-shadow: 0 0 15px rgba(76, 175, 80, 0.6);
    }
    
    &.clip-error {
      background: rgba(244, 67, 54, 0.3);
      box-shadow: 0 0 15px rgba(244, 67, 54, 0.7);
    }
  }
}

/* Responsive title adjustments */
@media (max-width: 768px) {
  .title {
    font-size: 1.5rem;
    padding: $spacing-xs $spacing-sm;
    top: $spacing-sm;
    left: 50%;
    transform: translateX(-50%);
    flex-wrap: wrap;
    gap: 8px;
    
    &.fade-out {
      transform: translateX(-50%) translateY(-20px);
    }
  }
  
  .title-icon {
    width: 28px;
    height: 28px;
  }
  
  .title-search {
    margin-left: 0;
    width: 100%;
    margin-top: 4px;
    min-width: unset;
    margin-bottom: 6px; /* Add margin-bottom to separate from glass panel edge */
  }
  
  .title-search-input {
    width: 100%;
    font-size: 0.8rem;
    padding: 4px 10px;
    
    &:focus {
      width: 100%;
    }
  }
  
  .title-search-button {
    padding: 6px; // Adjust padding for circular button on mobile
    
    svg, img {
      width: 16px;
      height: 16px;
    }
  }
  
  .container {
    padding-top: $spacing-lg + $spacing-md; /* Reduced padding for mobile */
  }
}

@media (max-width: 640px) {
  .title {
    font-size: 1.4rem; /* Slightly smaller on 640px breakpoint */
    padding: $spacing-xs;
    flex-wrap: wrap;
    gap: 8px;
    
    /* Ensure consistent height */
    min-height: 40px;
    align-items: center;
  }
  
  .title-icon {
    width: 30px;
    height: 30px;
  }
  .container {
    padding-top: calc(#{$spacing-xl} + #{$spacing-xl} + #{$spacing-lg}); /* Increased padding to ensure no overlap */
  }
}

@media (max-width: 480px) {
  .title {
    font-size: 1.25rem;
    padding: $spacing-xs;
    flex-wrap: wrap;
    width: calc(100% - #{$spacing-sm * 2});
    gap: 8px;
    left: 50%;
    transform: translateX(-50%);
    
    &.fade-out {
      transform: translateX(-50%) translateY(-20px);
    }
    
    /* Keep the text "Seasoned" as a flex item */
    > img, 
    > .title-search {
      flex-shrink: 0;
    }
  }
  
  .title-icon {
    width: 24px;
    height: 24px;
  }
  
  .title-search {
    display: flex; /* Show search bar on mobile */
    width: 100%;
    margin-top: 4px;
    margin-left: 0;
    min-width: unset;
    flex-basis: 100%; /* Force search bar to new line */
    height: 36px; /* Slightly smaller height on mobile */
    margin-bottom: 8px; /* Add margin-bottom to separate from glass panel edge */
  }
  
  .title-search-input {
    font-size: 0.75rem;
    padding: 4px 8px;
  }
  
  .title-search-button {
    padding: 5px; // Adjust padding for circular button on smallest screens
    
    svg, img {
      width: 14px;
      height: 14px;
    }
  }
  
  .container {
    padding-top: calc(#{$spacing-xl} + #{$spacing-xl} + #{$spacing-xl}); /* Further increased padding for small screens */
  }
}

/* Glass morphism effect */
.glass {
  background: rgba(255, 255, 255, 0.08);
  /* Glass effect without blur - keeping saturation for color enhancement */
  backdrop-filter: saturate(180%);
  -webkit-backdrop-filter: saturate(180%);
  border-radius: 10px;
  border: 1px solid rgba(255, 255, 255, 0.18);
  box-shadow: 
    0 8px 32px 0 rgba(31, 38, 135, 0.15),
    inset 0 1px 0 0 rgba(255, 255, 255, 0.2);
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.1) 0%,
      rgba(255, 255, 255, 0.05) 30%,
      transparent 50%,
      rgba(255, 255, 255, 0.02) 70%,
      rgba(255, 255, 255, 0.08) 100%
    );
    pointer-events: none;
    border-radius: inherit;
  }
}

@media (prefers-color-scheme: dark) {
  /* Dark frost glass effect */
  .glass {
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.12);
    box-shadow: 
      0 8px 32px rgba(0, 0, 0, 0.3),
      inset 0 1px 0 rgba(255, 255, 255, 0.1);
    
    &::before {
      background: linear-gradient(
        135deg,
        rgba(255, 255, 255, 0.06) 0%,
        rgba(255, 255, 255, 0.03) 30%,
        transparent 50%,
        rgba(255, 255, 255, 0.01) 70%,
        rgba(255, 255, 255, 0.04) 100%
      );
    }
  }
}

/* Common animation keyframes */
@keyframes pulse {
  0%, 100% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.1);
    opacity: 0.8;
  }
}

@keyframes slideInUp {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

/* Error and status messages */
.error-message {
  background-color: #ff4757;
  color: white;
  padding: 12px 20px;
  border-radius: 4px;
  margin-bottom: 20px;
  font-weight: 500;
  text-align: center;
  animation: shake 0.5s ease-in-out;
}

.error-icon {
  font-size: 1.2em;
  margin-right: 8px;
}

/* Dark mode error message */
@media (prefers-color-scheme: dark) {
  .error-message {
    background-color: #e74c3c;
    box-shadow: 0 2px 8px rgba(231, 76, 60, 0.3);
  }
}

/* Hide elements */
.hidden {
  display: none !important;
}