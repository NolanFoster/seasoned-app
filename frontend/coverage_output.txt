
> seasoned-frontend@0.0.0 test:coverage
> jest --coverage

FAIL src/__tests__/SearchFunctionality.test.jsx
  ● Console

    console.error
      ❌ Failed to fetch recommendations: undefined

       998 |         }
       999 |       } else {
    > 1000 |         console.error('❌ Failed to fetch recommendations:', res.status);
           |                 ^
      1001 |         setRecipes([]);
      1002 |       }
      1003 |     } catch (e) {

      at error (src/App.jsx:1000:17)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      ❌ Failed to fetch recommendations: undefined

       998 |         }
       999 |       } else {
    > 1000 |         console.error('❌ Failed to fetch recommendations:', res.status);
           |                 ^
      1001 |         setRecipes([]);
      1002 |       }
      1003 |     } catch (e) {

      at error (src/App.jsx:1000:17)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      ❌ Failed to fetch recommendations: undefined

       998 |         }
       999 |       } else {
    > 1000 |         console.error('❌ Failed to fetch recommendations:', res.status);
           |                 ^
      1001 |         setRecipes([]);
      1002 |       }
      1003 |     } catch (e) {

      at error (src/App.jsx:1000:17)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      ❌ Failed to fetch recommendations: undefined

       998 |         }
       999 |       } else {
    > 1000 |         console.error('❌ Failed to fetch recommendations:', res.status);
           |                 ^
      1001 |         setRecipes([]);
      1002 |       }
      1003 |     } catch (e) {

      at error (src/App.jsx:1000:17)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 693.2695152290969,
        y: 167.3814511402096,
        size: 3.0150071180550357,
        opacity: 0.5732141308369533,
        speed: 0.2505416303959678,
        color: 'rgba(220, 53, 69, ',
        type: 'pepper',
        rotation: 5.7406193682543485,
        rotationSpeed: -0.008607041309522665,
        twinkle: 5.716660335634324,
        twinkleSpeed: 0.006599119686600071
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.warn
      ⚠️ Error fetching complete recipe data for ID: search-1: TypeError: response.text is not a function
          at text (/workspace/frontend/src/App.jsx:218:42)
          at searchRecipes (/workspace/frontend/src/App.jsx:1541:34)

      249 |       }
      250 |     } catch (error) {
    > 251 |       console.warn(`⚠️ Error fetching complete recipe data for ID: ${recipeId}:`, error);
          |               ^
      252 |       return null;
      253 |     }
      254 |   }

      at warn (src/App.jsx:251:15)
      at searchRecipes (src/App.jsx:1541:34)

    console.warn
      ⚠️ [1/2] KV fetch failed for recipe search-1, using search result

      1545 |           } else {
      1546 |             // Fallback to search result if KV fetch fails
    > 1547 |             console.warn(`⚠️ [${i + 1}/${result.results.length}] KV fetch failed for recipe ${node.id}, using search result`);
           |                     ^
      1548 |             completeResults.push({ id: node.id, data: node.properties });
      1549 |           }
      1550 |         }

      at warn (src/App.jsx:1547:21)

    console.warn
      ⚠️ Error fetching complete recipe data for ID: search-2: TypeError: response.text is not a function
          at text (/workspace/frontend/src/App.jsx:218:42)
          at searchRecipes (/workspace/frontend/src/App.jsx:1541:34)

      249 |       }
      250 |     } catch (error) {
    > 251 |       console.warn(`⚠️ Error fetching complete recipe data for ID: ${recipeId}:`, error);
          |               ^
      252 |       return null;
      253 |     }
      254 |   }

      at warn (src/App.jsx:251:15)
      at searchRecipes (src/App.jsx:1541:34)

    console.warn
      ⚠️ [2/2] KV fetch failed for recipe search-2, using search result

      1545 |           } else {
      1546 |             // Fallback to search result if KV fetch fails
    > 1547 |             console.warn(`⚠️ [${i + 1}/${result.results.length}] KV fetch failed for recipe ${node.id}, using search result`);
           |                     ^
      1548 |             completeResults.push({ id: node.id, data: node.properties });
      1549 |           }
      1550 |         }

      at warn (src/App.jsx:1547:21)

    console.warn
      ⚠️ Error fetching complete recipe data for ID: search-1: TypeError: response.text is not a function
          at text (/workspace/frontend/src/App.jsx:218:42)
          at searchRecipes (/workspace/frontend/src/App.jsx:1541:34)

      249 |       }
      250 |     } catch (error) {
    > 251 |       console.warn(`⚠️ Error fetching complete recipe data for ID: ${recipeId}:`, error);
          |               ^
      252 |       return null;
      253 |     }
      254 |   }

      at warn (src/App.jsx:251:15)
      at searchRecipes (src/App.jsx:1541:34)

    console.warn
      ⚠️ [1/2] KV fetch failed for recipe search-1, using search result

      1545 |           } else {
      1546 |             // Fallback to search result if KV fetch fails
    > 1547 |             console.warn(`⚠️ [${i + 1}/${result.results.length}] KV fetch failed for recipe ${node.id}, using search result`);
           |                     ^
      1548 |             completeResults.push({ id: node.id, data: node.properties });
      1549 |           }
      1550 |         }

      at warn (src/App.jsx:1547:21)

    console.warn
      ⚠️ Error fetching complete recipe data for ID: search-2: TypeError: response.text is not a function
          at text (/workspace/frontend/src/App.jsx:218:42)
          at searchRecipes (/workspace/frontend/src/App.jsx:1541:34)

      249 |       }
      250 |     } catch (error) {
    > 251 |       console.warn(`⚠️ Error fetching complete recipe data for ID: ${recipeId}:`, error);
          |               ^
      252 |       return null;
      253 |     }
      254 |   }

      at warn (src/App.jsx:251:15)
      at searchRecipes (src/App.jsx:1541:34)

    console.warn
      ⚠️ [2/2] KV fetch failed for recipe search-2, using search result

      1545 |           } else {
      1546 |             // Fallback to search result if KV fetch fails
    > 1547 |             console.warn(`⚠️ [${i + 1}/${result.results.length}] KV fetch failed for recipe ${node.id}, using search result`);
           |                     ^
      1548 |             completeResults.push({ id: node.id, data: node.properties });
      1549 |           }
      1550 |         }

      at warn (src/App.jsx:1547:21)

    console.error
      ❌ Failed to fetch recommendations: undefined

       998 |         }
       999 |       } else {
    > 1000 |         console.error('❌ Failed to fetch recommendations:', res.status);
           |                 ^
      1001 |         setRecipes([]);
      1002 |       }
      1003 |     } catch (e) {

      at error (src/App.jsx:1000:17)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 801.0466683226566,
        y: 216.7557784933719,
        size: 3.8495491818250622,
        opacity: 1.0408080507247883,
        speed: 0.20579302628923446,
        color: 'rgba(220, 53, 69, ',
        type: 'pepper',
        rotation: 0.6442535342974357,
        rotationSpeed: 0.006204431822968197,
        twinkle: 0.09513215451365117,
        twinkleSpeed: 0.006689180022599324
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.error
      ❌ Failed to fetch recommendations: undefined

       998 |         }
       999 |       } else {
    > 1000 |         console.error('❌ Failed to fetch recommendations:', res.status);
           |                 ^
      1001 |         setRecipes([]);
      1002 |       }
      1003 |     } catch (e) {

      at error (src/App.jsx:1000:17)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 141.2698504379407,
        y: 586.9055362966005,
        size: 3.646450377115312,
        opacity: 0.36150626665508695,
        speed: 0.2633040429133373,
        color: 'rgba(34, 139, 34, ',
        type: 'leaf',
        rotation: 1.4816239532581212,
        rotationSpeed: -0.0017400466941449634,
        twinkle: 0.2473838943346133,
        twinkleSpeed: 0.011969864153142832
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.error
      ❌ Failed to fetch recommendations: undefined

       998 |         }
       999 |       } else {
    > 1000 |         console.error('❌ Failed to fetch recommendations:', res.status);
           |                 ^
      1001 |         setRecipes([]);
      1002 |       }
      1003 |     } catch (e) {

      at error (src/App.jsx:1000:17)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      ❌ Failed to fetch recommendations: undefined

       998 |         }
       999 |       } else {
    > 1000 |         console.error('❌ Failed to fetch recommendations:', res.status);
           |                 ^
      1001 |         setRecipes([]);
      1002 |       }
      1003 |     } catch (e) {

      at error (src/App.jsx:1000:17)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 481.94328582322805,
        y: 650.6342920408434,
        size: 5.483469807725784,
        opacity: 0.6348520084223757,
        speed: 0.1750632960186482,
        color: 'rgba(34, 139, 34, ',
        type: 'leaf',
        rotation: 2.340085691794138,
        rotationSpeed: 0.005082791394837947,
        twinkle: 0.7639981491769168,
        twinkleSpeed: 0.00962499339267567
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.warn
      ⚠️ Error fetching complete recipe data for ID: search-1: TypeError: response.text is not a function
          at text (/workspace/frontend/src/App.jsx:218:42)
          at searchRecipes (/workspace/frontend/src/App.jsx:1541:34)

      249 |       }
      250 |     } catch (error) {
    > 251 |       console.warn(`⚠️ Error fetching complete recipe data for ID: ${recipeId}:`, error);
          |               ^
      252 |       return null;
      253 |     }
      254 |   }

      at warn (src/App.jsx:251:15)
      at searchRecipes (src/App.jsx:1541:34)

    console.warn
      ⚠️ [1/1] KV fetch failed for recipe search-1, using search result

      1545 |           } else {
      1546 |             // Fallback to search result if KV fetch fails
    > 1547 |             console.warn(`⚠️ [${i + 1}/${result.results.length}] KV fetch failed for recipe ${node.id}, using search result`);
           |                     ^
      1548 |             completeResults.push({ id: node.id, data: node.properties });
      1549 |           }
      1550 |         }

      at warn (src/App.jsx:1547:21)

    console.warn
      ⚠️ Error fetching complete recipe data for ID: search-1: TypeError: response.text is not a function
          at text (/workspace/frontend/src/App.jsx:218:42)
          at searchRecipes (/workspace/frontend/src/App.jsx:1541:34)

      249 |       }
      250 |     } catch (error) {
    > 251 |       console.warn(`⚠️ Error fetching complete recipe data for ID: ${recipeId}:`, error);
          |               ^
      252 |       return null;
      253 |     }
      254 |   }

      at warn (src/App.jsx:251:15)
      at searchRecipes (src/App.jsx:1541:34)

    console.warn
      ⚠️ [1/1] KV fetch failed for recipe search-1, using search result

      1545 |           } else {
      1546 |             // Fallback to search result if KV fetch fails
    > 1547 |             console.warn(`⚠️ [${i + 1}/${result.results.length}] KV fetch failed for recipe ${node.id}, using search result`);
           |                     ^
      1548 |             completeResults.push({ id: node.id, data: node.properties });
      1549 |           }
      1550 |         }

      at warn (src/App.jsx:1547:21)

    console.error
      ❌ Failed to fetch recommendations: undefined

       998 |         }
       999 |       } else {
    > 1000 |         console.error('❌ Failed to fetch recommendations:', res.status);
           |                 ^
      1001 |         setRecipes([]);
      1002 |       }
      1003 |     } catch (e) {

      at error (src/App.jsx:1000:17)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      ❌ Failed to fetch recommendations: undefined

       998 |         }
       999 |       } else {
    > 1000 |         console.error('❌ Failed to fetch recommendations:', res.status);
           |                 ^
      1001 |         setRecipes([]);
      1002 |       }
      1003 |     } catch (e) {

      at error (src/App.jsx:1000:17)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 891.445160164147,
        y: 602.6222572545591,
        size: 2.3366190541368246,
        opacity: 0.500228627795923,
        speed: 0.28249131155752427,
        color: 'rgba(220, 53, 69, ',
        type: 'pepper',
        rotation: 1.2110902635028031,
        rotationSpeed: 0.006341736408725116,
        twinkle: 1.85187858319342,
        twinkleSpeed: 0.014713809950980074
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1524 |     debugLogEmoji('🔍', `Cache miss! Fetching fresh search results for: "${query}"`);
      1525 |     
    > 1526 |     setIsSearching(true);
           |     ^
      1527 |     setShowSearchResults(true);
      1528 |     
      1529 |     try {

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsSearching (src/App.jsx:1526:5)
      at searchRecipes (src/App.jsx:1652:23)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:576:19)
      at Object.advanceTimersByTime (src/__tests__/SearchFunctionality.test.jsx:442:12)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1525 |     
      1526 |     setIsSearching(true);
    > 1527 |     setShowSearchResults(true);
           |     ^
      1528 |     
      1529 |     try {
      1530 |       const res = await fetch(`${SEARCH_DB_URL}/api/search?q=${encodeURIComponent(query)}&type=recipe&limit=20`);

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setShowSearchResults (src/App.jsx:1527:5)
      at searchRecipes (src/App.jsx:1652:23)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:576:19)
      at Object.advanceTimersByTime (src/__tests__/SearchFunctionality.test.jsx:442:12)

    console.error
      ❌ Failed to fetch recommendations: undefined

       998 |         }
       999 |       } else {
    > 1000 |         console.error('❌ Failed to fetch recommendations:', res.status);
           |                 ^
      1001 |         setRecipes([]);
      1002 |       }
      1003 |     } catch (e) {

      at error (src/App.jsx:1000:17)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 121.20908826050345,
        y: 85.45624168252601,
        size: 2.137782579979361,
        opacity: 0.41610833670527503,
        speed: 0.12954311636692745,
        color: 'rgba(34, 139, 34, ',
        type: 'leaf',
        rotation: 3.981586178901565,
        rotationSpeed: -0.005599387290624543,
        twinkle: 4.321041244081145,
        twinkleSpeed: 0.0143798631069228
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.warn
      ⚠️ Error fetching complete recipe data for ID: search-1: TypeError: response.text is not a function
          at text (/workspace/frontend/src/App.jsx:218:42)
          at searchRecipes (/workspace/frontend/src/App.jsx:1541:34)

      249 |       }
      250 |     } catch (error) {
    > 251 |       console.warn(`⚠️ Error fetching complete recipe data for ID: ${recipeId}:`, error);
          |               ^
      252 |       return null;
      253 |     }
      254 |   }

      at warn (src/App.jsx:251:15)
      at searchRecipes (src/App.jsx:1541:34)

    console.warn
      ⚠️ [1/1] KV fetch failed for recipe search-1, using search result

      1545 |           } else {
      1546 |             // Fallback to search result if KV fetch fails
    > 1547 |             console.warn(`⚠️ [${i + 1}/${result.results.length}] KV fetch failed for recipe ${node.id}, using search result`);
           |                     ^
      1548 |             completeResults.push({ id: node.id, data: node.properties });
      1549 |           }
      1550 |         }

      at warn (src/App.jsx:1547:21)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.error
      ❌ Failed to fetch recommendations: undefined

       998 |         }
       999 |       } else {
    > 1000 |         console.error('❌ Failed to fetch recommendations:', res.status);
           |                 ^
      1001 |         setRecipes([]);
      1002 |       }
      1003 |     } catch (e) {

      at error (src/App.jsx:1000:17)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 350.18631539565354,
        y: 433.8298112101511,
        size: 3.198438435459268,
        opacity: 0.3681130576827993,
        speed: 0.2185642107117297,
        color: 'rgba(139, 69, 19, ',
        type: 'circle',
        rotation: 5.772306346287184,
        rotationSpeed: -0.0053462164896355404,
        twinkle: 5.554844187563926,
        twinkleSpeed: 0.013048558345940372
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.warn
      ⚠️ Error fetching complete recipe data for ID: search-1: TypeError: response.text is not a function
          at text (/workspace/frontend/src/App.jsx:218:42)
          at searchRecipes (/workspace/frontend/src/App.jsx:1541:34)

      249 |       }
      250 |     } catch (error) {
    > 251 |       console.warn(`⚠️ Error fetching complete recipe data for ID: ${recipeId}:`, error);
          |               ^
      252 |       return null;
      253 |     }
      254 |   }

      at warn (src/App.jsx:251:15)
      at searchRecipes (src/App.jsx:1541:34)

    console.warn
      ⚠️ [1/1] KV fetch failed for recipe search-1, using search result

      1545 |           } else {
      1546 |             // Fallback to search result if KV fetch fails
    > 1547 |             console.warn(`⚠️ [${i + 1}/${result.results.length}] KV fetch failed for recipe ${node.id}, using search result`);
           |                     ^
      1548 |             completeResults.push({ id: node.id, data: node.properties });
      1549 |           }
      1550 |         }

      at warn (src/App.jsx:1547:21)

    console.error
      ❌ Failed to fetch recommendations: undefined

       998 |         }
       999 |       } else {
    > 1000 |         console.error('❌ Failed to fetch recommendations:', res.status);
           |                 ^
      1001 |         setRecipes([]);
      1002 |       }
      1003 |     } catch (e) {

      at error (src/App.jsx:1000:17)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 618.1482033175248,
        y: 219.93666647983997,
        size: 2.8521577365404545,
        opacity: 0.4988065646390384,
        speed: 0.22234406268994267,
        color: 'rgba(34, 139, 34, ',
        type: 'leaf',
        rotation: 5.571259623651602,
        rotationSpeed: 0.002175397628434945,
        twinkle: 0.2321122946397796,
        twinkleSpeed: 0.007784319920070559
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.warn
      ⚠️ Error fetching complete recipe data for ID: search-1: TypeError: response.text is not a function
          at text (/workspace/frontend/src/App.jsx:218:42)
          at searchRecipes (/workspace/frontend/src/App.jsx:1541:34)

      249 |       }
      250 |     } catch (error) {
    > 251 |       console.warn(`⚠️ Error fetching complete recipe data for ID: ${recipeId}:`, error);
          |               ^
      252 |       return null;
      253 |     }
      254 |   }

      at warn (src/App.jsx:251:15)
      at searchRecipes (src/App.jsx:1541:34)

    console.warn
      ⚠️ [1/1] KV fetch failed for recipe search-1, using search result

      1545 |           } else {
      1546 |             // Fallback to search result if KV fetch fails
    > 1547 |             console.warn(`⚠️ [${i + 1}/${result.results.length}] KV fetch failed for recipe ${node.id}, using search result`);
           |                     ^
      1548 |             completeResults.push({ id: node.id, data: node.properties });
      1549 |           }
      1550 |         }

      at warn (src/App.jsx:1547:21)

  ● Search Functionality and Glass Panel Integration › Recipe Selection from Search Results › should handle recipe selection from search results

    expect(element).not.toBeInTheDocument()

    expected document not to contain element, found <h1 class="recipe-fullscreen-title">Chicken Recipe</h1> instead

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<canvas[39m
            [33mclass[39m=[32m"seasoning-background"[39m
            [33mheight[39m=[32m"768"[39m
            [33mstyle[39m=[32m"display: block; position: fixed; top: 0px; left: 0px; width: 100vw; height: 100vh; z-index: -1; pointer-events: none;"[39m
            [33mwidth[39m=[32m"1024"[39m
          [36m/>[39m
          [36m<div[39m
            [33mclass[39m=[32m"header-container"[39m
          [36m>[39m
            [36m<h1[39m
              [33mclass[39m=[32m"title"[39m
            [36m>[39m
              [36m<img[39m
                [33malt[39m=[32m"Seasoned"[39m
                [33mclass[39m=[32m"title-icon"[39m
                [33msrc[39m=[32m"/spoon.svg"[39m
              [36m/>[39m
              [0mSeasoned[0m
              [36m<div[39m
                [33mclass[39m=[32m"title-search  "[39m
              [36m>[39m
                [36m<input[39m
                  [33maria-label[39m=[32m"Search recipes"[39m
                  [33mclass[39m=[32m"title-search-input"[39m
                  [33mplaceholder[39m=[32m"Search recipes or paste a URL to clip..."[39m
                  [33mtype[39m=[32m"text"[39m
                  [33mvalue[39m=[32m""[39m
                [36m/>[39m
                [36m<button[39m
                  [33maria-label[39m=[32m"Search"[39m
                  [33mclass[39m=[32m"title-search-button "[39m
                  [33mtitle[39m=[32m"Search recipes"[39m
                [36m>[39m
                  [36m<svg[39m
                    [33mfill[39m=[32m"none"[39m
                    [33mheight[39m=[32m"18"[39m
                    [33mstroke[39m=[32m"currentColor"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                    [33mviewBox[39m=[32m"0 0 24 24"[39m
                    [33mwidth[39m=[32m"18"[39m
                  [36m>[39m
                    [36m<circle[39m
                      [33mcx[39m=[32m"11"[39m
                      [33mcy[39m=[32m"11"[39m
                      [33mr[39m=[32m"8"[39m
                    [36m/>[39m
                    [36m<path[39m
                      [33md[39m=[32m"m21 21-4.35-4.35"[39m
                    [36m/>[39m
                  [36m</svg>[39m
                [36m</button>[39m
              [36m</div>[39m
            [36m</h1>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"container recipe-view-active"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"recipes-list"[39m
            [36m/>[39m
            [36m<div[39m
              [33mclass[39m=[32m"recipe-fullscreen"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"recipe-top-header"[39m
              [36m>[39m
                [36m<button[39m
                  [33mclass[39m=[32m"back-btn"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"back-arrow"[39m
                  [36m>[39m
                    [0m←[0m
                  [36m</span>[39m
                [36m</button>[39m
                [36m<button[39m
                  [33mclass[39m=[32m"fab-share-trigger"[39m
                  [33mtitle[39m=[32m"More actions"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"share-icon"[39m
                  [36m>[39m
                    [0m⋮[0m
                  [36m</span>[39m
                [36m</button>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mclass[39m=[32m"share-panel "[39m
              [36m>[39m
                [36m<button[39m
                  [33mclass[39m=[32m"share-panel-item delete-action"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"action-icon"[39m
                  [36m>[39m
                    [0m🗑️[0m
                  [36m</span>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"action-label"[39m
                  [36m>[39m
                    [0mDelete Recipe[0m
                  [36m</span>[39m
                [36m</button>[39m
                [36m<button[39m
                  [33mclass[39m=[32m"share-panel-item share-action"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"action-icon"[39m
                  [36m>[39m
                    [0m🔗[0m
                  [36m</span>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"action-label"[39m
                  [36m>[39m
                    [0mShare Recipe[0m
                  [36m</span>[39m
                [36m</button>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mclass[39m=[32m"recipe-title-section"[39m
                [33mstyle[39m=[32m"opacity: 1; transition: opacity 0.2s ease-out;"[39m
              [36m>[39m
                [36m<h1[39m
                  [33mclass[39m=[32m"recipe-fullscreen-title"[39m
                [36m>[39m
                  [0mChicken Recipe[0m
                [36m</h1>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"recipe-card-time"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"time-icon"[39m
                  [36m>[39m
                    [0m⏱️[0m
                  [36m</span>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"no-time"[39m
                  [36m>[39m
                    [0m-[0m
                  [36m</span>[39m
                [36m</p>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-links"[39m
                [36m/>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mclass[39m=[32m"recipe-full-background"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-full-background-placeholder"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"placeholder-gradient"[39m
                  [36m/>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mclass[39m=[32m"recipe-fullscreen-content "[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-panel glass"[39m
                [36m>[39m
                  [36m<h2>[39m
                    [0mIngredients[0m
                  [36m</h2>[39m
                  [36m<ul[39m
                    [33mclass[39m=[32m"ingredients-list"[39m
                  [36m>[39m
                    [36m<li>[39m
                      [0mchicken[0m
                    [36m</li>[39m
                    [36m<li>[39m
                      [0mspices[0m
                    [36m</li>[39m
                  [36m</ul>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-panel glass"[39m
                [36m>[39m
                  [36m<h2>[39m
                    [0mInstructions[0m
                  [36m</h2>[39m
                  [36m<ol[39m
                    [33mclass[39m=[32m"instructions-list"[39m
                  [36m>[39m
                    [36m<li>[39m
                      [36m<span>[39m
                        [0mCook chicken[0m
                      [36m</span>[39m
                    [36m</li>[39m
                  [36m</ol>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      504 |       await waitFor(() => {
      505 |         expect(searchInput.value).toBe('');
    > 506 |         expect(screen.queryByText('Chicken Recipe')).not.toBeInTheDocument();
          |                                                          ^
      507 |       });
      508 |     });
      509 |   });

      at toBeInTheDocument (src/__tests__/SearchFunctionality.test.jsx:506:58)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

FAIL src/__tests__/IngredientFormatting.test.jsx
  ● Console

    console.error
      Error getting recipes from recommendations: TypeError: Cannot read properties of undefined (reading 'finally')
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:152:7)
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:765:25)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:270:15)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)

      1002 |       }
      1003 |     } catch (e) {
    > 1004 |       console.error('Error getting recipes from recommendations:', e);
           |               ^
      1005 |       setRecipes([]);
      1006 |       setIsRefreshingRecipes(false);
      1007 |     } finally {

      at error (src/App.jsx:1004:15)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 528.1861563069015,
        y: 176.9194898101553,
        size: 2.419122377946565,
        opacity: 0.8953441621503753,
        speed: 0.26142092448629306,
        color: 'rgba(220, 53, 69, ',
        type: 'pepper',
        rotation: 4.467858191881322,
        rotationSpeed: -0.003949968312823407,
        twinkle: 1.1169386293389785,
        twinkleSpeed: 0.007283826295857878
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.error
      Error getting recipes from recommendations: TypeError: Cannot read properties of undefined (reading 'finally')
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:152:7)
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:765:25)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:270:15)

      1002 |       }
      1003 |     } catch (e) {
    > 1004 |       console.error('Error getting recipes from recommendations:', e);
           |               ^
      1005 |       setRecipes([]);
      1006 |       setIsRefreshingRecipes(false);
      1007 |     } finally {

      at error (src/App.jsx:1004:15)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 143.25301916148464,
        y: 312.3639391462191,
        size: 3.567591133113381,
        opacity: 0.7037873070590379,
        speed: 0.24837191894320343,
        color: 'rgba(34, 139, 34, ',
        type: 'leaf',
        rotation: 1.9391617788423083,
        rotationSpeed: -0.0002312241505353274,
        twinkle: 4.831008062754481,
        twinkleSpeed: 0.009663392075985065
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.error
      Error getting recipe categories: TypeError: Cannot read properties of undefined (reading 'finally')
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:152:7)
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:710:25)
          at getRecipeCategories (/workspace/frontend/src/App.jsx:269:15)
          at initializeRecipes (/workspace/frontend/src/App.jsx:287:5)
          at commitHookEffectListMount (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
          at commitPassiveMountOnFiber (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
          at commitPassiveMountEffects_complete (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
          at commitPassiveMountEffects_begin (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
          at commitPassiveMountEffects (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
          at flushPassiveEffectsImpl (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
          at flushPassiveEffects (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
          at /workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:26808:9
          at flushActQueue (/workspace/frontend/node_modules/react/cjs/react.development.js:2667:24)
          at act (/workspace/frontend/node_modules/react/cjs/react.development.js:2582:11)
          at /workspace/frontend/node_modules/@testing-library/react/dist/act-compat.js:47:25
          at renderRoot (/workspace/frontend/node_modules/@testing-library/react/dist/pure.js:190:26)
          at render (/workspace/frontend/node_modules/@testing-library/react/dist/pure.js:292:10)
          at Object.<anonymous> (/workspace/frontend/src/__tests__/IngredientFormatting.test.jsx:231:13)
          at Promise.finally.completed (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1559:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1499:10)
          at _callCircusTest (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1009:40)
          at _runTest (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:949:3)
          at _runTestsForDescribeBlock (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
          at _runTestsForDescribeBlock (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
          at _runTestsForDescribeBlock (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
          at run (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
          at runAndTransformResultsToJestFormat (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1920:21)
          at jestAdapter (/workspace/frontend/node_modules/jest-circus/build/runner.js:101:19)
          at runTestInternal (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:275:16)
          at runTest (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:343:7)
          at Object.worker (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:497:12)

      735 |       return [];
      736 |     } catch (e) {
    > 737 |       console.error('Error getting recipe categories:', e);
          |               ^
      738 |       return [];
      739 |     }
      740 |   }

      at error (src/App.jsx:737:15)
      at getRecipeCategories (src/App.jsx:269:15)
      at initializeRecipes (src/App.jsx:287:5)
      at commitHookEffectListMount (node_modules/react-dom/cjs/react-dom.development.js:23189:26)
      at commitPassiveMountOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24970:11)
      at commitPassiveMountEffects_complete (node_modules/react-dom/cjs/react-dom.development.js:24930:9)
      at commitPassiveMountEffects_begin (node_modules/react-dom/cjs/react-dom.development.js:24917:7)
      at commitPassiveMountEffects (node_modules/react-dom/cjs/react-dom.development.js:24905:3)
      at flushPassiveEffectsImpl (node_modules/react-dom/cjs/react-dom.development.js:27078:3)
      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom.development.js:27023:14)
      at node_modules/react-dom/cjs/react-dom.development.js:26808:9
      at flushActQueue (node_modules/react/cjs/react.development.js:2667:24)
      at act (node_modules/react/cjs/react.development.js:2582:11)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/__tests__/IngredientFormatting.test.jsx:231:13)

    console.error
      Error getting recipes from recommendations: TypeError: Cannot read properties of undefined (reading 'finally')
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:152:7)
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:765:25)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:270:15)

      1002 |       }
      1003 |     } catch (e) {
    > 1004 |       console.error('Error getting recipes from recommendations:', e);
           |               ^
      1005 |       setRecipes([]);
      1006 |       setIsRefreshingRecipes(false);
      1007 |     } finally {

      at error (src/App.jsx:1004:15)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      Error checking clipper worker health: TypeError: Cannot read properties of undefined (reading 'ok')
          at ok (/workspace/frontend/src/App.jsx:1048:15)

      1054 |       }
      1055 |     } catch (e) {
    > 1056 |       console.error('Error checking clipper worker health:', e);
           |               ^
      1057 |       setClipperStatus('unavailable');
      1058 |     }
      1059 |   }

      at error (src/App.jsx:1056:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 280.7092809137407,
        y: 175.93416894289948,
        size: 2.619047523323058,
        opacity: 0.5728902980153766,
        speed: 0.18415715753163814,
        color: 'rgba(220, 53, 69, ',
        type: 'pepper',
        rotation: 6.0002300735192335,
        rotationSpeed: 0.009525299624349596,
        twinkle: 6.246250639684401,
        twinkleSpeed: 0.005766409728912285
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

  ● Ingredient Formatting in App › Ingredient display in recipe view › displays formatted ingredients when viewing a recipe

    Unable to find an element with the text: Add Recipe. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<canvas[39m
          [33mclass[39m=[32m"seasoning-background"[39m
          [33mheight[39m=[32m"768"[39m
          [33mstyle[39m=[32m"display: block; position: fixed; top: 0px; left: 0px; width: 100vw; height: 100vh; z-index: -1; pointer-events: none;"[39m
          [33mwidth[39m=[32m"1024"[39m
        [36m/>[39m
        [36m<div[39m
          [33mclass[39m=[32m"header-container"[39m
        [36m>[39m
          [36m<h1[39m
            [33mclass[39m=[32m"title"[39m
          [36m>[39m
            [36m<img[39m
              [33malt[39m=[32m"Seasoned"[39m
              [33mclass[39m=[32m"title-icon"[39m
              [33msrc[39m=[32m"/spoon.svg"[39m
            [36m/>[39m
            [0mSeasoned[0m
            [36m<div[39m
              [33mclass[39m=[32m"title-search  "[39m
            [36m>[39m
              [36m<input[39m
                [33maria-label[39m=[32m"Search recipes"[39m
                [33mclass[39m=[32m"title-search-input"[39m
                [33mplaceholder[39m=[32m"Search recipes or paste a URL to clip..."[39m
                [33mtype[39m=[32m"text"[39m
                [33mvalue[39m=[32m""[39m
              [36m/>[39m
              [36m<button[39m
                [33maria-label[39m=[32m"Search"[39m
                [33mclass[39m=[32m"title-search-button "[39m
                [33mtitle[39m=[32m"Search recipes"[39m
              [36m>[39m
                [36m<svg[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mheight[39m=[32m"18"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mstroke-linecap[39m=[32m"round"[39m
                  [33mstroke-linejoin[39m=[32m"round"[39m
                  [33mstroke-width[39m=[32m"2"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                  [33mwidth[39m=[32m"18"[39m
                [36m>[39m
                  [36m<circle[39m
                    [33mcx[39m=[32m"11"[39m
                    [33mcy[39m=[32m"11"[39m
                    [33mr[39m=[32m"8"[39m
                  [36m/>[39m
                  [36m<path[39m
                    [33md[39m=[32m"m21 21-4.35-4.35"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</button>[39m
            [36m</div>[39m
          [36m</h1>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"container "[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipes-list"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"no-recipes-found"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"no-recipes-content"[39m
              [36m>[39m
                [36m<h2>[39m
                  [0mNo Recipes Found[0m
                [36m</h2>[39m
                [36m<p>[39m
                  [0mWe couldn't load any recipes at the moment. This might be due to:[0m
                [36m</p>[39m
                [36m<ul>[39m
                  [36m<li>[39m
                    [0mNetwork connectivity issues[0m
                  [36m</li>[39m
                  [36m<li>[39m
                    [0mSearch service temporarily unavailable[0m
                  [36m</li>[39m
                  [36m<li>[39m
                    [0mNo recipes matching current recommendations[0m
                  [36m</li>[39m
                [36m</ul>[39m
                [36m<button[39m
                  [33mclass[39m=[32m"retry-button"[39m
                [36m>[39m
                  [0m🔄 Try Again[0m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      139 |
      140 |       // Wait for the app to initialize
    > 141 |       await waitFor(() => {
          |                    ^
      142 |         expect(screen.getByText('Add Recipe')).toBeInTheDocument();
      143 |       });
      144 |

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (src/__tests__/IngredientFormatting.test.jsx:141:20)

  ● Ingredient Formatting in App › Ingredient display in recipe view › formats ingredients in recipe preview when clipping

    Unable to find an element with the placeholder text of: Enter recipe URL to clip...

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<canvas[39m
          [33mclass[39m=[32m"seasoning-background"[39m
          [33mheight[39m=[32m"768"[39m
          [33mstyle[39m=[32m"display: block; position: fixed; top: 0px; left: 0px; width: 100vw; height: 100vh; z-index: -1; pointer-events: none;"[39m
          [33mwidth[39m=[32m"1024"[39m
        [36m/>[39m
        [36m<div[39m
          [33mclass[39m=[32m"header-container"[39m
        [36m>[39m
          [36m<h1[39m
            [33mclass[39m=[32m"title"[39m
          [36m>[39m
            [36m<img[39m
              [33malt[39m=[32m"Seasoned"[39m
              [33mclass[39m=[32m"title-icon"[39m
              [33msrc[39m=[32m"/spoon.svg"[39m
            [36m/>[39m
            [0mSeasoned[0m
            [36m<div[39m
              [33mclass[39m=[32m"title-search  "[39m
            [36m>[39m
              [36m<input[39m
                [33maria-label[39m=[32m"Search recipes"[39m
                [33mclass[39m=[32m"title-search-input"[39m
                [33mplaceholder[39m=[32m"Search recipes or paste a URL to clip..."[39m
                [33mtype[39m=[32m"text"[39m
                [33mvalue[39m=[32m""[39m
              [36m/>[39m
              [36m<button[39m
                [33maria-label[39m=[32m"Search"[39m
                [33mclass[39m=[32m"title-search-button "[39m
                [33mtitle[39m=[32m"Search recipes"[39m
              [36m>[39m
                [36m<svg[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mheight[39m=[32m"18"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mstroke-linecap[39m=[32m"round"[39m
                  [33mstroke-linejoin[39m=[32m"round"[39m
                  [33mstroke-width[39m=[32m"2"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                  [33mwidth[39m=[32m"18"[39m
                [36m>[39m
                  [36m<circle[39m
                    [33mcx[39m=[32m"11"[39m
                    [33mcy[39m=[32m"11"[39m
                    [33mr[39m=[32m"8"[39m
                  [36m/>[39m
                  [36m<path[39m
                    [33md[39m=[32m"m21 21-4.35-4.35"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</button>[39m
            [36m</div>[39m
          [36m</h1>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"container "[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipes-list"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"no-recipes-found"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"no-recipes-content"[39m
              [36m>[39m
                [36m<h2>[39m
                  [0mNo Recipes Found[0m
                [36m</h2>[39m
                [36m<p>[39m
                  [0mWe couldn't load any recipes at the moment. This might be due to:[0m
                [36m</p>[39m
                [36m<ul>[39m
                  [36m<li>[39m
                    [0mNetwork connectivity issues[0m
                  [36m</li>[39m
                  [36m<li>[39m
                    [0mSearch service temporarily unavailable[0m
                  [36m</li>[39m
                  [36m<li>[39m
                    [0mNo recipes matching current recommendations[0m
                  [36m</li>[39m
                [36m</ul>[39m
                [36m<button[39m
                  [33mclass[39m=[32m"retry-button"[39m
                [36m>[39m
                  [0m🔄 Try Again[0m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      197 |
      198 |       // Wait for the app to initialize
    > 199 |       await waitFor(() => {
          |                    ^
      200 |         expect(screen.getByPlaceholderText('Enter recipe URL to clip...')).toBeInTheDocument();
      201 |       });
      202 |

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (src/__tests__/IngredientFormatting.test.jsx:199:20)

  ● Ingredient Formatting in App › Edge cases and error handling › handles recipes with missing ingredients gracefully

    Unable to find an element with the text: Test Recipe with Decimals. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<canvas[39m
          [33mclass[39m=[32m"seasoning-background"[39m
          [33mheight[39m=[32m"768"[39m
          [33mstyle[39m=[32m"display: block; position: fixed; top: 0px; left: 0px; width: 100vw; height: 100vh; z-index: -1; pointer-events: none;"[39m
          [33mwidth[39m=[32m"1024"[39m
        [36m/>[39m
        [36m<div[39m
          [33mclass[39m=[32m"header-container"[39m
        [36m>[39m
          [36m<h1[39m
            [33mclass[39m=[32m"title"[39m
          [36m>[39m
            [36m<img[39m
              [33malt[39m=[32m"Seasoned"[39m
              [33mclass[39m=[32m"title-icon"[39m
              [33msrc[39m=[32m"/spoon.svg"[39m
            [36m/>[39m
            [0mSeasoned[0m
            [36m<div[39m
              [33mclass[39m=[32m"title-search  "[39m
            [36m>[39m
              [36m<input[39m
                [33maria-label[39m=[32m"Search recipes"[39m
                [33mclass[39m=[32m"title-search-input"[39m
                [33mplaceholder[39m=[32m"Search recipes or paste a URL to clip..."[39m
                [33mtype[39m=[32m"text"[39m
                [33mvalue[39m=[32m""[39m
              [36m/>[39m
              [36m<button[39m
                [33maria-label[39m=[32m"Search"[39m
                [33mclass[39m=[32m"title-search-button "[39m
                [33mtitle[39m=[32m"Search recipes"[39m
              [36m>[39m
                [36m<svg[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mheight[39m=[32m"18"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mstroke-linecap[39m=[32m"round"[39m
                  [33mstroke-linejoin[39m=[32m"round"[39m
                  [33mstroke-width[39m=[32m"2"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                  [33mwidth[39m=[32m"18"[39m
                [36m>[39m
                  [36m<circle[39m
                    [33mcx[39m=[32m"11"[39m
                    [33mcy[39m=[32m"11"[39m
                    [33mr[39m=[32m"8"[39m
                  [36m/>[39m
                  [36m<path[39m
                    [33md[39m=[32m"m21 21-4.35-4.35"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</button>[39m
            [36m</div>[39m
          [36m</h1>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"container "[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipes-list"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"no-recipes-found"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"no-recipes-content"[39m
              [36m>[39m
                [36m<h2>[39m
                  [0mNo Recipes Found[0m
                [36m</h2>[39m
                [36m<p>[39m
                  [0mWe couldn't load any recipes at the moment. This might be due to:[0m
                [36m</p>[39m
                [36m<ul>[39m
                  [36m<li>[39m
                    [0mNetwork connectivity issues[0m
                  [36m</li>[39m
                  [36m<li>[39m
                    [0mSearch service temporarily unavailable[0m
                  [36m</li>[39m
                  [36m<li>[39m
                    [0mNo recipes matching current recommendations[0m
                  [36m</li>[39m
                [36m</ul>[39m
                [36m<button[39m
                  [33mclass[39m=[32m"retry-button"[39m
                [36m>[39m
                  [0m🔄 Try Again[0m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      236 |       window.dispatchEvent(event);
      237 |
    > 238 |       await waitFor(() => {
          |                    ^
      239 |         expect(screen.getByText('Test Recipe with Decimals')).toBeInTheDocument();
      240 |       });
      241 |

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (src/__tests__/IngredientFormatting.test.jsx:238:20)

FAIL src/__tests__/SwipeableRecipeGrid.test.jsx
  ● SwipeableRecipeGrid › Navigation Button State Management › initially shows only right button when scrollable

    TestingLibraryElementError: Unable to find a label with the text of: Scroll right

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"carousel-container"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipe-grid category-recipes carousel-layout"[39m
          [36m>[39m
            [36m<div>[39m
              [0mItem 1[0m
            [36m</div>[39m
            [36m<div>[39m
              [0mItem 2[0m
            [36m</div>[39m
            [36m<div>[39m
              [0mItem 3[0m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      109 |
      110 |       expect(screen.queryByLabelText('Scroll left')).not.toBeInTheDocument();
    > 111 |       expect(screen.getByLabelText('Scroll right')).toBeInTheDocument();
          |                     ^
      112 |     });
      113 |
      114 |     it('shows both buttons when scrolled to middle', () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:111:38)
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByLabelText (src/__tests__/SwipeableRecipeGrid.test.jsx:111:21)

  ● SwipeableRecipeGrid › Navigation Button State Management › shows both buttons when scrolled to middle

    TestingLibraryElementError: Unable to find a label with the text of: Scroll left

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"carousel-container"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipe-grid category-recipes carousel-layout"[39m
          [36m>[39m
            [36m<div>[39m
              [0mItem 1[0m
            [36m</div>[39m
            [36m<div>[39m
              [0mItem 2[0m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      136 |       );
      137 |
    > 138 |       expect(screen.getByLabelText('Scroll left')).toBeInTheDocument();
          |                     ^
      139 |       expect(screen.getByLabelText('Scroll right')).toBeInTheDocument();
      140 |     });
      141 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:111:38)
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByLabelText (src/__tests__/SwipeableRecipeGrid.test.jsx:138:21)

  ● SwipeableRecipeGrid › Navigation Button State Management › shows only left button when scrolled to end

    TestingLibraryElementError: Unable to find a label with the text of: Scroll left

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"carousel-container"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipe-grid category-recipes carousel-layout"[39m
          [36m>[39m
            [36m<div>[39m
              [0mItem 1[0m
            [36m</div>[39m
            [36m<div>[39m
              [0mItem 2[0m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      164 |       );
      165 |
    > 166 |       expect(screen.getByLabelText('Scroll left')).toBeInTheDocument();
          |                     ^
      167 |       expect(screen.queryByLabelText('Scroll right')).not.toBeInTheDocument();
      168 |     });
      169 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:111:38)
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByLabelText (src/__tests__/SwipeableRecipeGrid.test.jsx:166:21)

  ● SwipeableRecipeGrid › Scroll Navigation › scrolls right when right button clicked

    TestingLibraryElementError: Unable to find a label with the text of: Scroll right

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"carousel-container"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipe-grid category-recipes carousel-layout"[39m
          [36m>[39m
            [36m<div>[39m
              [0mItem 1[0m
            [36m</div>[39m
            [36m<div>[39m
              [0mItem 2[0m
            [36m</div>[39m
            [36m<div>[39m
              [0mItem 3[0m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      222 |       );
      223 |
    > 224 |       const rightButton = screen.getByLabelText('Scroll right');
          |                                  ^
      225 |       fireEvent.click(rightButton);
      226 |
      227 |       expect(mockScrollBy).toHaveBeenCalledWith({

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:111:38)
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByLabelText (src/__tests__/SwipeableRecipeGrid.test.jsx:224:34)

  ● SwipeableRecipeGrid › Scroll Navigation › scrolls left when left button clicked

    TestingLibraryElementError: Unable to find a label with the text of: Scroll left

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"carousel-container"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipe-grid category-recipes carousel-layout"[39m
          [36m>[39m
            [36m<div>[39m
              [0mItem 1[0m
            [36m</div>[39m
            [36m<div>[39m
              [0mItem 2[0m
            [36m</div>[39m
            [36m<div>[39m
              [0mItem 3[0m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      256 |       );
      257 |
    > 258 |       const leftButton = screen.getByLabelText('Scroll left');
          |                                 ^
      259 |       fireEvent.click(leftButton);
      260 |
      261 |       expect(mockScrollBy).toHaveBeenCalledWith({

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:111:38)
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByLabelText (src/__tests__/SwipeableRecipeGrid.test.jsx:258:33)

  ● SwipeableRecipeGrid › Event Listeners › adds scroll event listener on mount

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "scroll", Any<Function>

    Number of calls: 0

      300 |       render(<SwipeableRecipeGrid />);
      301 |
    > 302 |       expect(mockAddEventListener).toHaveBeenCalledWith('scroll', expect.any(Function));
          |                                    ^
      303 |     });
      304 |
      305 |     it('removes event listeners on unmount', () => {

      at Object.toHaveBeenCalledWith (src/__tests__/SwipeableRecipeGrid.test.jsx:302:36)

  ● SwipeableRecipeGrid › Event Listeners › removes event listeners on unmount

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "scroll", Any<Function>

    Number of calls: 0

      324 |       unmount();
      325 |
    > 326 |       expect(mockRemoveEventListener).toHaveBeenCalledWith('scroll', expect.any(Function));
          |                                       ^
      327 |     });
      328 |
      329 |     it('handles scroll events', () => {

      at Object.toHaveBeenCalledWith (src/__tests__/SwipeableRecipeGrid.test.jsx:326:39)

  ● SwipeableRecipeGrid › MutationObserver › observes child changes

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

    - Object {
    -   "addEventListener": [Function mockConstructor],
    -   "classList": Object {
    -     "add": [Function mockConstructor],
    -   },
    -   "clientWidth": 500,
    -   "removeEventListener": [Function mockConstructor],
    -   "scrollBy": [Function mockConstructor],
    -   "scrollLeft": 0,
    -   "scrollWidth": 1000,
    - }
    + <div
    +   class="recipe-grid category-recipes carousel-layout"
    + >
    +   <div>
    +     Item 1
    +   </div>
    + </div>,
      {"childList": true, "subtree": true},

    Number of calls: 1

      404 |
      405 |       expect(MutationObserverMock).toHaveBeenCalled();
    > 406 |       expect(mockObserve).toHaveBeenCalledWith(
          |                           ^
      407 |         mockRef.current,
      408 |         { childList: true, subtree: true }
      409 |       );

      at Object.toHaveBeenCalledWith (src/__tests__/SwipeableRecipeGrid.test.jsx:406:27)

  ● SwipeableRecipeGrid › Window Resize › handles window resize events

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has type:  function
    Received has value: [Function anonymous]

      499 |
      500 |       // Check that resize listener is added
    > 501 |       expect(window.addEventListener).toHaveBeenCalledWith('resize', expect.any(Function));
          |                                       ^
      502 |     });
      503 |
      504 |     it('removes resize listener on unmount', () => {

      at Object.toHaveBeenCalledWith (src/__tests__/SwipeableRecipeGrid.test.jsx:501:39)

  ● SwipeableRecipeGrid › Accessibility › navigation buttons have proper ARIA labels

    TestingLibraryElementError: Unable to find a label with the text of: Scroll left

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"carousel-container"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipe-grid category-recipes carousel-layout"[39m
          [36m/>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      560 |       render(<SwipeableRecipeGrid />);
      561 |
    > 562 |       const leftButton = screen.getByLabelText('Scroll left');
          |                                 ^
      563 |       const rightButton = screen.getByLabelText('Scroll right');
      564 |
      565 |       expect(leftButton).toHaveAttribute('aria-label', 'Scroll left');

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:111:38)
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByLabelText (src/__tests__/SwipeableRecipeGrid.test.jsx:562:33)

  ● SwipeableRecipeGrid › Accessibility › maintains keyboard navigation

    TestingLibraryElementError: Unable to find a label with the text of: Scroll left

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"carousel-container"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipe-grid category-recipes carousel-layout"[39m
          [36m>[39m
            [36m<button>[39m
              [0mRecipe 1[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mRecipe 2[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      591 |       );
      592 |
    > 593 |       const leftButton = screen.getByLabelText('Scroll left');
          |                                 ^
      594 |       
      595 |       // Simulate keyboard interaction
      596 |       fireEvent.keyDown(leftButton, { key: 'Enter' });

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:111:38)
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByLabelText (src/__tests__/SwipeableRecipeGrid.test.jsx:593:33)

FAIL src/__tests__/VideoPopupBranches.test.jsx
  ● VideoPopup Branch Coverage › Visibility Branches › renders nothing when not visible

    expect(received).toBeNull()

    Received: <div class="video-popup" style="position: fixed; left: 20px; top: 488px; width: 600px; height: 450px; z-index: 4000; cursor: default;"><div class="video-popup-header"><div class="video-popup-title">🎥 Recipe Video</div><div class="video-popup-controls"><button class="video-popup-minimize" title="Minimize">−</button><button class="video-popup-maximize" title="Maximize">□</button><button class="video-popup-close" title="Close">×</button></div></div><div class="video-popup-content"><iframe allowfullscreen="" frameborder="0" height="100%" src="https://www.youtube.com/embed/test" title="Recipe Video" width="100%" /></div><div class="video-popup-resize-handle" style="position: absolute; bottom: 0px; right: 0px; width: 20px; height: 20px; cursor: nw-resize; background: rgba(255, 255, 255, 0.3); border-radius: 0 0 8px 0;" /></div>

      21 |       );
      22 |
    > 23 |       expect(container.firstChild).toBeNull();
         |                                    ^
      24 |     });
      25 |
      26 |     it('renders popup when visible', () => {

      at Object.toBeNull (src/__tests__/VideoPopupBranches.test.jsx:23:36)

  ● VideoPopup Branch Coverage › Visibility Branches › renders popup when visible

    TestingLibraryElementError: Unable to find an accessible element with the role "dialog"

    Here are the accessible roles:

      button:

      Name "−":
      [36m<button[39m
        [33mclass[39m=[32m"video-popup-minimize"[39m
        [33mtitle[39m=[32m"Minimize"[39m
      [36m/>[39m

      Name "□":
      [36m<button[39m
        [33mclass[39m=[32m"video-popup-maximize"[39m
        [33mtitle[39m=[32m"Maximize"[39m
      [36m/>[39m

      Name "×":
      [36m<button[39m
        [33mclass[39m=[32m"video-popup-close"[39m
        [33mtitle[39m=[32m"Close"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"video-popup"[39m
          [33mstyle[39m=[32m"position: fixed; left: 20px; top: 488px; width: 600px; height: 450px; z-index: 4000; cursor: default;"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-header"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"video-popup-title"[39m
            [36m>[39m
              [0m🎥 Recipe Video[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"video-popup-controls"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-minimize"[39m
                [33mtitle[39m=[32m"Minimize"[39m
              [36m>[39m
                [0m−[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-maximize"[39m
                [33mtitle[39m=[32m"Maximize"[39m
              [36m>[39m
                [0m□[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-close"[39m
                [33mtitle[39m=[32m"Close"[39m
              [36m>[39m
                [0m×[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-content"[39m
          [36m>[39m
            [36m<iframe[39m
              [33mallowfullscreen[39m=[32m""[39m
              [33mframeborder[39m=[32m"0"[39m
              [33mheight[39m=[32m"100%"[39m
              [33msrc[39m=[32m"https://www.youtube.com/embed/test"[39m
              [33mtitle[39m=[32m"Recipe Video"[39m
              [33mwidth[39m=[32m"100%"[39m
            [36m/>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-resize-handle"[39m
            [33mstyle[39m=[32m"position: absolute; bottom: 0px; right: 0px; width: 20px; height: 20px; cursor: nw-resize; background: rgba(255, 255, 255, 0.3); border-radius: 0 0 8px 0;"[39m
          [36m/>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      33 |       );
      34 |
    > 35 |       expect(screen.getByRole('dialog')).toBeInTheDocument();
         |                     ^
      36 |     });
      37 |   });
      38 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (src/__tests__/VideoPopupBranches.test.jsx:35:21)

  ● VideoPopup Branch Coverage › Video URL Branches › handles empty video URL

    TestingLibraryElementError: Unable to find an element with the title: Recipe Video.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"video-popup"[39m
          [33mstyle[39m=[32m"position: fixed; left: 20px; top: 488px; width: 600px; height: 450px; z-index: 4000; cursor: default;"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-header"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"video-popup-title"[39m
            [36m>[39m
              [0m🎥 Recipe Video[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"video-popup-controls"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-minimize"[39m
                [33mtitle[39m=[32m"Minimize"[39m
              [36m>[39m
                [0m−[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-maximize"[39m
                [33mtitle[39m=[32m"Maximize"[39m
              [36m>[39m
                [0m□[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-close"[39m
                [33mtitle[39m=[32m"Close"[39m
              [36m>[39m
                [0m×[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-content"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"video-error"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"video-error-content"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"video-error-icon"[39m
                [36m>[39m
                  [0m⚠️[0m
                [36m</span>[39m
                [36m<p>[39m
                  [0mUnable to load video[0m
                [36m</p>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"video-error-url"[39m
                [36m/>[39m
                [36m<a[39m
                  [33mclass[39m=[32m"video-error-link"[39m
                  [33mhref[39m=[32m""[39m
                  [33mrel[39m=[32m"noopener noreferrer"[39m
                  [33mtarget[39m=[32m"_blank"[39m
                [36m>[39m
                  [0mOpen in new tab[0m
                [36m</a>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-resize-handle"[39m
            [33mstyle[39m=[32m"position: absolute; bottom: 0px; right: 0px; width: 20px; height: 20px; cursor: nw-resize; background: rgba(255, 255, 255, 0.3); border-radius: 0 0 8px 0;"[39m
          [36m/>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

       99 |       );
      100 |
    > 101 |       const iframe = screen.getByTitle('Recipe Video');
          |                             ^
      102 |       expect(iframe).toHaveAttribute('src', '');
      103 |     });
      104 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByTitle (src/__tests__/VideoPopupBranches.test.jsx:101:29)

  ● VideoPopup Branch Coverage › Video URL Branches › handles null video URL

    TestingLibraryElementError: Unable to find an element with the title: Recipe Video.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"video-popup"[39m
          [33mstyle[39m=[32m"position: fixed; left: 20px; top: 488px; width: 600px; height: 450px; z-index: 4000; cursor: default;"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-header"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"video-popup-title"[39m
            [36m>[39m
              [0m🎥 Recipe Video[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"video-popup-controls"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-minimize"[39m
                [33mtitle[39m=[32m"Minimize"[39m
              [36m>[39m
                [0m−[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-maximize"[39m
                [33mtitle[39m=[32m"Maximize"[39m
              [36m>[39m
                [0m□[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-close"[39m
                [33mtitle[39m=[32m"Close"[39m
              [36m>[39m
                [0m×[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-content"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"video-error"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"video-error-content"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"video-error-icon"[39m
                [36m>[39m
                  [0m⚠️[0m
                [36m</span>[39m
                [36m<p>[39m
                  [0mUnable to load video[0m
                [36m</p>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"video-error-url"[39m
                [36m/>[39m
                [36m<a[39m
                  [33mclass[39m=[32m"video-error-link"[39m
                  [33mrel[39m=[32m"noopener noreferrer"[39m
                  [33mtarget[39m=[32m"_blank"[39m
                [36m>[39m
                  [0mOpen in new tab[0m
                [36m</a>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-resize-handle"[39m
            [33mstyle[39m=[32m"position: absolute; bottom: 0px; right: 0px; width: 20px; height: 20px; cursor: nw-resize; background: rgba(255, 255, 255, 0.3); border-radius: 0 0 8px 0;"[39m
          [36m/>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      112 |       );
      113 |
    > 114 |       const iframe = screen.getByTitle('Recipe Video');
          |                             ^
      115 |       expect(iframe).toHaveAttribute('src', '');
      116 |     });
      117 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByTitle (src/__tests__/VideoPopupBranches.test.jsx:114:29)

  ● VideoPopup Branch Coverage › Video URL Branches › handles non-YouTube URL

    expect(element).toHaveAttribute("src", "https://vimeo.com/123456") // element.getAttribute("src") === "https://vimeo.com/123456"

    Expected the element to have attribute:
      src="https://vimeo.com/123456"
    Received:
      src="https://player.vimeo.com/video/123456"

      126 |
      127 |       const iframe = screen.getByTitle('Recipe Video');
    > 128 |       expect(iframe).toHaveAttribute('src', 'https://vimeo.com/123456');
          |                      ^
      129 |     });
      130 |
      131 |     it('handles YouTube URL with timestamp', () => {

      at Object.toHaveAttribute (src/__tests__/VideoPopupBranches.test.jsx:128:22)

  ● VideoPopup Branch Coverage › Event Handler Branches › calls onClose when backdrop is clicked

    TestingLibraryElementError: Unable to find an accessible element with the role "dialog"

    Here are the accessible roles:

      button:

      Name "−":
      [36m<button[39m
        [33mclass[39m=[32m"video-popup-minimize"[39m
        [33mtitle[39m=[32m"Minimize"[39m
      [36m/>[39m

      Name "□":
      [36m<button[39m
        [33mclass[39m=[32m"video-popup-maximize"[39m
        [33mtitle[39m=[32m"Maximize"[39m
      [36m/>[39m

      Name "×":
      [36m<button[39m
        [33mclass[39m=[32m"video-popup-close"[39m
        [33mtitle[39m=[32m"Close"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"video-popup"[39m
          [33mstyle[39m=[32m"position: fixed; left: 20px; top: 488px; width: 600px; height: 450px; z-index: 4000; cursor: default;"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-header"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"video-popup-title"[39m
            [36m>[39m
              [0m🎥 Recipe Video[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"video-popup-controls"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-minimize"[39m
                [33mtitle[39m=[32m"Minimize"[39m
              [36m>[39m
                [0m−[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-maximize"[39m
                [33mtitle[39m=[32m"Maximize"[39m
              [36m>[39m
                [0m□[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-close"[39m
                [33mtitle[39m=[32m"Close"[39m
              [36m>[39m
                [0m×[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-content"[39m
          [36m>[39m
            [36m<iframe[39m
              [33mallowfullscreen[39m=[32m""[39m
              [33mframeborder[39m=[32m"0"[39m
              [33mheight[39m=[32m"100%"[39m
              [33msrc[39m=[32m"https://www.youtube.com/embed/test"[39m
              [33mtitle[39m=[32m"Recipe Video"[39m
              [33mwidth[39m=[32m"100%"[39m
            [36m/>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-resize-handle"[39m
            [33mstyle[39m=[32m"position: absolute; bottom: 0px; right: 0px; width: 20px; height: 20px; cursor: nw-resize; background: rgba(255, 255, 255, 0.3); border-radius: 0 0 8px 0;"[39m
          [36m/>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      166 |       );
      167 |
    > 168 |       const backdrop = screen.getByRole('dialog');
          |                               ^
      169 |       fireEvent.click(backdrop);
      170 |
      171 |       expect(mockOnClose).toHaveBeenCalledTimes(1);

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (src/__tests__/VideoPopupBranches.test.jsx:168:31)

  ● VideoPopup Branch Coverage › Event Handler Branches › calls onClose when close button is clicked

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name `/close/i`

    Here are the accessible roles:

      button:

      Name "−":
      [36m<button[39m
        [33mclass[39m=[32m"video-popup-minimize"[39m
        [33mtitle[39m=[32m"Minimize"[39m
      [36m/>[39m

      Name "□":
      [36m<button[39m
        [33mclass[39m=[32m"video-popup-maximize"[39m
        [33mtitle[39m=[32m"Maximize"[39m
      [36m/>[39m

      Name "×":
      [36m<button[39m
        [33mclass[39m=[32m"video-popup-close"[39m
        [33mtitle[39m=[32m"Close"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"video-popup"[39m
          [33mstyle[39m=[32m"position: fixed; left: 20px; top: 488px; width: 600px; height: 450px; z-index: 4000; cursor: default;"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-header"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"video-popup-title"[39m
            [36m>[39m
              [0m🎥 Recipe Video[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"video-popup-controls"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-minimize"[39m
                [33mtitle[39m=[32m"Minimize"[39m
              [36m>[39m
                [0m−[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-maximize"[39m
                [33mtitle[39m=[32m"Maximize"[39m
              [36m>[39m
                [0m□[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-close"[39m
                [33mtitle[39m=[32m"Close"[39m
              [36m>[39m
                [0m×[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-content"[39m
          [36m>[39m
            [36m<iframe[39m
              [33mallowfullscreen[39m=[32m""[39m
              [33mframeborder[39m=[32m"0"[39m
              [33mheight[39m=[32m"100%"[39m
              [33msrc[39m=[32m"https://www.youtube.com/embed/test"[39m
              [33mtitle[39m=[32m"Recipe Video"[39m
              [33mwidth[39m=[32m"100%"[39m
            [36m/>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-resize-handle"[39m
            [33mstyle[39m=[32m"position: absolute; bottom: 0px; right: 0px; width: 20px; height: 20px; cursor: nw-resize; background: rgba(255, 255, 255, 0.3); border-radius: 0 0 8px 0;"[39m
          [36m/>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      181 |       );
      182 |
    > 183 |       const closeButton = screen.getByRole('button', { name: /close/i });
          |                                  ^
      184 |       fireEvent.click(closeButton);
      185 |
      186 |       expect(mockOnClose).toHaveBeenCalledTimes(1);

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (src/__tests__/VideoPopupBranches.test.jsx:183:34)

  ● VideoPopup Branch Coverage › Event Handler Branches › stops event propagation on content click

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      224 |       fireEvent(videoContent, clickEvent);
      225 |
    > 226 |       expect(mockStopPropagation).toHaveBeenCalled();
          |                                   ^
      227 |     });
      228 |
      229 |     it('handles keyboard escape key', () => {

      at Object.toHaveBeenCalled (src/__tests__/VideoPopupBranches.test.jsx:226:35)

  ● VideoPopup Branch Coverage › Event Handler Branches › handles keyboard escape key

    TestingLibraryElementError: Unable to find an accessible element with the role "dialog"

    Here are the accessible roles:

      button:

      Name "−":
      [36m<button[39m
        [33mclass[39m=[32m"video-popup-minimize"[39m
        [33mtitle[39m=[32m"Minimize"[39m
      [36m/>[39m

      Name "□":
      [36m<button[39m
        [33mclass[39m=[32m"video-popup-maximize"[39m
        [33mtitle[39m=[32m"Maximize"[39m
      [36m/>[39m

      Name "×":
      [36m<button[39m
        [33mclass[39m=[32m"video-popup-close"[39m
        [33mtitle[39m=[32m"Close"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"video-popup"[39m
          [33mstyle[39m=[32m"position: fixed; left: 20px; top: 488px; width: 600px; height: 450px; z-index: 4000; cursor: default;"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-header"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"video-popup-title"[39m
            [36m>[39m
              [0m🎥 Recipe Video[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"video-popup-controls"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-minimize"[39m
                [33mtitle[39m=[32m"Minimize"[39m
              [36m>[39m
                [0m−[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-maximize"[39m
                [33mtitle[39m=[32m"Maximize"[39m
              [36m>[39m
                [0m□[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-close"[39m
                [33mtitle[39m=[32m"Close"[39m
              [36m>[39m
                [0m×[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-content"[39m
          [36m>[39m
            [36m<iframe[39m
              [33mallowfullscreen[39m=[32m""[39m
              [33mframeborder[39m=[32m"0"[39m
              [33mheight[39m=[32m"100%"[39m
              [33msrc[39m=[32m"https://www.youtube.com/embed/test"[39m
              [33mtitle[39m=[32m"Recipe Video"[39m
              [33mwidth[39m=[32m"100%"[39m
            [36m/>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-resize-handle"[39m
            [33mstyle[39m=[32m"position: absolute; bottom: 0px; right: 0px; width: 20px; height: 20px; cursor: nw-resize; background: rgba(255, 255, 255, 0.3); border-radius: 0 0 8px 0;"[39m
          [36m/>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      239 |
      240 |       // Note: actual keyboard handling might be in the parent component
    > 241 |       expect(screen.getByRole('dialog')).toBeInTheDocument();
          |                     ^
      242 |     });
      243 |   });
      244 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (src/__tests__/VideoPopupBranches.test.jsx:241:21)

  ● VideoPopup Branch Coverage › Edge Cases › handles missing onClose callback

    TestingLibraryElementError: Unable to find an accessible element with the role "dialog"

    Here are the accessible roles:

      button:

      Name "−":
      [36m<button[39m
        [33mclass[39m=[32m"video-popup-minimize"[39m
        [33mtitle[39m=[32m"Minimize"[39m
      [36m/>[39m

      Name "□":
      [36m<button[39m
        [33mclass[39m=[32m"video-popup-maximize"[39m
        [33mtitle[39m=[32m"Maximize"[39m
      [36m/>[39m

      Name "×":
      [36m<button[39m
        [33mclass[39m=[32m"video-popup-close"[39m
        [33mtitle[39m=[32m"Close"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"video-popup"[39m
          [33mstyle[39m=[32m"position: fixed; left: 20px; top: 488px; width: 600px; height: 450px; z-index: 4000; cursor: default;"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-header"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"video-popup-title"[39m
            [36m>[39m
              [0m🎥 Recipe Video[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"video-popup-controls"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-minimize"[39m
                [33mtitle[39m=[32m"Minimize"[39m
              [36m>[39m
                [0m−[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-maximize"[39m
                [33mtitle[39m=[32m"Maximize"[39m
              [36m>[39m
                [0m□[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-close"[39m
                [33mtitle[39m=[32m"Close"[39m
              [36m>[39m
                [0m×[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-content"[39m
          [36m>[39m
            [36m<iframe[39m
              [33mallowfullscreen[39m=[32m""[39m
              [33mframeborder[39m=[32m"0"[39m
              [33mheight[39m=[32m"100%"[39m
              [33msrc[39m=[32m"https://www.youtube.com/embed/test"[39m
              [33mtitle[39m=[32m"Recipe Video"[39m
              [33mwidth[39m=[32m"100%"[39m
            [36m/>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-resize-handle"[39m
            [33mstyle[39m=[32m"position: absolute; bottom: 0px; right: 0px; width: 20px; height: 20px; cursor: nw-resize; background: rgba(255, 255, 255, 0.3); border-radius: 0 0 8px 0;"[39m
          [36m/>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      252 |       );
      253 |
    > 254 |       const backdrop = screen.getByRole('dialog');
          |                               ^
      255 |       
      256 |       // Should not throw error
      257 |       expect(() => fireEvent.click(backdrop)).not.toThrow();

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (src/__tests__/VideoPopupBranches.test.jsx:254:31)

  ● VideoPopup Branch Coverage › Edge Cases › handles rapid open/close transitions

    TestingLibraryElementError: Unable to find an accessible element with the role "dialog"

    Here are the accessible roles:

      button:

      Name "−":
      [36m<button[39m
        [33mclass[39m=[32m"video-popup-minimize"[39m
        [33mtitle[39m=[32m"Minimize"[39m
      [36m/>[39m

      Name "□":
      [36m<button[39m
        [33mclass[39m=[32m"video-popup-maximize"[39m
        [33mtitle[39m=[32m"Maximize"[39m
      [36m/>[39m

      Name "×":
      [36m<button[39m
        [33mclass[39m=[32m"video-popup-close"[39m
        [33mtitle[39m=[32m"Close"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"video-popup"[39m
          [33mstyle[39m=[32m"position: fixed; left: 20px; top: 488px; width: 600px; height: 450px; z-index: 4000; cursor: default;"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-header"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"video-popup-title"[39m
            [36m>[39m
              [0m🎥 Recipe Video[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"video-popup-controls"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-minimize"[39m
                [33mtitle[39m=[32m"Minimize"[39m
              [36m>[39m
                [0m−[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-maximize"[39m
                [33mtitle[39m=[32m"Maximize"[39m
              [36m>[39m
                [0m□[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-close"[39m
                [33mtitle[39m=[32m"Close"[39m
              [36m>[39m
                [0m×[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-content"[39m
          [36m>[39m
            [36m<iframe[39m
              [33mallowfullscreen[39m=[32m""[39m
              [33mframeborder[39m=[32m"0"[39m
              [33mheight[39m=[32m"100%"[39m
              [33msrc[39m=[32m"https://www.youtube.com/embed/test"[39m
              [33mtitle[39m=[32m"Recipe Video"[39m
              [33mwidth[39m=[32m"100%"[39m
            [36m/>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-resize-handle"[39m
            [33mstyle[39m=[32m"position: absolute; bottom: 0px; right: 0px; width: 20px; height: 20px; cursor: nw-resize; background: rgba(255, 255, 255, 0.3); border-radius: 0 0 8px 0;"[39m
          [36m/>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      292 |       );
      293 |
    > 294 |       expect(screen.getByRole('dialog')).toBeInTheDocument();
          |                     ^
      295 |     });
      296 |
      297 |     it('handles URL change while open', () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (src/__tests__/VideoPopupBranches.test.jsx:294:21)

  ● VideoPopup Branch Coverage › Edge Cases › handles malformed YouTube URLs

    expect(element).toHaveAttribute("src", StringContaining "youtube.com/embed/") // element.getAttribute("src") === StringContaining "youtube.com/embed/"

    Expected the element to have attribute:
      src=StringContaining "youtube.com/embed/"
    Received:
      src="https://www.youtube.com/watch?v="

      329 |
      330 |       const iframe = screen.getByTitle('Recipe Video');
    > 331 |       expect(iframe).toHaveAttribute('src', expect.stringContaining('youtube.com/embed/'));
          |                      ^
      332 |     });
      333 |
      334 |     it('handles YouTube playlist URLs', () => {

      at Object.toHaveAttribute (src/__tests__/VideoPopupBranches.test.jsx:331:22)

  ● VideoPopup Branch Coverage › Accessibility › has proper ARIA attributes

    TestingLibraryElementError: Unable to find an accessible element with the role "dialog"

    Here are the accessible roles:

      button:

      Name "−":
      [36m<button[39m
        [33mclass[39m=[32m"video-popup-minimize"[39m
        [33mtitle[39m=[32m"Minimize"[39m
      [36m/>[39m

      Name "□":
      [36m<button[39m
        [33mclass[39m=[32m"video-popup-maximize"[39m
        [33mtitle[39m=[32m"Maximize"[39m
      [36m/>[39m

      Name "×":
      [36m<button[39m
        [33mclass[39m=[32m"video-popup-close"[39m
        [33mtitle[39m=[32m"Close"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"video-popup"[39m
          [33mstyle[39m=[32m"position: fixed; left: 20px; top: 488px; width: 600px; height: 450px; z-index: 4000; cursor: default;"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-header"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"video-popup-title"[39m
            [36m>[39m
              [0m🎥 Recipe Video[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"video-popup-controls"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-minimize"[39m
                [33mtitle[39m=[32m"Minimize"[39m
              [36m>[39m
                [0m−[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-maximize"[39m
                [33mtitle[39m=[32m"Maximize"[39m
              [36m>[39m
                [0m□[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-close"[39m
                [33mtitle[39m=[32m"Close"[39m
              [36m>[39m
                [0m×[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-content"[39m
          [36m>[39m
            [36m<iframe[39m
              [33mallowfullscreen[39m=[32m""[39m
              [33mframeborder[39m=[32m"0"[39m
              [33mheight[39m=[32m"100%"[39m
              [33msrc[39m=[32m"https://www.youtube.com/embed/test"[39m
              [33mtitle[39m=[32m"Recipe Video"[39m
              [33mwidth[39m=[32m"100%"[39m
            [36m/>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-resize-handle"[39m
            [33mstyle[39m=[32m"position: absolute; bottom: 0px; right: 0px; width: 20px; height: 20px; cursor: nw-resize; background: rgba(255, 255, 255, 0.3); border-radius: 0 0 8px 0;"[39m
          [36m/>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      357 |       );
      358 |
    > 359 |       const dialog = screen.getByRole('dialog');
          |                             ^
      360 |       expect(dialog).toBeInTheDocument();
      361 |     });
      362 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (src/__tests__/VideoPopupBranches.test.jsx:359:29)

  ● VideoPopup Branch Coverage › Accessibility › traps focus within popup

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name `/close/i`

    Here are the accessible roles:

      button:

      Name "−":
      [36m<button[39m
        [33mclass[39m=[32m"video-popup-minimize"[39m
        [33mtitle[39m=[32m"Minimize"[39m
      [36m/>[39m

      Name "□":
      [36m<button[39m
        [33mclass[39m=[32m"video-popup-maximize"[39m
        [33mtitle[39m=[32m"Maximize"[39m
      [36m/>[39m

      Name "×":
      [36m<button[39m
        [33mclass[39m=[32m"video-popup-close"[39m
        [33mtitle[39m=[32m"Close"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"video-popup"[39m
          [33mstyle[39m=[32m"position: fixed; left: 20px; top: 488px; width: 600px; height: 450px; z-index: 4000; cursor: default;"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-header"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"video-popup-title"[39m
            [36m>[39m
              [0m🎥 Recipe Video[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"video-popup-controls"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-minimize"[39m
                [33mtitle[39m=[32m"Minimize"[39m
              [36m>[39m
                [0m−[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-maximize"[39m
                [33mtitle[39m=[32m"Maximize"[39m
              [36m>[39m
                [0m□[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"video-popup-close"[39m
                [33mtitle[39m=[32m"Close"[39m
              [36m>[39m
                [0m×[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-content"[39m
          [36m>[39m
            [36m<iframe[39m
              [33mallowfullscreen[39m=[32m""[39m
              [33mframeborder[39m=[32m"0"[39m
              [33mheight[39m=[32m"100%"[39m
              [33msrc[39m=[32m"https://www.youtube.com/embed/test"[39m
              [33mtitle[39m=[32m"Recipe Video"[39m
              [33mwidth[39m=[32m"100%"[39m
            [36m/>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"video-popup-resize-handle"[39m
            [33mstyle[39m=[32m"position: absolute; bottom: 0px; right: 0px; width: 20px; height: 20px; cursor: nw-resize; background: rgba(255, 255, 255, 0.3); border-radius: 0 0 8px 0;"[39m
          [36m/>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      370 |       );
      371 |
    > 372 |       const closeButton = screen.getByRole('button', { name: /close/i });
          |                                  ^
      373 |       expect(closeButton).toBeInTheDocument();
      374 |     });
      375 |   });

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (src/__tests__/VideoPopupBranches.test.jsx:372:34)

FAIL src/__tests__/AppBranchCoverage.test.jsx
  ● Console

    console.error
      Error checking clipper worker health: TypeError: Cannot read properties of undefined (reading 'ok')
          at ok (/workspace/frontend/src/App.jsx:1048:15)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)

      1054 |       }
      1055 |     } catch (e) {
    > 1056 |       console.error('Error checking clipper worker health:', e);
           |               ^
      1057 |       setClipperStatus('unavailable');
      1058 |     }
      1059 |   }

      at error (src/App.jsx:1056:15)

    console.error
      Error getting recipes from recommendations: TypeError: Cannot read properties of undefined (reading 'finally')
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:152:7)
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:765:25)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:270:15)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)

      1002 |       }
      1003 |     } catch (e) {
    > 1004 |       console.error('Error getting recipes from recommendations:', e);
           |               ^
      1005 |       setRecipes([]);
      1006 |       setIsRefreshingRecipes(false);
      1007 |     } finally {

      at error (src/App.jsx:1004:15)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Button clicked, searchInput:

      at log (src/App.jsx:1688:25)

    console.log
      isValidUrl result: false

      at log (src/App.jsx:1689:25)

    console.log
      clipperStatus: unavailable

      at log (src/App.jsx:1690:25)

    console.error
      Error checking clipper worker health: TypeError: Cannot read properties of undefined (reading 'ok')
          at ok (/workspace/frontend/src/App.jsx:1048:15)

      1054 |       }
      1055 |     } catch (e) {
    > 1056 |       console.error('Error checking clipper worker health:', e);
           |               ^
      1057 |       setClipperStatus('unavailable');
      1058 |     }
      1059 |   }

      at error (src/App.jsx:1056:15)

    console.error
      Error getting recipes from recommendations: TypeError: Cannot read properties of undefined (reading 'finally')
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:152:7)
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:765:25)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:270:15)

      1002 |       }
      1003 |     } catch (e) {
    > 1004 |       console.error('Error getting recipes from recommendations:', e);
           |               ^
      1005 |       setRecipes([]);
      1006 |       setIsRefreshingRecipes(false);
      1007 |     } finally {

      at error (src/App.jsx:1004:15)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Button clicked, searchInput:

      at log (src/App.jsx:1688:25)

    console.log
      isValidUrl result: false

      at log (src/App.jsx:1689:25)

    console.log
      clipperStatus: unavailable

      at log (src/App.jsx:1690:25)

    console.error
      Error checking clipper worker health: TypeError: Cannot read properties of undefined (reading 'ok')
          at ok (/workspace/frontend/src/App.jsx:1048:15)

      1054 |       }
      1055 |     } catch (e) {
    > 1056 |       console.error('Error checking clipper worker health:', e);
           |               ^
      1057 |       setClipperStatus('unavailable');
      1058 |     }
      1059 |   }

      at error (src/App.jsx:1056:15)

    console.error
      Error getting recipes from recommendations: TypeError: Cannot read properties of undefined (reading 'finally')
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:152:7)
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:765:25)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:270:15)

      1002 |       }
      1003 |     } catch (e) {
    > 1004 |       console.error('Error getting recipes from recommendations:', e);
           |               ^
      1005 |       setRecipes([]);
      1006 |       setIsRefreshingRecipes(false);
      1007 |     } finally {

      at error (src/App.jsx:1004:15)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      Error checking clipper worker health: TypeError: Cannot read properties of undefined (reading 'ok')
          at ok (/workspace/frontend/src/App.jsx:1048:15)

      1054 |       }
      1055 |     } catch (e) {
    > 1056 |       console.error('Error checking clipper worker health:', e);
           |               ^
      1057 |       setClipperStatus('unavailable');
      1058 |     }
      1059 |   }

      at error (src/App.jsx:1056:15)

    console.error
      Error getting recipes from recommendations: TypeError: Cannot read properties of undefined (reading 'finally')
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:152:7)
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:765:25)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:270:15)

      1002 |       }
      1003 |     } catch (e) {
    > 1004 |       console.error('Error getting recipes from recommendations:', e);
           |               ^
      1005 |       setRecipes([]);
      1006 |       setIsRefreshingRecipes(false);
      1007 |     } finally {

      at error (src/App.jsx:1004:15)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      Error checking clipper worker health: TypeError: Cannot read properties of undefined (reading 'ok')
          at ok (/workspace/frontend/src/App.jsx:1048:15)

      1054 |       }
      1055 |     } catch (e) {
    > 1056 |       console.error('Error checking clipper worker health:', e);
           |               ^
      1057 |       setClipperStatus('unavailable');
      1058 |     }
      1059 |   }

      at error (src/App.jsx:1056:15)

    console.error
      Error getting recipes from recommendations: TypeError: Cannot read properties of undefined (reading 'finally')
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:152:7)
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:765:25)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:270:15)

      1002 |       }
      1003 |     } catch (e) {
    > 1004 |       console.error('Error getting recipes from recommendations:', e);
           |               ^
      1005 |       setRecipes([]);
      1006 |       setIsRefreshingRecipes(false);
      1007 |     } finally {

      at error (src/App.jsx:1004:15)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      Error checking clipper worker health: TypeError: Cannot read properties of undefined (reading 'ok')
          at ok (/workspace/frontend/src/App.jsx:1048:15)

      1054 |       }
      1055 |     } catch (e) {
    > 1056 |       console.error('Error checking clipper worker health:', e);
           |               ^
      1057 |       setClipperStatus('unavailable');
      1058 |     }
      1059 |   }

      at error (src/App.jsx:1056:15)

    console.error
      Error getting recipe categories: Error: Network error
          at Object.<anonymous> (/workspace/frontend/src/__tests__/AppBranchCoverage.test.jsx:169:35)
          at Promise.finally.completed (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1559:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1499:10)
          at _callCircusTest (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1009:40)
          at _runTest (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:949:3)
          at _runTestsForDescribeBlock (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
          at _runTestsForDescribeBlock (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
          at _runTestsForDescribeBlock (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
          at run (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
          at runAndTransformResultsToJestFormat (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1920:21)
          at jestAdapter (/workspace/frontend/node_modules/jest-circus/build/runner.js:101:19)
          at runTestInternal (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:275:16)
          at runTest (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:343:7)
          at Object.worker (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:497:12)

      735 |       return [];
      736 |     } catch (e) {
    > 737 |       console.error('Error getting recipe categories:', e);
          |               ^
      738 |       return [];
      739 |     }
      740 |   }

      at error (src/App.jsx:737:15)
      at initializeRecipes (src/App.jsx:269:9)

    console.error
      Error getting recipes from recommendations: TypeError: Cannot read properties of undefined (reading 'finally')
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:152:7)
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:765:25)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:270:15)

      1002 |       }
      1003 |     } catch (e) {
    > 1004 |       console.error('Error getting recipes from recommendations:', e);
           |               ^
      1005 |       setRecipes([]);
      1006 |       setIsRefreshingRecipes(false);
      1007 |     } finally {

      at error (src/App.jsx:1004:15)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      Error checking clipper worker health: TypeError: Cannot read properties of undefined (reading 'ok')
          at ok (/workspace/frontend/src/App.jsx:1048:15)

      1054 |       }
      1055 |     } catch (e) {
    > 1056 |       console.error('Error checking clipper worker health:', e);
           |               ^
      1057 |       setClipperStatus('unavailable');
      1058 |     }
      1059 |   }

      at error (src/App.jsx:1056:15)

    console.error
      Error getting recipes from recommendations: TypeError: Cannot read properties of undefined (reading 'finally')
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:152:7)
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:765:25)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:270:15)

      1002 |       }
      1003 |     } catch (e) {
    > 1004 |       console.error('Error getting recipes from recommendations:', e);
           |               ^
      1005 |       setRecipes([]);
      1006 |       setIsRefreshingRecipes(false);
      1007 |     } finally {

      at error (src/App.jsx:1004:15)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      Error checking clipper worker health: TypeError: Cannot read properties of undefined (reading 'ok')
          at ok (/workspace/frontend/src/App.jsx:1048:15)

      1054 |       }
      1055 |     } catch (e) {
    > 1056 |       console.error('Error checking clipper worker health:', e);
           |               ^
      1057 |       setClipperStatus('unavailable');
      1058 |     }
      1059 |   }

      at error (src/App.jsx:1056:15)

    console.error
      Error getting recipes from recommendations: TypeError: Cannot read properties of undefined (reading 'finally')
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:152:7)
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:765:25)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:270:15)

      1002 |       }
      1003 |     } catch (e) {
    > 1004 |       console.error('Error getting recipes from recommendations:', e);
           |               ^
      1005 |       setRecipes([]);
      1006 |       setIsRefreshingRecipes(false);
      1007 |     } finally {

      at error (src/App.jsx:1004:15)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      Error checking clipper worker health: TypeError: Cannot read properties of undefined (reading 'ok')
          at ok (/workspace/frontend/src/App.jsx:1048:15)

      1054 |       }
      1055 |     } catch (e) {
    > 1056 |       console.error('Error checking clipper worker health:', e);
           |               ^
      1057 |       setClipperStatus('unavailable');
      1058 |     }
      1059 |   }

      at error (src/App.jsx:1056:15)

    console.error
      Error getting recipes from recommendations: TypeError: Cannot read properties of undefined (reading 'finally')
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:152:7)
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:765:25)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:270:15)

      1002 |       }
      1003 |     } catch (e) {
    > 1004 |       console.error('Error getting recipes from recommendations:', e);
           |               ^
      1005 |       setRecipes([]);
      1006 |       setIsRefreshingRecipes(false);
      1007 |     } finally {

      at error (src/App.jsx:1004:15)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      Error checking clipper worker health: TypeError: Cannot read properties of undefined (reading 'ok')
          at ok (/workspace/frontend/src/App.jsx:1048:15)

      1054 |       }
      1055 |     } catch (e) {
    > 1056 |       console.error('Error checking clipper worker health:', e);
           |               ^
      1057 |       setClipperStatus('unavailable');
      1058 |     }
      1059 |   }

      at error (src/App.jsx:1056:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1055 |     } catch (e) {
      1056 |       console.error('Error checking clipper worker health:', e);
    > 1057 |       setClipperStatus('unavailable');
           |       ^
      1058 |     }
      1059 |   }
      1060 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setClipperStatus (src/App.jsx:1057:7)

    console.error
      Error checking clipper worker health: TypeError: Cannot read properties of undefined (reading 'ok')
          at ok (/workspace/frontend/src/App.jsx:1048:15)

      1054 |       }
      1055 |     } catch (e) {
    > 1056 |       console.error('Error checking clipper worker health:', e);
           |               ^
      1057 |       setClipperStatus('unavailable');
      1058 |     }
      1059 |   }

      at error (src/App.jsx:1056:15)

    console.error
      Error getting recipes from recommendations: TypeError: Cannot read properties of undefined (reading 'finally')
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:152:7)
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:765:25)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:270:15)

      1002 |       }
      1003 |     } catch (e) {
    > 1004 |       console.error('Error getting recipes from recommendations:', e);
           |               ^
      1005 |       setRecipes([]);
      1006 |       setIsRefreshingRecipes(false);
      1007 |     } finally {

      at error (src/App.jsx:1004:15)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      Error checking clipper worker health: TypeError: Cannot read properties of undefined (reading 'ok')
          at ok (/workspace/frontend/src/App.jsx:1048:15)
          at runNextTicks (node:internal/process/task_queues:65:5)
          at processTimers (node:internal/timers:520:9)

      1054 |       }
      1055 |     } catch (e) {
    > 1056 |       console.error('Error checking clipper worker health:', e);
           |               ^
      1057 |       setClipperStatus('unavailable');
      1058 |     }
      1059 |   }

      at error (src/App.jsx:1056:15)

    console.error
      Error getting recipes from recommendations: TypeError: Cannot read properties of undefined (reading 'finally')
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:152:7)
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:765:25)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:270:15)
          at runNextTicks (node:internal/process/task_queues:65:5)
          at processTimers (node:internal/timers:520:9)

      1002 |       }
      1003 |     } catch (e) {
    > 1004 |       console.error('Error getting recipes from recommendations:', e);
           |               ^
      1005 |       setRecipes([]);
      1006 |       setIsRefreshingRecipes(false);
      1007 |     } finally {

      at error (src/App.jsx:1004:15)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.warn
      ⚠️ No recommendations data received

      994 |           }
      995 |         } else {
    > 996 |           console.warn('⚠️ No recommendations data received');
          |                   ^
      997 |           setRecipes([]);
      998 |         }
      999 |       } else {

      at warn (src/App.jsx:996:19)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.warn
      ⚠️ No recommendations data received

      994 |           }
      995 |         } else {
    > 996 |           console.warn('⚠️ No recommendations data received');
          |                   ^
      997 |           setRecipes([]);
      998 |         }
      999 |       } else {

      at warn (src/App.jsx:996:19)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.warn
      ⚠️ No recommendations data received

      994 |           }
      995 |         } else {
    > 996 |           console.warn('⚠️ No recommendations data received');
          |                   ^
      997 |           setRecipes([]);
      998 |         }
      999 |       } else {

      at warn (src/App.jsx:996:19)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

  ● App Branch Coverage Tests › Search Functionality Branches › handles search input focus and blur

    expect(received).toBe(expected) // Object.is equality

    - Expected  -  0
    + Received  + 89

    + <body>
    +   <div>
    +     <canvas
    +       class="seasoning-background"
    +       style="display: block; position: fixed; top: 0px; left: 0px; width: 100vw; height: 100vh; z-index: -1; pointer-events: none;"
    +     />
    +     <div
    +       class="header-container"
    +     >
    +       <h1
    +         class="title"
    +       >
    +         <img
    +           alt="Seasoned"
    +           class="title-icon"
    +           src="/spoon.svg"
    +         />
    +         Seasoned
    +         <div
    +           class="title-search  "
    +         >
                <input
                  aria-label="Search recipes"
                  class="title-search-input"
                  placeholder="Search recipes or paste a URL to clip..."
                  type="text"
                  value=""
    +           />
    +           <button
    +             aria-label="Search"
    +             class="title-search-button "
    +             title="Search recipes"
    +           >
    +             <svg
    +               fill="none"
    +               height="18"
    +               stroke="currentColor"
    +               stroke-linecap="round"
    +               stroke-linejoin="round"
    +               stroke-width="2"
    +               viewBox="0 0 24 24"
    +               width="18"
    +             >
    +               <circle
    +                 cx="11"
    +                 cy="11"
    +                 r="8"
    +               />
    +               <path
    +                 d="m21 21-4.35-4.35"
                    />
    +             </svg>
    +           </button>
    +         </div>
    +       </h1>
    +     </div>
    +     <div
    +       class="container "
    +     >
    +       <div
    +         class="recipes-list"
    +       >
    +         <div
    +           class="no-recipes-found"
    +         >
    +           <div
    +             class="no-recipes-content"
    +           >
    +             <h2>
    +               No Recipes Found
    +             </h2>
    +             <p>
    +               We couldn't load any recipes at the moment. This might be due to:
    +             </p>
    +             <ul>
    +               <li>
    +                 Network connectivity issues
    +               </li>
    +               <li>
    +                 Search service temporarily unavailable
    +               </li>
    +               <li>
    +                 No recipes matching current recommendations
    +               </li>
    +             </ul>
    +             <button
    +               class="retry-button"
    +             >
    +               🔄 Try Again
    +             </button>
    +           </div>
    +         </div>
    +       </div>
    +     </div>
    +   </div>
    + </body>

      105 |       // Focus
      106 |       fireEvent.focus(searchInput);
    > 107 |       expect(document.activeElement).toBe(searchInput);
          |                                      ^
      108 |
      109 |       // Blur
      110 |       fireEvent.blur(searchInput);

      at Object.toBe (src/__tests__/AppBranchCoverage.test.jsx:107:38)

FAIL src/__tests__/RecommendationHelpers.test.jsx
  ● Console

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1048 |       if (res.ok) {
      1049 |         const health = await res.json();
    > 1050 |         setClipperStatus('available');
           |         ^
      1051 |       } else {
      1052 |         console.warn('Clipper worker health check failed:', res.status);
      1053 |         setClipperStatus('unavailable');

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setClipperStatus (src/App.jsx:1050:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      749 |     
      750 |     try {
    > 751 |       setIsRefreshingRecipes(true);
          |       ^
      752 |       // Only set loading state if it's not already set (prevents flickering)
      753 |       // This prevents conflicts when called from functions that already set isLoadingRecipes
      754 |       if (!isLoadingRecipes) {

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:751:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      753 |       // This prevents conflicts when called from functions that already set isLoadingRecipes
      754 |       if (!isLoadingRecipes) {
    > 755 |         setIsLoadingRecipes(true);
          |         ^
      756 |       }
      757 |       
      758 |       const RECOMMENDATION_API_URL = import.meta.env.VITE_RECOMMENDATION_API_URL;

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:755:9)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1029 |   // Helper function to clear search cache (useful for fresh data)
      1030 |   function clearSearchCache() {
    > 1031 |     setSearchCache(new Map());
           |     ^
      1032 |   }
      1033 |
      1034 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setSearchCache (src/App.jsx:1031:5)
      at clearSearchCache (src/App.jsx:762:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.warn
      ⚠️ No recommendations data received

      994 |           }
      995 |         } else {
    > 996 |           console.warn('⚠️ No recommendations data received');
          |                   ^
      997 |           setRecipes([]);
      998 |         }
      999 |       } else {

      at warn (src/App.jsx:996:19)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

       995 |         } else {
       996 |           console.warn('⚠️ No recommendations data received');
    >  997 |           setRecipes([]);
           |           ^
       998 |         }
       999 |       } else {
      1000 |         console.error('❌ Failed to fetch recommendations:', res.status);

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setRecipes (src/App.jsx:997:11)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1007 |     } finally {
      1008 |       // Always clear loading state to prevent hanging
    > 1009 |       setIsLoadingRecipes(false);
           |       ^
      1010 |       setIsRefreshingRecipes(false);
      1011 |       console.log('✅ Recipe loading process completed');
      1012 |     }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:1009:7)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1008 |       // Always clear loading state to prevent hanging
      1009 |       setIsLoadingRecipes(false);
    > 1010 |       setIsRefreshingRecipes(false);
           |       ^
      1011 |       console.log('✅ Recipe loading process completed');
      1012 |     }
      1013 |   }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:1010:7)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1048 |       if (res.ok) {
      1049 |         const health = await res.json();
    > 1050 |         setClipperStatus('available');
           |         ^
      1051 |       } else {
      1052 |         console.warn('Clipper worker health check failed:', res.status);
      1053 |         setClipperStatus('unavailable');

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setClipperStatus (src/App.jsx:1050:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      749 |     
      750 |     try {
    > 751 |       setIsRefreshingRecipes(true);
          |       ^
      752 |       // Only set loading state if it's not already set (prevents flickering)
      753 |       // This prevents conflicts when called from functions that already set isLoadingRecipes
      754 |       if (!isLoadingRecipes) {

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:751:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      753 |       // This prevents conflicts when called from functions that already set isLoadingRecipes
      754 |       if (!isLoadingRecipes) {
    > 755 |         setIsLoadingRecipes(true);
          |         ^
      756 |       }
      757 |       
      758 |       const RECOMMENDATION_API_URL = import.meta.env.VITE_RECOMMENDATION_API_URL;

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:755:9)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1029 |   // Helper function to clear search cache (useful for fresh data)
      1030 |   function clearSearchCache() {
    > 1031 |     setSearchCache(new Map());
           |     ^
      1032 |   }
      1033 |
      1034 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setSearchCache (src/App.jsx:1031:5)
      at clearSearchCache (src/App.jsx:762:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.warn
      ⚠️ No recommendations data received

      994 |           }
      995 |         } else {
    > 996 |           console.warn('⚠️ No recommendations data received');
          |                   ^
      997 |           setRecipes([]);
      998 |         }
      999 |       } else {

      at warn (src/App.jsx:996:19)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

       995 |         } else {
       996 |           console.warn('⚠️ No recommendations data received');
    >  997 |           setRecipes([]);
           |           ^
       998 |         }
       999 |       } else {
      1000 |         console.error('❌ Failed to fetch recommendations:', res.status);

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setRecipes (src/App.jsx:997:11)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1007 |     } finally {
      1008 |       // Always clear loading state to prevent hanging
    > 1009 |       setIsLoadingRecipes(false);
           |       ^
      1010 |       setIsRefreshingRecipes(false);
      1011 |       console.log('✅ Recipe loading process completed');
      1012 |     }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:1009:7)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1008 |       // Always clear loading state to prevent hanging
      1009 |       setIsLoadingRecipes(false);
    > 1010 |       setIsRefreshingRecipes(false);
           |       ^
      1011 |       console.log('✅ Recipe loading process completed');
      1012 |     }
      1013 |   }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:1010:7)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1048 |       if (res.ok) {
      1049 |         const health = await res.json();
    > 1050 |         setClipperStatus('available');
           |         ^
      1051 |       } else {
      1052 |         console.warn('Clipper worker health check failed:', res.status);
      1053 |         setClipperStatus('unavailable');

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setClipperStatus (src/App.jsx:1050:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      727 |           // Extract just the category names
      728 |           const categories = Object.keys(data.recommendations);
    > 729 |           setRecipeCategories(categories);
          |           ^
      730 |           // Cache the category names for instant display on refreshes
      731 |           setCachedCategoryNames(categories);
      732 |           return categories;

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setRecipeCategories (src/App.jsx:729:11)
      at initializeRecipes (src/App.jsx:269:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      729 |           setRecipeCategories(categories);
      730 |           // Cache the category names for instant display on refreshes
    > 731 |           setCachedCategoryNames(categories);
          |           ^
      732 |           return categories;
      733 |         }
      734 |       }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setCachedCategoryNames (src/App.jsx:731:11)
      at initializeRecipes (src/App.jsx:269:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      749 |     
      750 |     try {
    > 751 |       setIsRefreshingRecipes(true);
          |       ^
      752 |       // Only set loading state if it's not already set (prevents flickering)
      753 |       // This prevents conflicts when called from functions that already set isLoadingRecipes
      754 |       if (!isLoadingRecipes) {

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:751:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      753 |       // This prevents conflicts when called from functions that already set isLoadingRecipes
      754 |       if (!isLoadingRecipes) {
    > 755 |         setIsLoadingRecipes(true);
          |         ^
      756 |       }
      757 |       
      758 |       const RECOMMENDATION_API_URL = import.meta.env.VITE_RECOMMENDATION_API_URL;

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:755:9)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1029 |   // Helper function to clear search cache (useful for fresh data)
      1030 |   function clearSearchCache() {
    > 1031 |     setSearchCache(new Map());
           |     ^
      1032 |   }
      1033 |
      1034 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setSearchCache (src/App.jsx:1031:5)
      at clearSearchCache (src/App.jsx:762:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.log
      📋 Processing recommendations for categories: [ 'Test Category' ]

      at log (src/App.jsx:782:19)

    console.warn
      ⚠️ Smart search failed for "GrilledVegetables": TypeError: Cannot read properties of undefined (reading 'length')
          at length (/workspace/frontend/src/App.jsx:168:93)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)
          at processTag (/workspace/frontend/src/App.jsx:800:37)
          at async Promise.allSettled (index 0)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:882:35)
          at initializeRecipes (/workspace/frontend/src/App.jsx:270:9)

      171 |       return [];
      172 |     } catch (error) {
    > 173 |       console.warn(`⚠️ Smart search failed for "${tag}":`, error);
          |               ^
      174 |       return [];
      175 |     }
      176 |   }

      at warn (src/App.jsx:173:15)
      at processTag (src/App.jsx:800:37)
          at async Promise.allSettled (index 0)
      at getRecipesFromRecommendations (src/App.jsx:882:35)
      at initializeRecipes (src/App.jsx:270:9)

    console.warn
      ⚠️ Smart search failed for "SummerBBQ": TypeError: Cannot read properties of undefined (reading 'length')
          at length (/workspace/frontend/src/App.jsx:168:93)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)
          at processTag (/workspace/frontend/src/App.jsx:800:37)
          at async Promise.allSettled (index 1)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:882:35)
          at initializeRecipes (/workspace/frontend/src/App.jsx:270:9)

      171 |       return [];
      172 |     } catch (error) {
    > 173 |       console.warn(`⚠️ Smart search failed for "${tag}":`, error);
          |               ^
      174 |       return [];
      175 |     }
      176 |   }

      at warn (src/App.jsx:173:15)
      at processTag (src/App.jsx:800:37)
          at async Promise.allSettled (index 1)
      at getRecipesFromRecommendations (src/App.jsx:882:35)
      at initializeRecipes (src/App.jsx:270:9)

    console.warn
      ⚠️ Smart search failed for "FreshProduce": TypeError: Cannot read properties of undefined (reading 'length')
          at length (/workspace/frontend/src/App.jsx:168:93)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)
          at processTag (/workspace/frontend/src/App.jsx:800:37)
          at async Promise.allSettled (index 2)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:882:35)
          at initializeRecipes (/workspace/frontend/src/App.jsx:270:9)

      171 |       return [];
      172 |     } catch (error) {
    > 173 |       console.warn(`⚠️ Smart search failed for "${tag}":`, error);
          |               ^
      174 |       return [];
      175 |     }
      176 |   }

      at warn (src/App.jsx:173:15)
      at processTag (src/App.jsx:800:37)
          at async Promise.allSettled (index 2)
      at getRecipesFromRecommendations (src/App.jsx:882:35)
      at initializeRecipes (src/App.jsx:270:9)

    console.warn
      ⚠️ Smart search failed for "already spaced": TypeError: Cannot read properties of undefined (reading 'length')
          at length (/workspace/frontend/src/App.jsx:168:93)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)
          at processTag (/workspace/frontend/src/App.jsx:800:37)
          at async Promise.allSettled (index 3)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:882:35)
          at initializeRecipes (/workspace/frontend/src/App.jsx:270:9)

      171 |       return [];
      172 |     } catch (error) {
    > 173 |       console.warn(`⚠️ Smart search failed for "${tag}":`, error);
          |               ^
      174 |       return [];
      175 |     }
      176 |   }

      at warn (src/App.jsx:173:15)
      at processTag (src/App.jsx:800:37)
          at async Promise.allSettled (index 3)
      at getRecipesFromRecommendations (src/App.jsx:882:35)
      at initializeRecipes (src/App.jsx:270:9)

    console.warn
      ⚠️ Smart search failed for "SingleWord": TypeError: Cannot read properties of undefined (reading 'length')
          at length (/workspace/frontend/src/App.jsx:168:93)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)
          at processTag (/workspace/frontend/src/App.jsx:800:37)
          at async Promise.allSettled (index 4)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:882:35)
          at initializeRecipes (/workspace/frontend/src/App.jsx:270:9)

      171 |       return [];
      172 |     } catch (error) {
    > 173 |       console.warn(`⚠️ Smart search failed for "${tag}":`, error);
          |               ^
      174 |       return [];
      175 |     }
      176 |   }

      at warn (src/App.jsx:173:15)
      at processTag (src/App.jsx:800:37)
          at async Promise.allSettled (index 4)
      at getRecipesFromRecommendations (src/App.jsx:882:35)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      984 |           }
      985 |           
    > 986 |           setRecipes(uniqueRecipes);
          |           ^
      987 |           // Create a new Map instance to ensure React detects the state change
      988 |           const finalRecipesByCategory = new Map(deduplicatedRecipesByCategory);
      989 |           setRecipesByCategory(finalRecipesByCategory); // Update the state with organized recipes

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setRecipes (src/App.jsx:986:11)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      987 |           // Create a new Map instance to ensure React detects the state change
      988 |           const finalRecipesByCategory = new Map(deduplicatedRecipesByCategory);
    > 989 |           setRecipesByCategory(finalRecipesByCategory); // Update the state with organized recipes
          |           ^
      990 |           
      991 |           // If no recipes found, still clear loading state to prevent hanging
      992 |           if (uniqueRecipes.length === 0) {

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setRecipesByCategory (src/App.jsx:989:11)
      at initializeRecipes (src/App.jsx:270:9)

    console.warn
      ⚠️ No recipes found from search results, showing empty state

      991 |           // If no recipes found, still clear loading state to prevent hanging
      992 |           if (uniqueRecipes.length === 0) {
    > 993 |             console.warn('⚠️ No recipes found from search results, showing empty state');
          |                     ^
      994 |           }
      995 |         } else {
      996 |           console.warn('⚠️ No recommendations data received');

      at warn (src/App.jsx:993:21)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1007 |     } finally {
      1008 |       // Always clear loading state to prevent hanging
    > 1009 |       setIsLoadingRecipes(false);
           |       ^
      1010 |       setIsRefreshingRecipes(false);
      1011 |       console.log('✅ Recipe loading process completed');
      1012 |     }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:1009:7)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1008 |       // Always clear loading state to prevent hanging
      1009 |       setIsLoadingRecipes(false);
    > 1010 |       setIsRefreshingRecipes(false);
           |       ^
      1011 |       console.log('✅ Recipe loading process completed');
      1012 |     }
      1013 |   }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:1010:7)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1048 |       if (res.ok) {
      1049 |         const health = await res.json();
    > 1050 |         setClipperStatus('available');
           |         ^
      1051 |       } else {
      1052 |         console.warn('Clipper worker health check failed:', res.status);
      1053 |         setClipperStatus('unavailable');

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setClipperStatus (src/App.jsx:1050:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      727 |           // Extract just the category names
      728 |           const categories = Object.keys(data.recommendations);
    > 729 |           setRecipeCategories(categories);
          |           ^
      730 |           // Cache the category names for instant display on refreshes
      731 |           setCachedCategoryNames(categories);
      732 |           return categories;

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setRecipeCategories (src/App.jsx:729:11)
      at initializeRecipes (src/App.jsx:269:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      729 |           setRecipeCategories(categories);
      730 |           // Cache the category names for instant display on refreshes
    > 731 |           setCachedCategoryNames(categories);
          |           ^
      732 |           return categories;
      733 |         }
      734 |       }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setCachedCategoryNames (src/App.jsx:731:11)
      at initializeRecipes (src/App.jsx:269:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      749 |     
      750 |     try {
    > 751 |       setIsRefreshingRecipes(true);
          |       ^
      752 |       // Only set loading state if it's not already set (prevents flickering)
      753 |       // This prevents conflicts when called from functions that already set isLoadingRecipes
      754 |       if (!isLoadingRecipes) {

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:751:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      753 |       // This prevents conflicts when called from functions that already set isLoadingRecipes
      754 |       if (!isLoadingRecipes) {
    > 755 |         setIsLoadingRecipes(true);
          |         ^
      756 |       }
      757 |       
      758 |       const RECOMMENDATION_API_URL = import.meta.env.VITE_RECOMMENDATION_API_URL;

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:755:9)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1029 |   // Helper function to clear search cache (useful for fresh data)
      1030 |   function clearSearchCache() {
    > 1031 |     setSearchCache(new Map());
           |     ^
      1032 |   }
      1033 |
      1034 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setSearchCache (src/App.jsx:1031:5)
      at clearSearchCache (src/App.jsx:762:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.log
      📋 Processing recommendations for categories: [ 'Test' ]

      at log (src/App.jsx:782:19)

    console.warn
      ⚠️ Smart search failed for "dessert": TypeError: Cannot read properties of undefined (reading 'length')
          at length (/workspace/frontend/src/App.jsx:168:93)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)
          at processTag (/workspace/frontend/src/App.jsx:800:37)
          at async Promise.allSettled (index 0)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:882:35)
          at initializeRecipes (/workspace/frontend/src/App.jsx:270:9)

      171 |       return [];
      172 |     } catch (error) {
    > 173 |       console.warn(`⚠️ Smart search failed for "${tag}":`, error);
          |               ^
      174 |       return [];
      175 |     }
      176 |   }

      at warn (src/App.jsx:173:15)
      at processTag (src/App.jsx:800:37)
          at async Promise.allSettled (index 0)
      at getRecipesFromRecommendations (src/App.jsx:882:35)
      at initializeRecipes (src/App.jsx:270:9)

    console.warn
      ⚠️ Smart search failed for "italian": TypeError: Cannot read properties of undefined (reading 'length')
          at length (/workspace/frontend/src/App.jsx:168:93)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)
          at processTag (/workspace/frontend/src/App.jsx:800:37)
          at async Promise.allSettled (index 1)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:882:35)
          at initializeRecipes (/workspace/frontend/src/App.jsx:270:9)

      171 |       return [];
      172 |     } catch (error) {
    > 173 |       console.warn(`⚠️ Smart search failed for "${tag}":`, error);
          |               ^
      174 |       return [];
      175 |     }
      176 |   }

      at warn (src/App.jsx:173:15)
      at processTag (src/App.jsx:800:37)
          at async Promise.allSettled (index 1)
      at getRecipesFromRecommendations (src/App.jsx:882:35)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      984 |           }
      985 |           
    > 986 |           setRecipes(uniqueRecipes);
          |           ^
      987 |           // Create a new Map instance to ensure React detects the state change
      988 |           const finalRecipesByCategory = new Map(deduplicatedRecipesByCategory);
      989 |           setRecipesByCategory(finalRecipesByCategory); // Update the state with organized recipes

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setRecipes (src/App.jsx:986:11)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      987 |           // Create a new Map instance to ensure React detects the state change
      988 |           const finalRecipesByCategory = new Map(deduplicatedRecipesByCategory);
    > 989 |           setRecipesByCategory(finalRecipesByCategory); // Update the state with organized recipes
          |           ^
      990 |           
      991 |           // If no recipes found, still clear loading state to prevent hanging
      992 |           if (uniqueRecipes.length === 0) {

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setRecipesByCategory (src/App.jsx:989:11)
      at initializeRecipes (src/App.jsx:270:9)

    console.warn
      ⚠️ No recipes found from search results, showing empty state

      991 |           // If no recipes found, still clear loading state to prevent hanging
      992 |           if (uniqueRecipes.length === 0) {
    > 993 |             console.warn('⚠️ No recipes found from search results, showing empty state');
          |                     ^
      994 |           }
      995 |         } else {
      996 |           console.warn('⚠️ No recommendations data received');

      at warn (src/App.jsx:993:21)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1007 |     } finally {
      1008 |       // Always clear loading state to prevent hanging
    > 1009 |       setIsLoadingRecipes(false);
           |       ^
      1010 |       setIsRefreshingRecipes(false);
      1011 |       console.log('✅ Recipe loading process completed');
      1012 |     }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:1009:7)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1008 |       // Always clear loading state to prevent hanging
      1009 |       setIsLoadingRecipes(false);
    > 1010 |       setIsRefreshingRecipes(false);
           |       ^
      1011 |       console.log('✅ Recipe loading process completed');
      1012 |     }
      1013 |   }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:1010:7)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1048 |       if (res.ok) {
      1049 |         const health = await res.json();
    > 1050 |         setClipperStatus('available');
           |         ^
      1051 |       } else {
      1052 |         console.warn('Clipper worker health check failed:', res.status);
      1053 |         setClipperStatus('unavailable');

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setClipperStatus (src/App.jsx:1050:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      727 |           // Extract just the category names
      728 |           const categories = Object.keys(data.recommendations);
    > 729 |           setRecipeCategories(categories);
          |           ^
      730 |           // Cache the category names for instant display on refreshes
      731 |           setCachedCategoryNames(categories);
      732 |           return categories;

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setRecipeCategories (src/App.jsx:729:11)
      at initializeRecipes (src/App.jsx:269:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      729 |           setRecipeCategories(categories);
      730 |           // Cache the category names for instant display on refreshes
    > 731 |           setCachedCategoryNames(categories);
          |           ^
      732 |           return categories;
      733 |         }
      734 |       }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setCachedCategoryNames (src/App.jsx:731:11)
      at initializeRecipes (src/App.jsx:269:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      749 |     
      750 |     try {
    > 751 |       setIsRefreshingRecipes(true);
          |       ^
      752 |       // Only set loading state if it's not already set (prevents flickering)
      753 |       // This prevents conflicts when called from functions that already set isLoadingRecipes
      754 |       if (!isLoadingRecipes) {

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:751:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      753 |       // This prevents conflicts when called from functions that already set isLoadingRecipes
      754 |       if (!isLoadingRecipes) {
    > 755 |         setIsLoadingRecipes(true);
          |         ^
      756 |       }
      757 |       
      758 |       const RECOMMENDATION_API_URL = import.meta.env.VITE_RECOMMENDATION_API_URL;

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:755:9)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1029 |   // Helper function to clear search cache (useful for fresh data)
      1030 |   function clearSearchCache() {
    > 1031 |     setSearchCache(new Map());
           |     ^
      1032 |   }
      1033 |
      1034 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setSearchCache (src/App.jsx:1031:5)
      at clearSearchCache (src/App.jsx:762:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.log
      📋 Processing recommendations for categories: [ 'Category 1', 'Category 2', 'Category 3' ]

      at log (src/App.jsx:782:19)

    console.warn
      ⚠️ Smart search failed for "test": TypeError: Cannot read properties of undefined (reading 'length')
          at length (/workspace/frontend/src/App.jsx:168:93)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)
          at processTag (/workspace/frontend/src/App.jsx:800:37)
          at async Promise.allSettled (index 0)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:882:35)
          at initializeRecipes (/workspace/frontend/src/App.jsx:270:9)

      171 |       return [];
      172 |     } catch (error) {
    > 173 |       console.warn(`⚠️ Smart search failed for "${tag}":`, error);
          |               ^
      174 |       return [];
      175 |     }
      176 |   }

      at warn (src/App.jsx:173:15)
      at processTag (src/App.jsx:800:37)
          at async Promise.allSettled (index 0)
      at getRecipesFromRecommendations (src/App.jsx:882:35)
      at initializeRecipes (src/App.jsx:270:9)

    console.warn
      ⚠️ Smart search failed for "test": TypeError: Cannot read properties of undefined (reading 'length')
          at length (/workspace/frontend/src/App.jsx:168:93)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)
          at processTag (/workspace/frontend/src/App.jsx:800:37)
          at async Promise.allSettled (index 1)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:882:35)
          at initializeRecipes (/workspace/frontend/src/App.jsx:270:9)

      171 |       return [];
      172 |     } catch (error) {
    > 173 |       console.warn(`⚠️ Smart search failed for "${tag}":`, error);
          |               ^
      174 |       return [];
      175 |     }
      176 |   }

      at warn (src/App.jsx:173:15)
      at processTag (src/App.jsx:800:37)
          at async Promise.allSettled (index 1)
      at getRecipesFromRecommendations (src/App.jsx:882:35)
      at initializeRecipes (src/App.jsx:270:9)

    console.warn
      ⚠️ Smart search failed for "test": TypeError: Cannot read properties of undefined (reading 'length')
          at length (/workspace/frontend/src/App.jsx:168:93)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)
          at processTag (/workspace/frontend/src/App.jsx:800:37)
          at async Promise.allSettled (index 2)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:882:35)
          at initializeRecipes (/workspace/frontend/src/App.jsx:270:9)

      171 |       return [];
      172 |     } catch (error) {
    > 173 |       console.warn(`⚠️ Smart search failed for "${tag}":`, error);
          |               ^
      174 |       return [];
      175 |     }
      176 |   }

      at warn (src/App.jsx:173:15)
      at processTag (src/App.jsx:800:37)
          at async Promise.allSettled (index 2)
      at getRecipesFromRecommendations (src/App.jsx:882:35)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      984 |           }
      985 |           
    > 986 |           setRecipes(uniqueRecipes);
          |           ^
      987 |           // Create a new Map instance to ensure React detects the state change
      988 |           const finalRecipesByCategory = new Map(deduplicatedRecipesByCategory);
      989 |           setRecipesByCategory(finalRecipesByCategory); // Update the state with organized recipes

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setRecipes (src/App.jsx:986:11)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      987 |           // Create a new Map instance to ensure React detects the state change
      988 |           const finalRecipesByCategory = new Map(deduplicatedRecipesByCategory);
    > 989 |           setRecipesByCategory(finalRecipesByCategory); // Update the state with organized recipes
          |           ^
      990 |           
      991 |           // If no recipes found, still clear loading state to prevent hanging
      992 |           if (uniqueRecipes.length === 0) {

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setRecipesByCategory (src/App.jsx:989:11)
      at initializeRecipes (src/App.jsx:270:9)

    console.warn
      ⚠️ No recipes found from search results, showing empty state

      991 |           // If no recipes found, still clear loading state to prevent hanging
      992 |           if (uniqueRecipes.length === 0) {
    > 993 |             console.warn('⚠️ No recipes found from search results, showing empty state');
          |                     ^
      994 |           }
      995 |         } else {
      996 |           console.warn('⚠️ No recommendations data received');

      at warn (src/App.jsx:993:21)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1007 |     } finally {
      1008 |       // Always clear loading state to prevent hanging
    > 1009 |       setIsLoadingRecipes(false);
           |       ^
      1010 |       setIsRefreshingRecipes(false);
      1011 |       console.log('✅ Recipe loading process completed');
      1012 |     }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:1009:7)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1008 |       // Always clear loading state to prevent hanging
      1009 |       setIsLoadingRecipes(false);
    > 1010 |       setIsRefreshingRecipes(false);
           |       ^
      1011 |       console.log('✅ Recipe loading process completed');
      1012 |     }
      1013 |   }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:1010:7)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

  ● Recommendation Helper Functions › Loading State Management › should start with loading state true

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      276 |       // Should show loading cards immediately
      277 |       const loadingCards = container.querySelectorAll('.loading-card');
    > 278 |       expect(loadingCards.length).toBeGreaterThan(0);
          |                                   ^
      279 |     });
      280 |   });
      281 | });

      at Object.toBeGreaterThan (src/__tests__/RecommendationHelpers.test.jsx:278:35)

FAIL src/__tests__/ComponentBranchCoverage.test.jsx
  ● Component Branch Coverage Tests › SwipeableRecipeGrid - checkScrollPosition branches › handles scrollLeft at exact boundary

    TestingLibraryElementError: Unable to find a label with the text of: Scroll left

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"carousel-container"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipe-grid category-recipes carousel-layout"[39m
          [36m/>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      61 |
      62 |       // Only left button should show
    > 63 |       expect(screen.getByLabelText('Scroll left')).toBeInTheDocument();
         |                     ^
      64 |       expect(screen.queryByLabelText('Scroll right')).not.toBeInTheDocument();
      65 |     });
      66 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:111:38)
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByLabelText (src/__tests__/ComponentBranchCoverage.test.jsx:63:21)

  ● Component Branch Coverage Tests › SwipeableRecipeGrid - checkScrollPosition branches › handles negative scrollLeft edge case

    TestingLibraryElementError: Unable to find a label with the text of: Scroll right

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"carousel-container"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipe-grid category-recipes carousel-layout"[39m
          [36m/>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      86 |       // Should treat as scrollLeft = 0
      87 |       expect(screen.queryByLabelText('Scroll left')).not.toBeInTheDocument();
    > 88 |       expect(screen.getByLabelText('Scroll right')).toBeInTheDocument();
         |                     ^
      89 |     });
      90 |   });
      91 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:111:38)
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByLabelText (src/__tests__/ComponentBranchCoverage.test.jsx:88:21)

  ● Component Branch Coverage Tests › Edge Case Scenarios › handles extremely large scroll values

    TestingLibraryElementError: Unable to find a label with the text of: Scroll right

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"carousel-container"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipe-grid category-recipes carousel-layout"[39m
          [36m/>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      196 |
      197 |       // Should show right button
    > 198 |       expect(screen.getByLabelText('Scroll right')).toBeInTheDocument();
          |                     ^
      199 |     });
      200 |
      201 |     it('handles zero clientWidth', () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:111:38)
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByLabelText (src/__tests__/ComponentBranchCoverage.test.jsx:198:21)

  ● Component Branch Coverage Tests › Edge Case Scenarios › handles zero clientWidth

    TestingLibraryElementError: Unable to find a label with the text of: Scroll right

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"carousel-container"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipe-grid category-recipes carousel-layout"[39m
          [36m/>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      219 |
      220 |       // Should show navigation since scrollWidth > clientWidth
    > 221 |       expect(screen.getByLabelText('Scroll right')).toBeInTheDocument();
          |                     ^
      222 |     });
      223 |
      224 |     it('handles fractional scroll values', () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:111:38)
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByLabelText (src/__tests__/ComponentBranchCoverage.test.jsx:221:21)

  ● Component Branch Coverage Tests › Edge Case Scenarios › handles fractional scroll values

    TestingLibraryElementError: Unable to find a label with the text of: Scroll left

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"carousel-container"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipe-grid category-recipes carousel-layout"[39m
          [36m/>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      242 |
      243 |       // Should handle fractional values correctly
    > 244 |       expect(screen.getByLabelText('Scroll left')).toBeInTheDocument();
          |                     ^
      245 |       expect(screen.getByLabelText('Scroll right')).toBeInTheDocument();
      246 |     });
      247 |   });

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:111:38)
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByLabelText (src/__tests__/ComponentBranchCoverage.test.jsx:244:21)

  ● Component Branch Coverage Tests › Conditional Rendering Branches › handles rapid state changes

    expect(received).toBeInTheDocument()

    received value must be an HTMLElement or an SVGElement.
    Received has value: null

      314 |       // Updated state
      315 |       act(() => {
    > 316 |         expect(screen.queryByLabelText('Scroll left')).toBeInTheDocument();
          |                                                        ^
      317 |         expect(screen.queryByLabelText('Scroll right')).not.toBeInTheDocument();
      318 |       });
      319 |     });

      at __EXTERNAL_MATCHER_TRAP__ (node_modules/expect/build/index.js:2240:22)
      at Object.throwingMatcher [as toBeInTheDocument] (node_modules/expect/build/index.js:2241:6)
      at toBeInTheDocument (src/__tests__/ComponentBranchCoverage.test.jsx:316:56)
      at node_modules/@testing-library/react/dist/act-compat.js:48:24
      at act (node_modules/react/cjs/react.development.js:2512:16)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at Object.<anonymous> (src/__tests__/ComponentBranchCoverage.test.jsx:315:10)

  ● Component Branch Coverage Tests › Function Call Coverage › covers all scroll direction branches

    TestingLibraryElementError: Unable to find a label with the text of: Scroll left

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"carousel-container"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipe-grid category-recipes carousel-layout"[39m
          [36m/>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      342 |
      343 |       // Test left scroll
    > 344 |       const leftButton = screen.getByLabelText('Scroll left');
          |                                 ^
      345 |       leftButton.click();
      346 |       
      347 |       expect(mockScrollBy).toHaveBeenLastCalledWith({

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:111:38)
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByLabelText (src/__tests__/ComponentBranchCoverage.test.jsx:344:33)

FAIL src/__tests__/Recommendations.test.jsx (9.747 s)
  ● Console

    console.log
      Could not get user location, using default

      at log (src/components/Recommendations.jsx:169:19)

    console.log
      Could not get user location, using default

      at log (src/components/Recommendations.jsx:169:19)

    console.log
      Could not get user location, using default

      at log (src/components/Recommendations.jsx:169:19)

    console.log
      Could not get user location, using default

      at log (src/components/Recommendations.jsx:169:19)

    console.error
      Failed to fetch recommendations: 500

      233 |         setRecommendations(data);
      234 |       } else {
    > 235 |         console.error('Failed to fetch recommendations:', res.status);
          |                 ^
      236 |         setRecommendations(null);
      237 |       }
      238 |     } catch (e) {

      at error (src/components/Recommendations.jsx:235:17)

    console.log
      Could not get user location, using default

      at log (src/components/Recommendations.jsx:169:19)

    console.error
      Error fetching recommendations: Error: Network error
          at /workspace/frontend/src/__tests__/Recommendations.test.jsx:239:51
          at /workspace/frontend/node_modules/jest-mock/build/index.js:305:39
          at /workspace/frontend/node_modules/jest-mock/build/index.js:312:13
          at mockConstructor (/workspace/frontend/node_modules/jest-mock/build/index.js:102:19)
          at fetch (/workspace/frontend/src/components/Recommendations.jsx:177:25)

      237 |       }
      238 |     } catch (e) {
    > 239 |       console.error('Error fetching recommendations:', e);
          |               ^
      240 |       setRecommendations(null);
      241 |     } finally {
      242 |       setIsLoadingRecommendations(false);

      at error (src/components/Recommendations.jsx:239:15)

    console.log
      Could not get user location, using default

      at log (src/components/Recommendations.jsx:169:19)

    console.log
      Could not get user location, using default

      at log (src/components/Recommendations.jsx:169:19)

    console.log
      Could not get user location, using default

      at log (src/components/Recommendations.jsx:169:19)

    console.error
      Invalid tags format for category Invalid Category: not an array

      458 |               // Ensure tags is an array
      459 |               if (!Array.isArray(tags)) {
    > 460 |                 console.error(`Invalid tags format for category ${categoryName}:`, tags);
          |                         ^
      461 |                 return null;
      462 |               }
      463 |               

      at error (src/components/Recommendations.jsx:460:25)
          at Array.map (<anonymous>)
      at map (src/components/Recommendations.jsx:457:68)
      at Recommendations (src/components/Recommendations.jsx:577:10)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom.development.js:15486:18)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom.development.js:19617:20)
      at beginWork (node_modules/react-dom/cjs/react-dom.development.js:21640:16)
      at beginWork$1 (node_modules/react-dom/cjs/react-dom.development.js:27465:14)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom.development.js:26599:12)
      at workLoopSync (node_modules/react-dom/cjs/react-dom.development.js:26505:5)
      at renderRootSync (node_modules/react-dom/cjs/react-dom.development.js:26473:7)
      at performConcurrentWorkOnRoot (node_modules/react-dom/cjs/react-dom.development.js:25777:74)
      at workLoop (node_modules/scheduler/cjs/scheduler.development.js:266:34)
      at flushWork (node_modules/scheduler/cjs/scheduler.development.js:239:14)
      at performWorkUntilDeadline (node_modules/scheduler/cjs/scheduler.development.js:533:21)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

    console.error
      Invalid tags format for category Invalid Category: not an array

      458 |               // Ensure tags is an array
      459 |               if (!Array.isArray(tags)) {
    > 460 |                 console.error(`Invalid tags format for category ${categoryName}:`, tags);
          |                         ^
      461 |                 return null;
      462 |               }
      463 |               

      at error (src/components/Recommendations.jsx:460:25)
          at Array.map (<anonymous>)
      at map (src/components/Recommendations.jsx:457:68)
      at Recommendations (src/components/Recommendations.jsx:577:10)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom.development.js:15486:18)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom.development.js:19617:20)
      at beginWork (node_modules/react-dom/cjs/react-dom.development.js:21640:16)
      at beginWork$1 (node_modules/react-dom/cjs/react-dom.development.js:27465:14)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom.development.js:26599:12)
      at workLoopSync (node_modules/react-dom/cjs/react-dom.development.js:26505:5)
      at renderRootSync (node_modules/react-dom/cjs/react-dom.development.js:26473:7)
      at performConcurrentWorkOnRoot (node_modules/react-dom/cjs/react-dom.development.js:25777:74)
      at workLoop (node_modules/scheduler/cjs/scheduler.development.js:266:34)
      at flushWork (node_modules/scheduler/cjs/scheduler.development.js:239:14)
      at performWorkUntilDeadline (node_modules/scheduler/cjs/scheduler.development.js:533:21)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

    console.log
      Could not get user location, using default

      at log (src/components/Recommendations.jsx:169:19)

    console.log
      Could not get user location, using default

      at log (src/components/Recommendations.jsx:169:19)

    console.log
      Could not get user location, using default

      at log (src/components/Recommendations.jsx:169:19)

  ● Recommendations Component › calls onRecipeSelect when recipe card is clicked

    Unable to find an element with the text: Summer Berry Salad. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"recommendations-container"[39m
        [36m/>[39m
      [36m</div>[39m
    [36m</body>[39m

      291 |
      292 |     // Wait for recommendations to load and recipes to be fetched
    > 293 |     await waitFor(() => {
          |                  ^
      294 |       expect(screen.getByText('Summer Berry Salad')).toBeInTheDocument();
      295 |     });
      296 |

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (src/__tests__/Recommendations.test.jsx:293:18)

  ● Recommendations Component › handles malformed recommendations gracefully

    thrown: "Exceeded timeout of 5000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      332 |   });
      333 |
    > 334 |   it('handles malformed recommendations gracefully', async () => {
          |   ^
      335 |     const mockRecommendations = {
      336 |       recommendations: {
      337 |         'Valid Category': ['valid tag'],

      at it (src/__tests__/Recommendations.test.jsx:334:3)
      at Object.describe (src/__tests__/Recommendations.test.jsx:31:1)

  ● Recommendations Component › Carousel Integration › uses SwipeableRecipeGrid for recipe display

    Unable to find an element with the text: Test Category. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"recommendations-container"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recommendation-category"[39m
          [36m>[39m
            [36m<h2[39m
              [33mclass[39m=[32m"category-title"[39m
            [36m>[39m
              [0mSeasonal Favorites[0m
            [36m</h2>[39m
            [36m<div[39m
              [33mclass[39m=[32m"carousel-container"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"recipe-grid category-recipes carousel-layout"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recommendation-category"[39m
          [36m>[39m
            [36m<h2[39m
              [33mclass[39m=[32m"category-title"[39m
            [36m>[39m
              [0mLocal Specialties[0m
            [36m</h2>[39m
            [36m<div[39m
              [33mclass[39m=[32m"carousel-container"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"recipe-grid category-recipes carousel-layout"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recommendation-category"[39m
          [36m>[39m
            [36m<h2[39m
              [33mclass[39m=[32m"category-title"[39m
            [36m>[39m
              [0mHoliday Treats[0m
            [36m</h2>[39m
            [36m<div[39m
              [33mclass[39m=[32m"carousel-container"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"recipe-grid category-recipes carousel-layout"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      416 |       render(<Recommendations onRecipeSelect={mockOnRecipeSelect} />);
      417 |
    > 418 |       await waitFor(() => {
          |                    ^
      419 |         // Check that SwipeableRecipeGrid is used (we mocked it in the test setup)
      420 |         const categoryContainer = screen.getByText('Test Category').closest('.recommendation-category');
      421 |         expect(categoryContainer).toBeInTheDocument();

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (src/__tests__/Recommendations.test.jsx:418:20)

  ● Recommendations Component › Carousel Integration › displays up to 10 recipes in carousel format

    Unable to find an element by: [data-testid="recipe-item"]

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"recommendations-container"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recommendation-category"[39m
          [36m>[39m
            [36m<h2[39m
              [33mclass[39m=[32m"category-title"[39m
            [36m>[39m
              [0mSeasonal Favorites[0m
            [36m</h2>[39m
            [36m<div[39m
              [33mclass[39m=[32m"carousel-container"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"recipe-grid category-recipes carousel-layout"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recommendation-category"[39m
          [36m>[39m
            [36m<h2[39m
              [33mclass[39m=[32m"category-title"[39m
            [36m>[39m
              [0mLocal Specialties[0m
            [36m</h2>[39m
            [36m<div[39m
              [33mclass[39m=[32m"carousel-container"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"recipe-grid category-recipes carousel-layout"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recommendation-category"[39m
          [36m>[39m
            [36m<h2[39m
              [33mclass[39m=[32m"category-title"[39m
            [36m>[39m
              [0mHoliday Treats[0m
            [36m</h2>[39m
            [36m<div[39m
              [33mclass[39m=[32m"carousel-container"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"recipe-grid category-recipes carousel-layout"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      460 |       render(<Recommendations onRecipeSelect={mockOnRecipeSelect} />);
      461 |
    > 462 |       await waitFor(() => {
          |                    ^
      463 |         const recipeCards = screen.getAllByTestId('recipe-item');
      464 |         // Should only display 10 recipes maximum
      465 |         expect(recipeCards).toHaveLength(10);

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (src/__tests__/Recommendations.test.jsx:462:20)

  ● Recommendations Component › Carousel Integration › maintains carousel functionality across category updates

    Unable to find an element with the text: Initial Recipe 0. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"recommendations-container"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recommendation-category"[39m
          [36m>[39m
            [36m<h2[39m
              [33mclass[39m=[32m"category-title"[39m
            [36m>[39m
              [0mSeasonal Favorites[0m
            [36m</h2>[39m
            [36m<div[39m
              [33mclass[39m=[32m"carousel-container"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"recipe-grid category-recipes carousel-layout"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recommendation-category"[39m
          [36m>[39m
            [36m<h2[39m
              [33mclass[39m=[32m"category-title"[39m
            [36m>[39m
              [0mLocal Specialties[0m
            [36m</h2>[39m
            [36m<div[39m
              [33mclass[39m=[32m"carousel-container"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"recipe-grid category-recipes carousel-layout"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recommendation-category"[39m
          [36m>[39m
            [36m<h2[39m
              [33mclass[39m=[32m"category-title"[39m
            [36m>[39m
              [0mHoliday Treats[0m
            [36m</h2>[39m
            [36m<div[39m
              [33mclass[39m=[32m"carousel-container"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"recipe-grid category-recipes carousel-layout"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"recipe-card loading-card"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-image loading-pulse"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-shimmer"[39m
                    [36m/>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"recipe-card-content"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"loading-text loading-pulse"[39m
                    [36m/>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      510 |       const { rerender } = render(<Recommendations onRecipeSelect={mockOnRecipeSelect} />);
      511 |
    > 512 |       await waitFor(() => {
          |                    ^
      513 |         expect(screen.getByText('Initial Recipe 0')).toBeInTheDocument();
      514 |       });
      515 |

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (src/__tests__/Recommendations.test.jsx:512:20)

PASS src/__tests__/VideoPopup.test.jsx
  ● Console

    console.error
      Error getting recipe categories: TypeError: Cannot read properties of undefined (reading 'finally')
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:152:7)
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:710:25)
          at getRecipeCategories (/workspace/frontend/src/App.jsx:269:15)
          at initializeRecipes (/workspace/frontend/src/App.jsx:287:5)
          at commitHookEffectListMount (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
          at commitPassiveMountOnFiber (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
          at commitPassiveMountEffects_complete (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
          at commitPassiveMountEffects_begin (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
          at commitPassiveMountEffects (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
          at flushPassiveEffectsImpl (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
          at flushPassiveEffects (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
          at /workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:26808:9
          at flushActQueue (/workspace/frontend/node_modules/react/cjs/react.development.js:2667:24)
          at act (/workspace/frontend/node_modules/react/cjs/react.development.js:2582:11)
          at /workspace/frontend/node_modules/@testing-library/react/dist/act-compat.js:47:25
          at renderRoot (/workspace/frontend/node_modules/@testing-library/react/dist/pure.js:190:26)
          at render (/workspace/frontend/node_modules/@testing-library/react/dist/pure.js:292:10)
          at Object.<anonymous> (/workspace/frontend/src/__tests__/VideoPopup.test.jsx:130:11)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)

      735 |       return [];
      736 |     } catch (e) {
    > 737 |       console.error('Error getting recipe categories:', e);
          |               ^
      738 |       return [];
      739 |     }
      740 |   }

      at error (src/App.jsx:737:15)
      at getRecipeCategories (src/App.jsx:269:15)
      at initializeRecipes (src/App.jsx:287:5)
      at commitHookEffectListMount (node_modules/react-dom/cjs/react-dom.development.js:23189:26)
      at commitPassiveMountOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24970:11)
      at commitPassiveMountEffects_complete (node_modules/react-dom/cjs/react-dom.development.js:24930:9)
      at commitPassiveMountEffects_begin (node_modules/react-dom/cjs/react-dom.development.js:24917:7)
      at commitPassiveMountEffects (node_modules/react-dom/cjs/react-dom.development.js:24905:3)
      at flushPassiveEffectsImpl (node_modules/react-dom/cjs/react-dom.development.js:27078:3)
      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom.development.js:27023:14)
      at node_modules/react-dom/cjs/react-dom.development.js:26808:9
      at flushActQueue (node_modules/react/cjs/react.development.js:2667:24)
      at act (node_modules/react/cjs/react.development.js:2582:11)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/__tests__/VideoPopup.test.jsx:130:11)

    console.error
      Error getting recipes from recommendations: TypeError: Cannot read properties of undefined (reading 'finally')
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:152:7)
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:765:25)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:270:15)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)

      1002 |       }
      1003 |     } catch (e) {
    > 1004 |       console.error('Error getting recipes from recommendations:', e);
           |               ^
      1005 |       setRecipes([]);
      1006 |       setIsRefreshingRecipes(false);
      1007 |     } finally {

      at error (src/App.jsx:1004:15)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      Error checking clipper worker health: TypeError: Cannot read properties of undefined (reading 'ok')
          at ok (/workspace/frontend/src/App.jsx:1048:15)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)

      1054 |       }
      1055 |     } catch (e) {
    > 1056 |       console.error('Error checking clipper worker health:', e);
           |               ^
      1057 |       setClipperStatus('unavailable');
      1058 |     }
      1059 |   }

      at error (src/App.jsx:1056:15)

    console.log
      Fetch calls: [
        [
          'undefined/recommendations',
          {
            method: 'POST',
            mode: 'cors',
            headers: [Object],
            body: '{"location":"San Francisco, CA","date":"2025-08-19"}',
            signal: AbortSignal {}
          }
        ],
        [
          'https://test-clipper-api.example.com/health',
          { method: 'GET', mode: 'cors', headers: [Object] }
        ],
        [
          'undefined/recommendations',
          {
            method: 'POST',
            mode: 'cors',
            headers: [Object],
            body: '{"location":"San Francisco, CA","date":"2025-08-19"}',
            signal: AbortSignal {}
          }
        ]
      ]

      at Object.log (src/__tests__/VideoPopup.test.jsx:138:13)

    console.log
      Recipes fetch call: undefined

      at Object.log (src/__tests__/VideoPopup.test.jsx:142:13)

    console.log
      Recipe elements found: [
        <ref *1> HTMLHeadingElement {
          '__reactFiber$0cbd8ly2gpfb': FiberNode {
            tag: 5,
            key: null,
            elementType: 'h2',
            type: 'h2',
            stateNode: [Circular *1],
            return: [FiberNode],
            child: null,
            sibling: [FiberNode],
            index: 0,
            ref: null,
            pendingProps: [Object],
            memoizedProps: [Object],
            updateQueue: null,
            memoizedState: null,
            dependencies: null,
            mode: 1,
            flags: 1048576,
            subtreeFlags: 0,
            deletions: null,
            lanes: 0,
            childLanes: 0,
            alternate: null,
            actualDuration: 0,
            actualStartTime: -1,
            selfBaseDuration: 0,
            treeBaseDuration: 0,
            _debugSource: undefined,
            _debugOwner: [FiberNode],
            _debugNeedsRemount: false,
            _debugHookTypes: null
          },
          '__reactProps$0cbd8ly2gpfb': { children: 'No Recipes Found' },
          [Symbol(SameObject caches)]: [Object: null prototype] { childNodes: NodeList {} }
        },
        <ref *2> HTMLParagraphElement {
          '__reactFiber$0cbd8ly2gpfb': FiberNode {
            tag: 5,
            key: null,
            elementType: 'p',
            type: 'p',
            stateNode: [Circular *2],
            return: [FiberNode],
            child: null,
            sibling: [FiberNode],
            index: 1,
            ref: null,
            pendingProps: [Object],
            memoizedProps: [Object],
            updateQueue: null,
            memoizedState: null,
            dependencies: null,
            mode: 1,
            flags: 1048576,
            subtreeFlags: 0,
            deletions: null,
            lanes: 0,
            childLanes: 0,
            alternate: null,
            actualDuration: 0,
            actualStartTime: -1,
            selfBaseDuration: 0,
            treeBaseDuration: 0,
            _debugSource: undefined,
            _debugOwner: [FiberNode],
            _debugNeedsRemount: false,
            _debugHookTypes: null
          },
          '__reactProps$0cbd8ly2gpfb': {
            children: "We couldn't load any recipes at the moment. This might be due to:"
          },
          [Symbol(SameObject caches)]: [Object: null prototype] { childNodes: NodeList {} }
        },
        <ref *3> HTMLLIElement {
          '__reactFiber$0cbd8ly2gpfb': FiberNode {
            tag: 5,
            key: null,
            elementType: 'li',
            type: 'li',
            stateNode: [Circular *3],
            return: [FiberNode],
            child: null,
            sibling: null,
            index: 2,
            ref: null,
            pendingProps: [Object],
            memoizedProps: [Object],
            updateQueue: null,
            memoizedState: null,
            dependencies: null,
            mode: 1,
            flags: 1048576,
            subtreeFlags: 0,
            deletions: null,
            lanes: 0,
            childLanes: 0,
            alternate: null,
            actualDuration: 0,
            actualStartTime: -1,
            selfBaseDuration: 0,
            treeBaseDuration: 0,
            _debugSource: undefined,
            _debugOwner: [FiberNode],
            _debugNeedsRemount: false,
            _debugHookTypes: null
          },
          '__reactProps$0cbd8ly2gpfb': { children: 'No recipes matching current recommendations' },
          [Symbol(SameObject caches)]: [Object: null prototype] { childNodes: NodeList {} }
        }
      ]

      at log (src/__tests__/VideoPopup.test.jsx:148:15)

    console.log
      Full rendered content: <div><canvas class="seasoning-background" style="display: block; position: fixed; top: 0px; left: 0px; width: 100vw; height: 100vh; z-index: -1; pointer-events: none;"></canvas><div class="header-container"><h1 class="title"><img src="/spoon.svg" alt="Seasoned" class="title-icon">Seasoned<div class="title-search  "><input type="text" class="title-search-input" placeholder="Search recipes or paste a URL to clip..." aria-label="Search recipes" value=""><button class="title-search-button " aria-label="Search" title="Search recipes"><svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="11" cy="11" r="8"></circle><path d="m21 21-4.35-4.35"></path></svg></button></div></h1></div><div class="container "><div class="recipes-list"><div class="no-recipes-found"><div class="no-recipes-content"><h2>No Recipes Found</h2><p>We couldn't load any recipes at the moment. This might be due to:</p><ul><li>Network connectivity issues</li><li>Search service temporarily unavailable</li><li>No recipes matching current recommendations</li></ul><button class="retry-button">🔄 Try Again</button></div></div></div></div></div>

      at log (src/__tests__/VideoPopup.test.jsx:152:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 338.53256312438157,
        y: 244.2456892980303,
        size: 2.070860791180591,
        opacity: 0.3083886174127258,
        speed: 0.2951655307822886,
        color: 'rgba(139, 69, 19, ',
        type: 'circle',
        rotation: 3.785216972173523,
        rotationSpeed: 0.0032817978594931454,
        twinkle: 1.0024774900665485,
        twinkleSpeed: 0.012376977493994497
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      280 |         setRecipes([]);
      281 |       } finally {
    > 282 |         setIsInitializing(false); // Mark initialization as complete
          |         ^
      283 |         setIsLoadingRecipes(false); // Ensure loading state is cleared
      284 |         console.log('✅ Initialization completed');
      285 |       }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsInitializing (src/App.jsx:282:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      281 |       } finally {
      282 |         setIsInitializing(false); // Mark initialization as complete
    > 283 |         setIsLoadingRecipes(false); // Ensure loading state is cleared
          |         ^
      284 |         console.log('✅ Initialization completed');
      285 |       }
      286 |     };

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:283:9)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.log
      Recipe elements after wait: [
        <ref *1> HTMLHeadingElement {
          '__reactFiber$0cbd8ly2gpfb': FiberNode {
            tag: 5,
            key: null,
            elementType: 'h2',
            type: 'h2',
            stateNode: [Circular *1],
            return: [FiberNode],
            child: null,
            sibling: [FiberNode],
            index: 0,
            ref: null,
            pendingProps: [Object],
            memoizedProps: [Object],
            updateQueue: null,
            memoizedState: null,
            dependencies: null,
            mode: 1,
            flags: 1048576,
            subtreeFlags: 0,
            deletions: null,
            lanes: 0,
            childLanes: 0,
            alternate: [FiberNode],
            actualDuration: 0,
            actualStartTime: -1,
            selfBaseDuration: 0,
            treeBaseDuration: 0,
            _debugSource: undefined,
            _debugOwner: [FiberNode],
            _debugNeedsRemount: false,
            _debugHookTypes: null
          },
          '__reactProps$0cbd8ly2gpfb': { children: 'No Recipes Found' },
          [Symbol(SameObject caches)]: [Object: null prototype] { childNodes: NodeList {} }
        },
        <ref *2> HTMLParagraphElement {
          '__reactFiber$0cbd8ly2gpfb': FiberNode {
            tag: 5,
            key: null,
            elementType: 'p',
            type: 'p',
            stateNode: [Circular *2],
            return: [FiberNode],
            child: null,
            sibling: [FiberNode],
            index: 1,
            ref: null,
            pendingProps: [Object],
            memoizedProps: [Object],
            updateQueue: null,
            memoizedState: null,
            dependencies: null,
            mode: 1,
            flags: 1048576,
            subtreeFlags: 0,
            deletions: null,
            lanes: 0,
            childLanes: 0,
            alternate: [FiberNode],
            actualDuration: 0,
            actualStartTime: -1,
            selfBaseDuration: 0,
            treeBaseDuration: 0,
            _debugSource: undefined,
            _debugOwner: [FiberNode],
            _debugNeedsRemount: false,
            _debugHookTypes: null
          },
          '__reactProps$0cbd8ly2gpfb': {
            children: "We couldn't load any recipes at the moment. This might be due to:"
          },
          [Symbol(SameObject caches)]: [Object: null prototype] { childNodes: NodeList {} }
        },
        <ref *3> HTMLLIElement {
          '__reactFiber$0cbd8ly2gpfb': FiberNode {
            tag: 5,
            key: null,
            elementType: 'li',
            type: 'li',
            stateNode: [Circular *3],
            return: [FiberNode],
            child: null,
            sibling: null,
            index: 2,
            ref: null,
            pendingProps: [Object],
            memoizedProps: [Object],
            updateQueue: null,
            memoizedState: null,
            dependencies: null,
            mode: 1,
            flags: 1048576,
            subtreeFlags: 0,
            deletions: null,
            lanes: 0,
            childLanes: 0,
            alternate: [FiberNode],
            actualDuration: 0,
            actualStartTime: -1,
            selfBaseDuration: 0,
            treeBaseDuration: 0,
            _debugSource: undefined,
            _debugOwner: [FiberNode],
            _debugNeedsRemount: false,
            _debugHookTypes: null
          },
          '__reactProps$0cbd8ly2gpfb': { children: 'No recipes matching current recommendations' },
          [Symbol(SameObject caches)]: [Object: null prototype] { childNodes: NodeList {} }
        }
      ]

      at Object.log (src/__tests__/VideoPopup.test.jsx:160:13)

PASS src/__tests__/RecipeManagement.test.jsx
  ● Console

    console.warn
      ⚠️ No recommendations data received

      994 |           }
      995 |         } else {
    > 996 |           console.warn('⚠️ No recommendations data received');
          |                   ^
      997 |           setRecipes([]);
      998 |         }
      999 |       } else {

      at warn (src/App.jsx:996:19)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.warn
      ⚠️ No recommendations data received

      994 |           }
      995 |         } else {
    > 996 |           console.warn('⚠️ No recommendations data received');
          |                   ^
      997 |           setRecipes([]);
      998 |         }
      999 |       } else {

      at warn (src/App.jsx:996:19)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.warn
      ⚠️ No recommendations data received

      994 |           }
      995 |         } else {
    > 996 |           console.warn('⚠️ No recommendations data received');
          |                   ^
      997 |           setRecipes([]);
      998 |         }
      999 |       } else {

      at warn (src/App.jsx:996:19)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.warn
      ⚠️ No recommendations data received

      994 |           }
      995 |         } else {
    > 996 |           console.warn('⚠️ No recommendations data received');
          |                   ^
      997 |           setRecipes([]);
      998 |         }
      999 |       } else {

      at warn (src/App.jsx:996:19)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.warn
      ⚠️ No recommendations data received

      994 |           }
      995 |         } else {
    > 996 |           console.warn('⚠️ No recommendations data received');
          |                   ^
      997 |           setRecipes([]);
      998 |         }
      999 |       } else {

      at warn (src/App.jsx:996:19)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1048 |       if (res.ok) {
      1049 |         const health = await res.json();
    > 1050 |         setClipperStatus('available');
           |         ^
      1051 |       } else {
      1052 |         console.warn('Clipper worker health check failed:', res.status);
      1053 |         setClipperStatus('unavailable');

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setClipperStatus (src/App.jsx:1050:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      749 |     
      750 |     try {
    > 751 |       setIsRefreshingRecipes(true);
          |       ^
      752 |       // Only set loading state if it's not already set (prevents flickering)
      753 |       // This prevents conflicts when called from functions that already set isLoadingRecipes
      754 |       if (!isLoadingRecipes) {

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:751:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      753 |       // This prevents conflicts when called from functions that already set isLoadingRecipes
      754 |       if (!isLoadingRecipes) {
    > 755 |         setIsLoadingRecipes(true);
          |         ^
      756 |       }
      757 |       
      758 |       const RECOMMENDATION_API_URL = import.meta.env.VITE_RECOMMENDATION_API_URL;

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:755:9)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1029 |   // Helper function to clear search cache (useful for fresh data)
      1030 |   function clearSearchCache() {
    > 1031 |     setSearchCache(new Map());
           |     ^
      1032 |   }
      1033 |
      1034 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setSearchCache (src/App.jsx:1031:5)
      at clearSearchCache (src/App.jsx:762:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.warn
      ⚠️ No recommendations data received

      994 |           }
      995 |         } else {
    > 996 |           console.warn('⚠️ No recommendations data received');
          |                   ^
      997 |           setRecipes([]);
      998 |         }
      999 |       } else {

      at warn (src/App.jsx:996:19)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

       995 |         } else {
       996 |           console.warn('⚠️ No recommendations data received');
    >  997 |           setRecipes([]);
           |           ^
       998 |         }
       999 |       } else {
      1000 |         console.error('❌ Failed to fetch recommendations:', res.status);

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setRecipes (src/App.jsx:997:11)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1007 |     } finally {
      1008 |       // Always clear loading state to prevent hanging
    > 1009 |       setIsLoadingRecipes(false);
           |       ^
      1010 |       setIsRefreshingRecipes(false);
      1011 |       console.log('✅ Recipe loading process completed');
      1012 |     }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:1009:7)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1008 |       // Always clear loading state to prevent hanging
      1009 |       setIsLoadingRecipes(false);
    > 1010 |       setIsRefreshingRecipes(false);
           |       ^
      1011 |       console.log('✅ Recipe loading process completed');
      1012 |     }
      1013 |   }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:1010:7)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

PASS src/__tests__/GlassPanelIntegration.test.jsx
  ● Console

    console.error
      ❌ Failed to fetch recommendations: undefined

       998 |         }
       999 |       } else {
    > 1000 |         console.error('❌ Failed to fetch recommendations:', res.status);
           |                 ^
      1001 |         setRecipes([]);
      1002 |       }
      1003 |     } catch (e) {

      at error (src/App.jsx:1000:17)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      ❌ Failed to fetch recommendations: undefined

       998 |         }
       999 |       } else {
    > 1000 |         console.error('❌ Failed to fetch recommendations:', res.status);
           |                 ^
      1001 |         setRecipes([]);
      1002 |       }
      1003 |     } catch (e) {

      at error (src/App.jsx:1000:17)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      ❌ Failed to fetch recommendations: undefined

       998 |         }
       999 |       } else {
    > 1000 |         console.error('❌ Failed to fetch recommendations:', res.status);
           |                 ^
      1001 |         setRecipes([]);
      1002 |       }
      1003 |     } catch (e) {

      at error (src/App.jsx:1000:17)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 21.489912782308693,
        y: 400.30669250656575,
        size: 2.200801765770509,
        opacity: 0.6712888684114675,
        speed: 0.12045929222953591,
        color: 'rgba(220, 53, 69, ',
        type: 'pepper',
        rotation: 2.6349700542725087,
        rotationSpeed: -0.0066464177190718845,
        twinkle: 5.05706245035014,
        twinkleSpeed: 0.008785771746407454
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.warn
      ⚠️ Error fetching complete recipe data for ID: 1: TypeError: response.text is not a function
          at text (/workspace/frontend/src/App.jsx:218:42)
          at searchRecipes (/workspace/frontend/src/App.jsx:1541:34)

      249 |       }
      250 |     } catch (error) {
    > 251 |       console.warn(`⚠️ Error fetching complete recipe data for ID: ${recipeId}:`, error);
          |               ^
      252 |       return null;
      253 |     }
      254 |   }

      at warn (src/App.jsx:251:15)
      at searchRecipes (src/App.jsx:1541:34)

    console.warn
      ⚠️ [1/1] KV fetch failed for recipe 1, using search result

      1545 |           } else {
      1546 |             // Fallback to search result if KV fetch fails
    > 1547 |             console.warn(`⚠️ [${i + 1}/${result.results.length}] KV fetch failed for recipe ${node.id}, using search result`);
           |                     ^
      1548 |             completeResults.push({ id: node.id, data: node.properties });
      1549 |           }
      1550 |         }

      at warn (src/App.jsx:1547:21)

    console.error
      ❌ Failed to fetch recommendations: undefined

       998 |         }
       999 |       } else {
    > 1000 |         console.error('❌ Failed to fetch recommendations:', res.status);
           |                 ^
      1001 |         setRecipes([]);
      1002 |       }
      1003 |     } catch (e) {

      at error (src/App.jsx:1000:17)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 161.833522102281,
        y: 560.2842563879008,
        size: 3.3113092849830927,
        opacity: 0.7821207079813197,
        speed: 0.23718029401009805,
        color: 'rgba(139, 69, 19, ',
        type: 'circle',
        rotation: 4.323558948260658,
        rotationSpeed: -0.0015041650552190334,
        twinkle: 0.9149236480929086,
        twinkleSpeed: 0.013751827077685783
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.warn
      ⚠️ Error fetching complete recipe data for ID: 1: TypeError: response.text is not a function
          at text (/workspace/frontend/src/App.jsx:218:42)
          at searchRecipes (/workspace/frontend/src/App.jsx:1541:34)

      249 |       }
      250 |     } catch (error) {
    > 251 |       console.warn(`⚠️ Error fetching complete recipe data for ID: ${recipeId}:`, error);
          |               ^
      252 |       return null;
      253 |     }
      254 |   }

      at warn (src/App.jsx:251:15)
      at searchRecipes (src/App.jsx:1541:34)

    console.warn
      ⚠️ [1/1] KV fetch failed for recipe 1, using search result

      1545 |           } else {
      1546 |             // Fallback to search result if KV fetch fails
    > 1547 |             console.warn(`⚠️ [${i + 1}/${result.results.length}] KV fetch failed for recipe ${node.id}, using search result`);
           |                     ^
      1548 |             completeResults.push({ id: node.id, data: node.properties });
      1549 |           }
      1550 |         }

      at warn (src/App.jsx:1547:21)

    console.error
      ❌ Failed to fetch recommendations: undefined

       998 |         }
       999 |       } else {
    > 1000 |         console.error('❌ Failed to fetch recommendations:', res.status);
           |                 ^
      1001 |         setRecipes([]);
      1002 |       }
      1003 |     } catch (e) {

      at error (src/App.jsx:1000:17)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 44.91218802820481,
        y: 15.34350585130909,
        size: 4.83435431083545,
        opacity: 0.5853858312444972,
        speed: 0.19122066894073866,
        color: 'rgba(220, 53, 69, ',
        type: 'pepper',
        rotation: 2.5180761158813736,
        rotationSpeed: 0.000601650680481618,
        twinkle: 4.509921747031808,
        twinkleSpeed: 0.00516743565083942
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.warn
      ⚠️ Error fetching complete recipe data for ID: 1: TypeError: response.text is not a function
          at text (/workspace/frontend/src/App.jsx:218:42)
          at searchRecipes (/workspace/frontend/src/App.jsx:1541:34)

      249 |       }
      250 |     } catch (error) {
    > 251 |       console.warn(`⚠️ Error fetching complete recipe data for ID: ${recipeId}:`, error);
          |               ^
      252 |       return null;
      253 |     }
      254 |   }

      at warn (src/App.jsx:251:15)
      at searchRecipes (src/App.jsx:1541:34)

    console.warn
      ⚠️ [1/1] KV fetch failed for recipe 1, using search result

      1545 |           } else {
      1546 |             // Fallback to search result if KV fetch fails
    > 1547 |             console.warn(`⚠️ [${i + 1}/${result.results.length}] KV fetch failed for recipe ${node.id}, using search result`);
           |                     ^
      1548 |             completeResults.push({ id: node.id, data: node.properties });
      1549 |           }
      1550 |         }

      at warn (src/App.jsx:1547:21)

    console.error
      ❌ Failed to fetch recommendations: undefined

       998 |         }
       999 |       } else {
    > 1000 |         console.error('❌ Failed to fetch recommendations:', res.status);
           |                 ^
      1001 |         setRecipes([]);
      1002 |       }
      1003 |     } catch (e) {

      at error (src/App.jsx:1000:17)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      ❌ Failed to fetch recommendations: undefined

       998 |         }
       999 |       } else {
    > 1000 |         console.error('❌ Failed to fetch recommendations:', res.status);
           |                 ^
      1001 |         setRecipes([]);
      1002 |       }
      1003 |     } catch (e) {

      at error (src/App.jsx:1000:17)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      ❌ Failed to fetch recommendations: undefined

       998 |         }
       999 |       } else {
    > 1000 |         console.error('❌ Failed to fetch recommendations:', res.status);
           |                 ^
      1001 |         setRecipes([]);
      1002 |       }
      1003 |     } catch (e) {

      at error (src/App.jsx:1000:17)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 375 x 667

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 79.10903818725257,
        y: 620.3058848914723,
        size: 2.6672608750907925,
        opacity: 0.8830739388247584,
        speed: 0.10815332820020172,
        color: 'rgba(139, 69, 19, ',
        type: 'circle',
        rotation: 5.954966792704703,
        rotationSpeed: 0.0007369171235004757,
        twinkle: 1.9869613963553097,
        twinkleSpeed: 0.014382168248792924
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.warn
      ⚠️ Error fetching complete recipe data for ID: 1: TypeError: response.text is not a function
          at text (/workspace/frontend/src/App.jsx:218:42)
          at searchRecipes (/workspace/frontend/src/App.jsx:1541:34)

      249 |       }
      250 |     } catch (error) {
    > 251 |       console.warn(`⚠️ Error fetching complete recipe data for ID: ${recipeId}:`, error);
          |               ^
      252 |       return null;
      253 |     }
      254 |   }

      at warn (src/App.jsx:251:15)
      at searchRecipes (src/App.jsx:1541:34)

    console.warn
      ⚠️ [1/1] KV fetch failed for recipe 1, using search result

      1545 |           } else {
      1546 |             // Fallback to search result if KV fetch fails
    > 1547 |             console.warn(`⚠️ [${i + 1}/${result.results.length}] KV fetch failed for recipe ${node.id}, using search result`);
           |                     ^
      1548 |             completeResults.push({ id: node.id, data: node.properties });
      1549 |           }
      1550 |         }

      at warn (src/App.jsx:1547:21)

    console.error
      ❌ Failed to fetch recommendations: undefined

       998 |         }
       999 |       } else {
    > 1000 |         console.error('❌ Failed to fetch recommendations:', res.status);
           |                 ^
      1001 |         setRecipes([]);
      1002 |       }
      1003 |     } catch (e) {

      at error (src/App.jsx:1000:17)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

PASS src/__tests__/AppClippingCore.test.jsx
  ● Console

    console.warn
      ⚠️ No recommendations data received

      994 |           }
      995 |         } else {
    > 996 |           console.warn('⚠️ No recommendations data received');
          |                   ^
      997 |           setRecipes([]);
      998 |         }
      999 |       } else {

      at warn (src/App.jsx:996:19)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Button clicked, searchInput:

      at log (src/App.jsx:1688:25)

    console.log
      isValidUrl result: false

      at log (src/App.jsx:1689:25)

    console.log
      clipperStatus: checking

      at log (src/App.jsx:1690:25)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 132.24792389586878,
        y: 95.13072717424745,
        size: 2.1208310806539545,
        opacity: 0.9673357886119731,
        speed: 0.22665842549431026,
        color: 'rgba(34, 139, 34, ',
        type: 'leaf',
        rotation: 4.056485478043816,
        rotationSpeed: -0.0074792381458324945,
        twinkle: 0.4087980786528297,
        twinkleSpeed: 0.008957599800551018
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

PASS src/__tests__/AdditionalFunctions.test.jsx
  ● Console

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1048 |       if (res.ok) {
      1049 |         const health = await res.json();
    > 1050 |         setClipperStatus('available');
           |         ^
      1051 |       } else {
      1052 |         console.warn('Clipper worker health check failed:', res.status);
      1053 |         setClipperStatus('unavailable');

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setClipperStatus (src/App.jsx:1050:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      749 |     
      750 |     try {
    > 751 |       setIsRefreshingRecipes(true);
          |       ^
      752 |       // Only set loading state if it's not already set (prevents flickering)
      753 |       // This prevents conflicts when called from functions that already set isLoadingRecipes
      754 |       if (!isLoadingRecipes) {

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:751:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      753 |       // This prevents conflicts when called from functions that already set isLoadingRecipes
      754 |       if (!isLoadingRecipes) {
    > 755 |         setIsLoadingRecipes(true);
          |         ^
      756 |       }
      757 |       
      758 |       const RECOMMENDATION_API_URL = import.meta.env.VITE_RECOMMENDATION_API_URL;

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:755:9)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1029 |   // Helper function to clear search cache (useful for fresh data)
      1030 |   function clearSearchCache() {
    > 1031 |     setSearchCache(new Map());
           |     ^
      1032 |   }
      1033 |
      1034 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setSearchCache (src/App.jsx:1031:5)
      at clearSearchCache (src/App.jsx:762:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.warn
      ⚠️ No recommendations data received

      994 |           }
      995 |         } else {
    > 996 |           console.warn('⚠️ No recommendations data received');
          |                   ^
      997 |           setRecipes([]);
      998 |         }
      999 |       } else {

      at warn (src/App.jsx:996:19)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

       995 |         } else {
       996 |           console.warn('⚠️ No recommendations data received');
    >  997 |           setRecipes([]);
           |           ^
       998 |         }
       999 |       } else {
      1000 |         console.error('❌ Failed to fetch recommendations:', res.status);

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setRecipes (src/App.jsx:997:11)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1007 |     } finally {
      1008 |       // Always clear loading state to prevent hanging
    > 1009 |       setIsLoadingRecipes(false);
           |       ^
      1010 |       setIsRefreshingRecipes(false);
      1011 |       console.log('✅ Recipe loading process completed');
      1012 |     }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:1009:7)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1008 |       // Always clear loading state to prevent hanging
      1009 |       setIsLoadingRecipes(false);
    > 1010 |       setIsRefreshingRecipes(false);
           |       ^
      1011 |       console.log('✅ Recipe loading process completed');
      1012 |     }
      1013 |   }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:1010:7)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1048 |       if (res.ok) {
      1049 |         const health = await res.json();
    > 1050 |         setClipperStatus('available');
           |         ^
      1051 |       } else {
      1052 |         console.warn('Clipper worker health check failed:', res.status);
      1053 |         setClipperStatus('unavailable');

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setClipperStatus (src/App.jsx:1050:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      749 |     
      750 |     try {
    > 751 |       setIsRefreshingRecipes(true);
          |       ^
      752 |       // Only set loading state if it's not already set (prevents flickering)
      753 |       // This prevents conflicts when called from functions that already set isLoadingRecipes
      754 |       if (!isLoadingRecipes) {

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:751:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      753 |       // This prevents conflicts when called from functions that already set isLoadingRecipes
      754 |       if (!isLoadingRecipes) {
    > 755 |         setIsLoadingRecipes(true);
          |         ^
      756 |       }
      757 |       
      758 |       const RECOMMENDATION_API_URL = import.meta.env.VITE_RECOMMENDATION_API_URL;

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:755:9)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1029 |   // Helper function to clear search cache (useful for fresh data)
      1030 |   function clearSearchCache() {
    > 1031 |     setSearchCache(new Map());
           |     ^
      1032 |   }
      1033 |
      1034 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setSearchCache (src/App.jsx:1031:5)
      at clearSearchCache (src/App.jsx:762:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.warn
      ⚠️ No recommendations data received

      994 |           }
      995 |         } else {
    > 996 |           console.warn('⚠️ No recommendations data received');
          |                   ^
      997 |           setRecipes([]);
      998 |         }
      999 |       } else {

      at warn (src/App.jsx:996:19)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

       995 |         } else {
       996 |           console.warn('⚠️ No recommendations data received');
    >  997 |           setRecipes([]);
           |           ^
       998 |         }
       999 |       } else {
      1000 |         console.error('❌ Failed to fetch recommendations:', res.status);

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setRecipes (src/App.jsx:997:11)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1007 |     } finally {
      1008 |       // Always clear loading state to prevent hanging
    > 1009 |       setIsLoadingRecipes(false);
           |       ^
      1010 |       setIsRefreshingRecipes(false);
      1011 |       console.log('✅ Recipe loading process completed');
      1012 |     }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:1009:7)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1008 |       // Always clear loading state to prevent hanging
      1009 |       setIsLoadingRecipes(false);
    > 1010 |       setIsRefreshingRecipes(false);
           |       ^
      1011 |       console.log('✅ Recipe loading process completed');
      1012 |     }
      1013 |   }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:1010:7)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.warn
      ⚠️ No recommendations data received

      994 |           }
      995 |         } else {
    > 996 |           console.warn('⚠️ No recommendations data received');
          |                   ^
      997 |           setRecipes([]);
      998 |         }
      999 |       } else {

      at warn (src/App.jsx:996:19)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 118.2391361700029,
        y: 163.08912380072417,
        size: 2.1078290734957816,
        opacity: 0.5284428010834936,
        speed: 0.10650809920128644,
        color: 'rgba(220, 53, 69, ',
        type: 'pepper',
        rotation: 4.182301934374689,
        rotationSpeed: -0.004452073823729315,
        twinkle: 0.07765323150634637,
        twinkleSpeed: 0.00770730496100839
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1048 |       if (res.ok) {
      1049 |         const health = await res.json();
    > 1050 |         setClipperStatus('available');
           |         ^
      1051 |       } else {
      1052 |         console.warn('Clipper worker health check failed:', res.status);
      1053 |         setClipperStatus('unavailable');

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setClipperStatus (src/App.jsx:1050:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      749 |     
      750 |     try {
    > 751 |       setIsRefreshingRecipes(true);
          |       ^
      752 |       // Only set loading state if it's not already set (prevents flickering)
      753 |       // This prevents conflicts when called from functions that already set isLoadingRecipes
      754 |       if (!isLoadingRecipes) {

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:751:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      753 |       // This prevents conflicts when called from functions that already set isLoadingRecipes
      754 |       if (!isLoadingRecipes) {
    > 755 |         setIsLoadingRecipes(true);
          |         ^
      756 |       }
      757 |       
      758 |       const RECOMMENDATION_API_URL = import.meta.env.VITE_RECOMMENDATION_API_URL;

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:755:9)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1029 |   // Helper function to clear search cache (useful for fresh data)
      1030 |   function clearSearchCache() {
    > 1031 |     setSearchCache(new Map());
           |     ^
      1032 |   }
      1033 |
      1034 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setSearchCache (src/App.jsx:1031:5)
      at clearSearchCache (src/App.jsx:762:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.warn
      ⚠️ No recommendations data received

      994 |           }
      995 |         } else {
    > 996 |           console.warn('⚠️ No recommendations data received');
          |                   ^
      997 |           setRecipes([]);
      998 |         }
      999 |       } else {

      at warn (src/App.jsx:996:19)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

       995 |         } else {
       996 |           console.warn('⚠️ No recommendations data received');
    >  997 |           setRecipes([]);
           |           ^
       998 |         }
       999 |       } else {
      1000 |         console.error('❌ Failed to fetch recommendations:', res.status);

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setRecipes (src/App.jsx:997:11)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1007 |     } finally {
      1008 |       // Always clear loading state to prevent hanging
    > 1009 |       setIsLoadingRecipes(false);
           |       ^
      1010 |       setIsRefreshingRecipes(false);
      1011 |       console.log('✅ Recipe loading process completed');
      1012 |     }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:1009:7)
      at initializeRecipes (src/App.jsx:270:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1008 |       // Always clear loading state to prevent hanging
      1009 |       setIsLoadingRecipes(false);
    > 1010 |       setIsRefreshingRecipes(false);
           |       ^
      1011 |       console.log('✅ Recipe loading process completed');
      1012 |     }
      1013 |   }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:1010:7)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.warn
      ⚠️ No recommendations data received

      994 |           }
      995 |         } else {
    > 996 |           console.warn('⚠️ No recommendations data received');
          |                   ^
      997 |           setRecipes([]);
      998 |         }
      999 |       } else {

      at warn (src/App.jsx:996:19)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 82.21654096006955,
        y: 261.526681042163,
        size: 2.762745890721974,
        opacity: 1.0537842462174634,
        speed: 0.17162816503177702,
        color: 'rgba(139, 69, 19, ',
        type: 'circle',
        rotation: 2.9131432614630683,
        rotationSpeed: 0.0029312671032326065,
        twinkle: 0.5654305364719898,
        twinkleSpeed: 0.013233120889786329
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.warn
      ⚠️ No recommendations data received

      994 |           }
      995 |         } else {
    > 996 |           console.warn('⚠️ No recommendations data received');
          |                   ^
      997 |           setRecipes([]);
      998 |         }
      999 |       } else {

      at warn (src/App.jsx:996:19)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 924.5578004200775,
        y: 353.20969520752726,
        size: 2.9520957813861988,
        opacity: 1.0061440897758485,
        speed: 0.1019439121909902,
        color: 'rgba(220, 53, 69, ',
        type: 'pepper',
        rotation: 0.757456935251354,
        rotationSpeed: -0.003087939574869263,
        twinkle: 2.1255828468916613,
        twinkleSpeed: 0.009590687134301789
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

PASS src/__tests__/UtilityFunctions.test.jsx
  ● Console

    console.error
      Error getting recipe categories: ReferenceError: fetch is not defined
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:149:5)
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:710:25)
          at getRecipeCategories (/workspace/frontend/src/App.jsx:269:15)
          at initializeRecipes (/workspace/frontend/src/App.jsx:287:5)
          at commitHookEffectListMount (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
          at commitPassiveMountOnFiber (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
          at commitPassiveMountEffects_complete (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
          at commitPassiveMountEffects_begin (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
          at commitPassiveMountEffects (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
          at flushPassiveEffectsImpl (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
          at flushPassiveEffects (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
          at /workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:26808:9
          at flushActQueue (/workspace/frontend/node_modules/react/cjs/react.development.js:2667:24)
          at act (/workspace/frontend/node_modules/react/cjs/react.development.js:2582:11)
          at /workspace/frontend/node_modules/@testing-library/react/dist/act-compat.js:47:25
          at renderRoot (/workspace/frontend/node_modules/@testing-library/react/dist/pure.js:190:26)
          at render (/workspace/frontend/node_modules/@testing-library/react/dist/pure.js:292:10)
          at Object.<anonymous> (/workspace/frontend/src/__tests__/UtilityFunctions.test.jsx:12:35)
          at Promise.finally.completed (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1559:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1499:10)
          at _callCircusTest (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1009:40)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)
          at _runTest (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:949:3)
          at _runTestsForDescribeBlock (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
          at _runTestsForDescribeBlock (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
          at _runTestsForDescribeBlock (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
          at run (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
          at runAndTransformResultsToJestFormat (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1920:21)
          at jestAdapter (/workspace/frontend/node_modules/jest-circus/build/runner.js:101:19)
          at runTestInternal (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:275:16)
          at runTest (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:343:7)
          at Object.worker (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:497:12)

      735 |       return [];
      736 |     } catch (e) {
    > 737 |       console.error('Error getting recipe categories:', e);
          |               ^
      738 |       return [];
      739 |     }
      740 |   }

      at error (src/App.jsx:737:15)
      at getRecipeCategories (src/App.jsx:269:15)
      at initializeRecipes (src/App.jsx:287:5)
      at commitHookEffectListMount (node_modules/react-dom/cjs/react-dom.development.js:23189:26)
      at commitPassiveMountOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24970:11)
      at commitPassiveMountEffects_complete (node_modules/react-dom/cjs/react-dom.development.js:24930:9)
      at commitPassiveMountEffects_begin (node_modules/react-dom/cjs/react-dom.development.js:24917:7)
      at commitPassiveMountEffects (node_modules/react-dom/cjs/react-dom.development.js:24905:3)
      at flushPassiveEffectsImpl (node_modules/react-dom/cjs/react-dom.development.js:27078:3)
      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom.development.js:27023:14)
      at node_modules/react-dom/cjs/react-dom.development.js:26808:9
      at flushActQueue (node_modules/react/cjs/react.development.js:2667:24)
      at act (node_modules/react/cjs/react.development.js:2582:11)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/__tests__/UtilityFunctions.test.jsx:12:35)

    console.error
      Error checking clipper worker health: ReferenceError: fetch is not defined
          at checkClipperHealth (/workspace/frontend/src/App.jsx:1040:19)
          at checkClipperHealth (/workspace/frontend/src/App.jsx:288:5)
          at commitHookEffectListMount (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
          at commitPassiveMountOnFiber (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
          at commitPassiveMountEffects_complete (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
          at commitPassiveMountEffects_begin (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
          at commitPassiveMountEffects (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
          at flushPassiveEffectsImpl (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
          at flushPassiveEffects (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
          at /workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:26808:9
          at flushActQueue (/workspace/frontend/node_modules/react/cjs/react.development.js:2667:24)
          at act (/workspace/frontend/node_modules/react/cjs/react.development.js:2582:11)
          at /workspace/frontend/node_modules/@testing-library/react/dist/act-compat.js:47:25
          at renderRoot (/workspace/frontend/node_modules/@testing-library/react/dist/pure.js:190:26)
          at render (/workspace/frontend/node_modules/@testing-library/react/dist/pure.js:292:10)
          at Object.<anonymous> (/workspace/frontend/src/__tests__/UtilityFunctions.test.jsx:12:35)
          at Promise.finally.completed (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1559:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1499:10)
          at _callCircusTest (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1009:40)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)
          at _runTest (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:949:3)
          at _runTestsForDescribeBlock (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
          at _runTestsForDescribeBlock (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
          at _runTestsForDescribeBlock (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
          at run (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
          at runAndTransformResultsToJestFormat (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1920:21)
          at jestAdapter (/workspace/frontend/node_modules/jest-circus/build/runner.js:101:19)
          at runTestInternal (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:275:16)
          at runTest (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:343:7)
          at Object.worker (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:497:12)

      1054 |       }
      1055 |     } catch (e) {
    > 1056 |       console.error('Error checking clipper worker health:', e);
           |               ^
      1057 |       setClipperStatus('unavailable');
      1058 |     }
      1059 |   }

      at error (src/App.jsx:1056:15)
      at checkClipperHealth (src/App.jsx:288:5)
      at commitHookEffectListMount (node_modules/react-dom/cjs/react-dom.development.js:23189:26)
      at commitPassiveMountOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24970:11)
      at commitPassiveMountEffects_complete (node_modules/react-dom/cjs/react-dom.development.js:24930:9)
      at commitPassiveMountEffects_begin (node_modules/react-dom/cjs/react-dom.development.js:24917:7)
      at commitPassiveMountEffects (node_modules/react-dom/cjs/react-dom.development.js:24905:3)
      at flushPassiveEffectsImpl (node_modules/react-dom/cjs/react-dom.development.js:27078:3)
      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom.development.js:27023:14)
      at node_modules/react-dom/cjs/react-dom.development.js:26808:9
      at flushActQueue (node_modules/react/cjs/react.development.js:2667:24)
      at act (node_modules/react/cjs/react.development.js:2582:11)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/__tests__/UtilityFunctions.test.jsx:12:35)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      749 |     
      750 |     try {
    > 751 |       setIsRefreshingRecipes(true);
          |       ^
      752 |       // Only set loading state if it's not already set (prevents flickering)
      753 |       // This prevents conflicts when called from functions that already set isLoadingRecipes
      754 |       if (!isLoadingRecipes) {

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:751:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      753 |       // This prevents conflicts when called from functions that already set isLoadingRecipes
      754 |       if (!isLoadingRecipes) {
    > 755 |         setIsLoadingRecipes(true);
          |         ^
      756 |       }
      757 |       
      758 |       const RECOMMENDATION_API_URL = import.meta.env.VITE_RECOMMENDATION_API_URL;

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:755:9)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1029 |   // Helper function to clear search cache (useful for fresh data)
      1030 |   function clearSearchCache() {
    > 1031 |     setSearchCache(new Map());
           |     ^
      1032 |   }
      1033 |
      1034 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setSearchCache (src/App.jsx:1031:5)
      at clearSearchCache (src/App.jsx:762:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Error getting recipes from recommendations: ReferenceError: fetch is not defined
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:149:5)
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:765:25)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:270:15)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)

      1002 |       }
      1003 |     } catch (e) {
    > 1004 |       console.error('Error getting recipes from recommendations:', e);
           |               ^
      1005 |       setRecipes([]);
      1006 |       setIsRefreshingRecipes(false);
      1007 |     } finally {

      at error (src/App.jsx:1004:15)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1003 |     } catch (e) {
      1004 |       console.error('Error getting recipes from recommendations:', e);
    > 1005 |       setRecipes([]);
           |       ^
      1006 |       setIsRefreshingRecipes(false);
      1007 |     } finally {
      1008 |       // Always clear loading state to prevent hanging

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setRecipes (src/App.jsx:1005:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1004 |       console.error('Error getting recipes from recommendations:', e);
      1005 |       setRecipes([]);
    > 1006 |       setIsRefreshingRecipes(false);
           |       ^
      1007 |     } finally {
      1008 |       // Always clear loading state to prevent hanging
      1009 |       setIsLoadingRecipes(false);

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:1006:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1007 |     } finally {
      1008 |       // Always clear loading state to prevent hanging
    > 1009 |       setIsLoadingRecipes(false);
           |       ^
      1010 |       setIsRefreshingRecipes(false);
      1011 |       console.log('✅ Recipe loading process completed');
      1012 |     }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:1009:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1008 |       // Always clear loading state to prevent hanging
      1009 |       setIsLoadingRecipes(false);
    > 1010 |       setIsRefreshingRecipes(false);
           |       ^
      1011 |       console.log('✅ Recipe loading process completed');
      1012 |     }
      1013 |   }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:1010:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

PASS src/App.test.js
  ● Console

    console.error
      Error getting recipe categories: ReferenceError: fetch is not defined
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:149:5)
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:710:25)
          at getRecipeCategories (/workspace/frontend/src/App.jsx:269:15)
          at initializeRecipes (/workspace/frontend/src/App.jsx:287:5)
          at commitHookEffectListMount (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
          at commitPassiveMountOnFiber (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
          at commitPassiveMountEffects_complete (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
          at commitPassiveMountEffects_begin (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
          at commitPassiveMountEffects (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
          at flushPassiveEffectsImpl (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
          at flushPassiveEffects (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
          at /workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:26808:9
          at flushActQueue (/workspace/frontend/node_modules/react/cjs/react.development.js:2667:24)
          at act (/workspace/frontend/node_modules/react/cjs/react.development.js:2582:11)
          at /workspace/frontend/node_modules/@testing-library/react/dist/act-compat.js:47:25
          at renderRoot (/workspace/frontend/node_modules/@testing-library/react/dist/pure.js:190:26)
          at render (/workspace/frontend/node_modules/@testing-library/react/dist/pure.js:292:10)
          at Object.<anonymous> (/workspace/frontend/src/App.test.js:7:11)
          at Promise.finally.completed (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1559:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1499:10)
          at _callCircusTest (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1009:40)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)
          at _runTest (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:949:3)
          at _runTestsForDescribeBlock (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
          at _runTestsForDescribeBlock (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
          at run (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
          at runAndTransformResultsToJestFormat (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1920:21)
          at jestAdapter (/workspace/frontend/node_modules/jest-circus/build/runner.js:101:19)
          at runTestInternal (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:275:16)
          at runTest (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:343:7)
          at Object.worker (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:497:12)

      735 |       return [];
      736 |     } catch (e) {
    > 737 |       console.error('Error getting recipe categories:', e);
          |               ^
      738 |       return [];
      739 |     }
      740 |   }

      at error (src/App.jsx:737:15)
      at getRecipeCategories (src/App.jsx:269:15)
      at initializeRecipes (src/App.jsx:287:5)
      at commitHookEffectListMount (node_modules/react-dom/cjs/react-dom.development.js:23189:26)
      at commitPassiveMountOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24970:11)
      at commitPassiveMountEffects_complete (node_modules/react-dom/cjs/react-dom.development.js:24930:9)
      at commitPassiveMountEffects_begin (node_modules/react-dom/cjs/react-dom.development.js:24917:7)
      at commitPassiveMountEffects (node_modules/react-dom/cjs/react-dom.development.js:24905:3)
      at flushPassiveEffectsImpl (node_modules/react-dom/cjs/react-dom.development.js:27078:3)
      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom.development.js:27023:14)
      at node_modules/react-dom/cjs/react-dom.development.js:26808:9
      at flushActQueue (node_modules/react/cjs/react.development.js:2667:24)
      at act (node_modules/react/cjs/react.development.js:2582:11)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/App.test.js:7:11)

    console.error
      Error checking clipper worker health: ReferenceError: fetch is not defined
          at checkClipperHealth (/workspace/frontend/src/App.jsx:1040:19)
          at checkClipperHealth (/workspace/frontend/src/App.jsx:288:5)
          at commitHookEffectListMount (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
          at commitPassiveMountOnFiber (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
          at commitPassiveMountEffects_complete (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
          at commitPassiveMountEffects_begin (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
          at commitPassiveMountEffects (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
          at flushPassiveEffectsImpl (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
          at flushPassiveEffects (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
          at /workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:26808:9
          at flushActQueue (/workspace/frontend/node_modules/react/cjs/react.development.js:2667:24)
          at act (/workspace/frontend/node_modules/react/cjs/react.development.js:2582:11)
          at /workspace/frontend/node_modules/@testing-library/react/dist/act-compat.js:47:25
          at renderRoot (/workspace/frontend/node_modules/@testing-library/react/dist/pure.js:190:26)
          at render (/workspace/frontend/node_modules/@testing-library/react/dist/pure.js:292:10)
          at Object.<anonymous> (/workspace/frontend/src/App.test.js:7:11)
          at Promise.finally.completed (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1559:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1499:10)
          at _callCircusTest (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1009:40)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)
          at _runTest (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:949:3)
          at _runTestsForDescribeBlock (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
          at _runTestsForDescribeBlock (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
          at run (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
          at runAndTransformResultsToJestFormat (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1920:21)
          at jestAdapter (/workspace/frontend/node_modules/jest-circus/build/runner.js:101:19)
          at runTestInternal (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:275:16)
          at runTest (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:343:7)
          at Object.worker (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:497:12)

      1054 |       }
      1055 |     } catch (e) {
    > 1056 |       console.error('Error checking clipper worker health:', e);
           |               ^
      1057 |       setClipperStatus('unavailable');
      1058 |     }
      1059 |   }

      at error (src/App.jsx:1056:15)
      at checkClipperHealth (src/App.jsx:288:5)
      at commitHookEffectListMount (node_modules/react-dom/cjs/react-dom.development.js:23189:26)
      at commitPassiveMountOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24970:11)
      at commitPassiveMountEffects_complete (node_modules/react-dom/cjs/react-dom.development.js:24930:9)
      at commitPassiveMountEffects_begin (node_modules/react-dom/cjs/react-dom.development.js:24917:7)
      at commitPassiveMountEffects (node_modules/react-dom/cjs/react-dom.development.js:24905:3)
      at flushPassiveEffectsImpl (node_modules/react-dom/cjs/react-dom.development.js:27078:3)
      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom.development.js:27023:14)
      at node_modules/react-dom/cjs/react-dom.development.js:26808:9
      at flushActQueue (node_modules/react/cjs/react.development.js:2667:24)
      at act (node_modules/react/cjs/react.development.js:2582:11)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/App.test.js:7:11)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      749 |     
      750 |     try {
    > 751 |       setIsRefreshingRecipes(true);
          |       ^
      752 |       // Only set loading state if it's not already set (prevents flickering)
      753 |       // This prevents conflicts when called from functions that already set isLoadingRecipes
      754 |       if (!isLoadingRecipes) {

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:751:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      753 |       // This prevents conflicts when called from functions that already set isLoadingRecipes
      754 |       if (!isLoadingRecipes) {
    > 755 |         setIsLoadingRecipes(true);
          |         ^
      756 |       }
      757 |       
      758 |       const RECOMMENDATION_API_URL = import.meta.env.VITE_RECOMMENDATION_API_URL;

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:755:9)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1029 |   // Helper function to clear search cache (useful for fresh data)
      1030 |   function clearSearchCache() {
    > 1031 |     setSearchCache(new Map());
           |     ^
      1032 |   }
      1033 |
      1034 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setSearchCache (src/App.jsx:1031:5)
      at clearSearchCache (src/App.jsx:762:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Error getting recipes from recommendations: ReferenceError: fetch is not defined
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:149:5)
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:765:25)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:270:15)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)

      1002 |       }
      1003 |     } catch (e) {
    > 1004 |       console.error('Error getting recipes from recommendations:', e);
           |               ^
      1005 |       setRecipes([]);
      1006 |       setIsRefreshingRecipes(false);
      1007 |     } finally {

      at error (src/App.jsx:1004:15)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1003 |     } catch (e) {
      1004 |       console.error('Error getting recipes from recommendations:', e);
    > 1005 |       setRecipes([]);
           |       ^
      1006 |       setIsRefreshingRecipes(false);
      1007 |     } finally {
      1008 |       // Always clear loading state to prevent hanging

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setRecipes (src/App.jsx:1005:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1004 |       console.error('Error getting recipes from recommendations:', e);
      1005 |       setRecipes([]);
    > 1006 |       setIsRefreshingRecipes(false);
           |       ^
      1007 |     } finally {
      1008 |       // Always clear loading state to prevent hanging
      1009 |       setIsLoadingRecipes(false);

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:1006:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1007 |     } finally {
      1008 |       // Always clear loading state to prevent hanging
    > 1009 |       setIsLoadingRecipes(false);
           |       ^
      1010 |       setIsRefreshingRecipes(false);
      1011 |       console.log('✅ Recipe loading process completed');
      1012 |     }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:1009:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1008 |       // Always clear loading state to prevent hanging
      1009 |       setIsLoadingRecipes(false);
    > 1010 |       setIsRefreshingRecipes(false);
           |       ^
      1011 |       console.log('✅ Recipe loading process completed');
      1012 |     }
      1013 |   }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:1010:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.error
      Error getting recipe categories: ReferenceError: fetch is not defined
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:149:5)
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:710:25)
          at getRecipeCategories (/workspace/frontend/src/App.jsx:269:15)
          at initializeRecipes (/workspace/frontend/src/App.jsx:287:5)
          at commitHookEffectListMount (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
          at commitPassiveMountOnFiber (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
          at commitPassiveMountEffects_complete (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
          at commitPassiveMountEffects_begin (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
          at commitPassiveMountEffects (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
          at flushPassiveEffectsImpl (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
          at flushPassiveEffects (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
          at /workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:26808:9
          at flushActQueue (/workspace/frontend/node_modules/react/cjs/react.development.js:2667:24)
          at act (/workspace/frontend/node_modules/react/cjs/react.development.js:2582:11)
          at /workspace/frontend/node_modules/@testing-library/react/dist/act-compat.js:47:25
          at renderRoot (/workspace/frontend/node_modules/@testing-library/react/dist/pure.js:190:26)
          at render (/workspace/frontend/node_modules/@testing-library/react/dist/pure.js:292:10)
          at Object.<anonymous> (/workspace/frontend/src/App.test.js:12:11)
          at Promise.finally.completed (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1559:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1499:10)
          at _callCircusTest (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1009:40)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)
          at _runTest (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:949:3)
          at _runTestsForDescribeBlock (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
          at _runTestsForDescribeBlock (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
          at run (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
          at runAndTransformResultsToJestFormat (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1920:21)
          at jestAdapter (/workspace/frontend/node_modules/jest-circus/build/runner.js:101:19)
          at runTestInternal (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:275:16)
          at runTest (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:343:7)
          at Object.worker (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:497:12)

      735 |       return [];
      736 |     } catch (e) {
    > 737 |       console.error('Error getting recipe categories:', e);
          |               ^
      738 |       return [];
      739 |     }
      740 |   }

      at error (src/App.jsx:737:15)
      at getRecipeCategories (src/App.jsx:269:15)
      at initializeRecipes (src/App.jsx:287:5)
      at commitHookEffectListMount (node_modules/react-dom/cjs/react-dom.development.js:23189:26)
      at commitPassiveMountOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24970:11)
      at commitPassiveMountEffects_complete (node_modules/react-dom/cjs/react-dom.development.js:24930:9)
      at commitPassiveMountEffects_begin (node_modules/react-dom/cjs/react-dom.development.js:24917:7)
      at commitPassiveMountEffects (node_modules/react-dom/cjs/react-dom.development.js:24905:3)
      at flushPassiveEffectsImpl (node_modules/react-dom/cjs/react-dom.development.js:27078:3)
      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom.development.js:27023:14)
      at node_modules/react-dom/cjs/react-dom.development.js:26808:9
      at flushActQueue (node_modules/react/cjs/react.development.js:2667:24)
      at act (node_modules/react/cjs/react.development.js:2582:11)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/App.test.js:12:11)

    console.error
      Error checking clipper worker health: ReferenceError: fetch is not defined
          at checkClipperHealth (/workspace/frontend/src/App.jsx:1040:19)
          at checkClipperHealth (/workspace/frontend/src/App.jsx:288:5)
          at commitHookEffectListMount (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:23189:26)
          at commitPassiveMountOnFiber (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24970:11)
          at commitPassiveMountEffects_complete (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24930:9)
          at commitPassiveMountEffects_begin (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24917:7)
          at commitPassiveMountEffects (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:24905:3)
          at flushPassiveEffectsImpl (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:27078:3)
          at flushPassiveEffects (/workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:27023:14)
          at /workspace/frontend/node_modules/react-dom/cjs/react-dom.development.js:26808:9
          at flushActQueue (/workspace/frontend/node_modules/react/cjs/react.development.js:2667:24)
          at act (/workspace/frontend/node_modules/react/cjs/react.development.js:2582:11)
          at /workspace/frontend/node_modules/@testing-library/react/dist/act-compat.js:47:25
          at renderRoot (/workspace/frontend/node_modules/@testing-library/react/dist/pure.js:190:26)
          at render (/workspace/frontend/node_modules/@testing-library/react/dist/pure.js:292:10)
          at Object.<anonymous> (/workspace/frontend/src/App.test.js:12:11)
          at Promise.finally.completed (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1559:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1499:10)
          at _callCircusTest (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1009:40)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)
          at _runTest (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:949:3)
          at _runTestsForDescribeBlock (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
          at _runTestsForDescribeBlock (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
          at run (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
          at runAndTransformResultsToJestFormat (/workspace/frontend/node_modules/jest-circus/build/jestAdapterInit.js:1920:21)
          at jestAdapter (/workspace/frontend/node_modules/jest-circus/build/runner.js:101:19)
          at runTestInternal (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:275:16)
          at runTest (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:343:7)
          at Object.worker (/workspace/frontend/node_modules/jest-runner/build/testWorker.js:497:12)

      1054 |       }
      1055 |     } catch (e) {
    > 1056 |       console.error('Error checking clipper worker health:', e);
           |               ^
      1057 |       setClipperStatus('unavailable');
      1058 |     }
      1059 |   }

      at error (src/App.jsx:1056:15)
      at checkClipperHealth (src/App.jsx:288:5)
      at commitHookEffectListMount (node_modules/react-dom/cjs/react-dom.development.js:23189:26)
      at commitPassiveMountOnFiber (node_modules/react-dom/cjs/react-dom.development.js:24970:11)
      at commitPassiveMountEffects_complete (node_modules/react-dom/cjs/react-dom.development.js:24930:9)
      at commitPassiveMountEffects_begin (node_modules/react-dom/cjs/react-dom.development.js:24917:7)
      at commitPassiveMountEffects (node_modules/react-dom/cjs/react-dom.development.js:24905:3)
      at flushPassiveEffectsImpl (node_modules/react-dom/cjs/react-dom.development.js:27078:3)
      at flushPassiveEffects (node_modules/react-dom/cjs/react-dom.development.js:27023:14)
      at node_modules/react-dom/cjs/react-dom.development.js:26808:9
      at flushActQueue (node_modules/react/cjs/react.development.js:2667:24)
      at act (node_modules/react/cjs/react.development.js:2582:11)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/App.test.js:12:11)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      749 |     
      750 |     try {
    > 751 |       setIsRefreshingRecipes(true);
          |       ^
      752 |       // Only set loading state if it's not already set (prevents flickering)
      753 |       // This prevents conflicts when called from functions that already set isLoadingRecipes
      754 |       if (!isLoadingRecipes) {

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:751:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      753 |       // This prevents conflicts when called from functions that already set isLoadingRecipes
      754 |       if (!isLoadingRecipes) {
    > 755 |         setIsLoadingRecipes(true);
          |         ^
      756 |       }
      757 |       
      758 |       const RECOMMENDATION_API_URL = import.meta.env.VITE_RECOMMENDATION_API_URL;

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:755:9)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1029 |   // Helper function to clear search cache (useful for fresh data)
      1030 |   function clearSearchCache() {
    > 1031 |     setSearchCache(new Map());
           |     ^
      1032 |   }
      1033 |
      1034 |

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setSearchCache (src/App.jsx:1031:5)
      at clearSearchCache (src/App.jsx:762:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Error getting recipes from recommendations: ReferenceError: fetch is not defined
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:149:5)
          at fetchWithTimeout (/workspace/frontend/src/App.jsx:765:25)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:270:15)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)

      1002 |       }
      1003 |     } catch (e) {
    > 1004 |       console.error('Error getting recipes from recommendations:', e);
           |               ^
      1005 |       setRecipes([]);
      1006 |       setIsRefreshingRecipes(false);
      1007 |     } finally {

      at error (src/App.jsx:1004:15)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1003 |     } catch (e) {
      1004 |       console.error('Error getting recipes from recommendations:', e);
    > 1005 |       setRecipes([]);
           |       ^
      1006 |       setIsRefreshingRecipes(false);
      1007 |     } finally {
      1008 |       // Always clear loading state to prevent hanging

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setRecipes (src/App.jsx:1005:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1004 |       console.error('Error getting recipes from recommendations:', e);
      1005 |       setRecipes([]);
    > 1006 |       setIsRefreshingRecipes(false);
           |       ^
      1007 |     } finally {
      1008 |       // Always clear loading state to prevent hanging
      1009 |       setIsLoadingRecipes(false);

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:1006:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1007 |     } finally {
      1008 |       // Always clear loading state to prevent hanging
    > 1009 |       setIsLoadingRecipes(false);
           |       ^
      1010 |       setIsRefreshingRecipes(false);
      1011 |       console.log('✅ Recipe loading process completed');
      1012 |     }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:1009:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      1008 |       // Always clear loading state to prevent hanging
      1009 |       setIsLoadingRecipes(false);
    > 1010 |       setIsRefreshingRecipes(false);
           |       ^
      1011 |       console.log('✅ Recipe loading process completed');
      1012 |     }
      1013 |   }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsRefreshingRecipes (src/App.jsx:1010:7)
      at getRecipesFromRecommendations (src/App.jsx:270:15)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

PASS src/__tests__/CarouselIntegration.test.jsx
PASS src/components/VideoPopup.test.jsx
PASS src/__tests__/RecipeLimit.test.jsx
FAIL src/__tests__/main.test.jsx
  ● Test suite failed to run

    ReferenceError: /workspace/frontend/src/__tests__/main.test.jsx: The module factory of `jest.mock()` is not allowed to reference any out-of-scope variables.
    Invalid variable access: React
    Allowed objects: AbortController, AbortSignal, AggregateError, Array, ArrayBuffer, Atomics, BigInt, BigInt64Array, BigUint64Array, Blob, Boolean, BroadcastChannel, Buffer, ByteLengthQueuingStrategy, CompressionStream, CountQueuingStrategy, Crypto, CryptoKey, CustomEvent, DOMException, DataView, Date, DecompressionStream, Error, EvalError, Event, EventTarget, File, FinalizationRegistry, Float32Array, Float64Array, FormData, Function, Generator, GeneratorFunction, Headers, Infinity, Int16Array, Int32Array, Int8Array, InternalError, Intl, Iterator, JSON, Map, Math, MessageChannel, MessageEvent, MessagePort, NaN, Navigator, Number, Object, Performance, PerformanceEntry, PerformanceMark, PerformanceMeasure, PerformanceObserver, PerformanceObserverEntryList, PerformanceResourceTiming, Promise, Proxy, RangeError, ReadableByteStreamController, ReadableStream, ReadableStreamBYOBReader, ReadableStreamBYOBRequest, ReadableStreamDefaultController, ReadableStreamDefaultReader, ReferenceError, Reflect, RegExp, Request, Response, Set, SharedArrayBuffer, String, SubtleCrypto, Symbol, SyntaxError, TextDecoder, TextDecoderStream, TextEncoder, TextEncoderStream, TransformStream, TransformStreamDefaultController, TypeError, URIError, URL, URLSearchParams, Uint16Array, Uint32Array, Uint8Array, Uint8ClampedArray, WeakMap, WeakRef, WeakSet, WebAssembly, WebSocket, WritableStream, WritableStreamDefaultController, WritableStreamDefaultWriter, __dirname, __filename, arguments, atob, btoa, clearImmediate, clearInterval, clearTimeout, console, crypto, decodeURI, decodeURIComponent, encodeURI, encodeURIComponent, escape, eval, expect, exports, fetch, global, globalThis, isFinite, isNaN, jest, module, navigator, parseFloat, parseInt, performance, process, queueMicrotask, require, setImmediate, setInterval, setTimeout, structuredClone, undefined, unescape.
    Note: This is a precaution to guard against uninitialized mock variables. If it is ensured that the mock is required lazily, variable names prefixed with `mock` (case insensitive) are permitted.

      11 | jest.mock("../App.jsx", () => {
      12 |   return function MockApp() {
    > 13 |     return React.createElement("div", { "data-testid": "mock-app" }, "Mock App");
         |            ^^^^^
      14 |   };
      15 | });
      16 |

      at File.buildCodeFrameError (node_modules/@babel/core/src/transformation/file/file.ts:256:12)
      at NodePath.buildError [as buildCodeFrameError] (node_modules/@babel/traverse/src/path/index.ts:142:21)
      at call (node_modules/@babel/traverse/src/visitors.ts:303:14)
      at NodePath.call [as _call] (node_modules/@babel/traverse/src/path/context.ts:36:20)
      at NodePath.call (node_modules/@babel/traverse/src/path/context.ts:21:18)
      at NodePath.call [as visit] (node_modules/@babel/traverse/src/path/context.ts:97:31)
      at TraversalContext.visit [as visitQueue] (node_modules/@babel/traverse/src/context.ts:148:16)
      at TraversalContext.visitQueue [as visitMultiple] (node_modules/@babel/traverse/src/context.ts:99:17)
      at TraversalContext.visitMultiple [as visit] (node_modules/@babel/traverse/src/context.ts:178:19)
      at visit (node_modules/@babel/traverse/src/traverse-node.ts:208:17)
      at NodePath.visit (node_modules/@babel/traverse/src/path/context.ts:104:33)
      at TraversalContext.visit [as visitQueue] (node_modules/@babel/traverse/src/context.ts:148:16)
      at TraversalContext.visitQueue [as visitSingle] (node_modules/@babel/traverse/src/context.ts:109:19)
      at TraversalContext.visitSingle [as visit] (node_modules/@babel/traverse/src/context.ts:180:19)
      at visit (node_modules/@babel/traverse/src/traverse-node.ts:208:17)
      at traverse (node_modules/@babel/traverse/src/index.ts:83:15)
      at transformFile (node_modules/@babel/core/src/transformation/index.ts:119:15)
          at transformFile.next (<anonymous>)
      at transformFile (node_modules/@babel/core/src/transformation/index.ts:49:12)
          at run.next (<anonymous>)
      at transform (node_modules/@babel/core/src/transform.ts:29:20)
          at transform.next (<anonymous>)
      at evaluateSync (node_modules/gensync/index.js:251:28)
      at sync (node_modules/gensync/index.js:89:14)
      at fn (node_modules/@babel/core/src/errors/rewrite-stack-trace.ts:99:14)
      at transformSync (node_modules/@babel/core/src/transform.ts:66:52)
      at ScriptTransformer.transformSource (node_modules/@jest/transform/build/index.js:422:31)
      at ScriptTransformer._transformAndBuildScript (node_modules/@jest/transform/build/index.js:519:40)
      at ScriptTransformer.transform (node_modules/@jest/transform/build/index.js:558:19)

FAIL src/__tests__/RecipeRecommendations.test.jsx (33.839 s)
  ● Console

    console.log
      Could not get user location, using default

      at log (src/components/Recommendations.jsx:169:19)

    console.log
      📋 Processing recommendations for categories: [ 'Seasonal Favorites', 'Local Specialties', 'Holiday Treats' ]

      at log (src/App.jsx:782:19)

    console.warn
      ⚠️ No recipes found from search results, showing empty state

      991 |           // If no recipes found, still clear loading state to prevent hanging
      992 |           if (uniqueRecipes.length === 0) {
    > 993 |             console.warn('⚠️ No recipes found from search results, showing empty state');
          |                     ^
      994 |           }
      995 |         } else {
      996 |           console.warn('⚠️ No recommendations data received');

      at warn (src/App.jsx:993:21)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 622.8519512822897,
        y: 705.040356941658,
        size: 4.232695888866482,
        opacity: 1.045147287391186,
        speed: 0.29556927673007727,
        color: 'rgba(220, 53, 69, ',
        type: 'pepper',
        rotation: 1.2511045079374563,
        rotationSpeed: -0.0026597843566078796,
        twinkle: 1.8304586378268182,
        twinkleSpeed: 0.006628673369153597
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      280 |         setRecipes([]);
      281 |       } finally {
    > 282 |         setIsInitializing(false); // Mark initialization as complete
          |         ^
      283 |         setIsLoadingRecipes(false); // Ensure loading state is cleared
      284 |         console.log('✅ Initialization completed');
      285 |       }

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsInitializing (src/App.jsx:282:9)

    console.error
      Warning: An update to App inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
          at App (/workspace/frontend/src/App.jsx:92:41)

      281 |       } finally {
      282 |         setIsInitializing(false); // Mark initialization as complete
    > 283 |         setIsLoadingRecipes(false); // Ensure loading state is cleared
          |         ^
      284 |         console.log('✅ Initialization completed');
      285 |       }
      286 |     };

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:86:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:60:7)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom.development.js:27628:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom.development.js:25547:5)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom.development.js:16708:7)
      at setIsLoadingRecipes (src/App.jsx:283:9)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.log
      📋 Processing recommendations for categories: [ 'Seasonal Favorites', 'Local Specialties', 'Holiday Treats' ]

      at log (src/App.jsx:782:19)

    console.warn
      ⚠️ No recipes found from search results, showing empty state

      991 |           // If no recipes found, still clear loading state to prevent hanging
      992 |           if (uniqueRecipes.length === 0) {
    > 993 |             console.warn('⚠️ No recipes found from search results, showing empty state');
          |                     ^
      994 |           }
      995 |         } else {
      996 |           console.warn('⚠️ No recommendations data received');

      at warn (src/App.jsx:993:21)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 344.9780956061343,
        y: 305.8396620953595,
        size: 3.8452268034989356,
        opacity: 0.9324260688103452,
        speed: 0.11006085010700994,
        color: 'rgba(220, 53, 69, ',
        type: 'pepper',
        rotation: 0.773729159379461,
        rotationSpeed: -0.00896208735008408,
        twinkle: 1.0954205071859748,
        twinkleSpeed: 0.005716475489312021
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.log
      📋 Processing recommendations for categories: [ 'Seasonal Favorites', 'Local Specialties', 'Holiday Treats' ]

      at log (src/App.jsx:782:19)

    console.warn
      ⚠️ No recipes found from search results, showing empty state

      991 |           // If no recipes found, still clear loading state to prevent hanging
      992 |           if (uniqueRecipes.length === 0) {
    > 993 |             console.warn('⚠️ No recipes found from search results, showing empty state');
          |                     ^
      994 |           }
      995 |         } else {
      996 |           console.warn('⚠️ No recommendations data received');

      at warn (src/App.jsx:993:21)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 257.8929289530065,
        y: 250.34754271219765,
        size: 4.455714949974894,
        opacity: 0.8158237182005379,
        speed: 0.2761401436376614,
        color: 'rgba(220, 53, 69, ',
        type: 'pepper',
        rotation: 5.340153852673393,
        rotationSpeed: -0.0021301880817336063,
        twinkle: 6.065053905663279,
        twinkleSpeed: 0.014556534769999348
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.log
      📋 Processing recommendations for categories: [ 'Seasonal Favorites', 'Local Specialties', 'Holiday Treats' ]

      at log (src/App.jsx:782:19)

    console.warn
      ⚠️ No recipes found from search results, showing empty state

      991 |           // If no recipes found, still clear loading state to prevent hanging
      992 |           if (uniqueRecipes.length === 0) {
    > 993 |             console.warn('⚠️ No recipes found from search results, showing empty state');
          |                     ^
      994 |           }
      995 |         } else {
      996 |           console.warn('⚠️ No recommendations data received');

      at warn (src/App.jsx:993:21)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 57.324630917026525,
        y: 53.882515756673,
        size: 5.462863177343477,
        opacity: 0.7053320519946149,
        speed: 0.29386802692017744,
        color: 'rgba(34, 139, 34, ',
        type: 'leaf',
        rotation: 4.001785753279355,
        rotationSpeed: -0.0022496051330067736,
        twinkle: 6.254459304184728,
        twinkleSpeed: 0.007427662181539568
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.log
      📋 Processing recommendations for categories: [ 'Seasonal Favorites', 'Local Specialties', 'Holiday Treats' ]

      at log (src/App.jsx:782:19)

    console.warn
      ⚠️ No recipes found from search results, showing empty state

      991 |           // If no recipes found, still clear loading state to prevent hanging
      992 |           if (uniqueRecipes.length === 0) {
    > 993 |             console.warn('⚠️ No recipes found from search results, showing empty state');
          |                     ^
      994 |           }
      995 |         } else {
      996 |           console.warn('⚠️ No recommendations data received');

      at warn (src/App.jsx:993:21)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 394.7432935110073,
        y: 65.55137611181294,
        size: 4.558976291497951,
        opacity: 0.4687992339751334,
        speed: 0.12715466032955872,
        color: 'rgba(34, 139, 34, ',
        type: 'leaf',
        rotation: 3.443907157508497,
        rotationSpeed: -0.006843625242260698,
        twinkle: 4.0054710323493,
        twinkleSpeed: 0.005813555268244508
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.log
      📋 Processing recommendations for categories: [ 'Seasonal Favorites', 'Local Specialties', 'Holiday Treats' ]

      at log (src/App.jsx:782:19)

    console.warn
      ⚠️ No recipes found from search results, showing empty state

      991 |           // If no recipes found, still clear loading state to prevent hanging
      992 |           if (uniqueRecipes.length === 0) {
    > 993 |             console.warn('⚠️ No recipes found from search results, showing empty state');
          |                     ^
      994 |           }
      995 |         } else {
      996 |           console.warn('⚠️ No recommendations data received');

      at warn (src/App.jsx:993:21)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 601.2547117903584,
        y: 521.508522343519,
        size: 5.927474161425812,
        opacity: 0.8325187272882457,
        speed: 0.12539122469672903,
        color: 'rgba(34, 139, 34, ',
        type: 'leaf',
        rotation: 5.491721128081214,
        rotationSpeed: -0.004237728803374225,
        twinkle: 5.871159021423366,
        twinkleSpeed: 0.01194051753428688
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.log
      📋 Processing recommendations for categories: [ 'Seasonal Favorites', 'Local Specialties', 'Holiday Treats' ]

      at log (src/App.jsx:782:19)

    console.warn
      ⚠️ No recipes found from search results, showing empty state

      991 |           // If no recipes found, still clear loading state to prevent hanging
      992 |           if (uniqueRecipes.length === 0) {
    > 993 |             console.warn('⚠️ No recipes found from search results, showing empty state');
          |                     ^
      994 |           }
      995 |         } else {
      996 |           console.warn('⚠️ No recommendations data received');

      at warn (src/App.jsx:993:21)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 96.66418611869494,
        y: 744.4115854399777,
        size: 2.7136706980372356,
        opacity: 0.7267829331043902,
        speed: 0.16075714206883718,
        color: 'rgba(139, 69, 19, ',
        type: 'circle',
        rotation: 4.919164086588733,
        rotationSpeed: -0.009507189952753735,
        twinkle: 5.327173044727232,
        twinkleSpeed: 0.00893594352296189
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.log
      📋 Processing recommendations for categories: [ 'Seasonal Favorites', 'Local Specialties', 'Holiday Treats' ]

      at log (src/App.jsx:782:19)

    console.warn
      ⚠️ No recipes found from search results, showing empty state

      991 |           // If no recipes found, still clear loading state to prevent hanging
      992 |           if (uniqueRecipes.length === 0) {
    > 993 |             console.warn('⚠️ No recipes found from search results, showing empty state');
          |                     ^
      994 |           }
      995 |         } else {
      996 |           console.warn('⚠️ No recommendations data received');

      at warn (src/App.jsx:993:21)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      📋 Processing recommendations for categories: [ 'Holiday Treats' ]

      at log (src/App.jsx:782:19)

    console.warn
      ⚠️ Smart search failed for "Halloween Pumpkin Pie": TypeError: Cannot read properties of undefined (reading 'length')
          at length (/workspace/frontend/src/App.jsx:168:93)
          at runNextTicks (node:internal/process/task_queues:65:5)
          at listOnTimeout (node:internal/timers:549:9)
          at processTimers (node:internal/timers:523:7)
          at processTag (/workspace/frontend/src/App.jsx:800:37)
          at async Promise.allSettled (index 0)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:882:35)
          at initializeRecipes (/workspace/frontend/src/App.jsx:270:9)

      171 |       return [];
      172 |     } catch (error) {
    > 173 |       console.warn(`⚠️ Smart search failed for "${tag}":`, error);
          |               ^
      174 |       return [];
      175 |     }
      176 |   }

      at warn (src/App.jsx:173:15)
      at processTag (src/App.jsx:800:37)
          at async Promise.allSettled (index 0)
      at getRecipesFromRecommendations (src/App.jsx:882:35)
      at initializeRecipes (src/App.jsx:270:9)

    console.warn
      ⚠️ Smart search failed for "Thanksgiving Turkey": TypeError: Cannot read properties of undefined (reading 'length')
          at length (/workspace/frontend/src/App.jsx:168:93)
          at runNextTicks (node:internal/process/task_queues:65:5)
          at listOnTimeout (node:internal/timers:549:9)
          at processTimers (node:internal/timers:523:7)
          at processTag (/workspace/frontend/src/App.jsx:800:37)
          at async Promise.allSettled (index 1)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:882:35)
          at initializeRecipes (/workspace/frontend/src/App.jsx:270:9)

      171 |       return [];
      172 |     } catch (error) {
    > 173 |       console.warn(`⚠️ Smart search failed for "${tag}":`, error);
          |               ^
      174 |       return [];
      175 |     }
      176 |   }

      at warn (src/App.jsx:173:15)
      at processTag (src/App.jsx:800:37)
          at async Promise.allSettled (index 1)
      at getRecipesFromRecommendations (src/App.jsx:882:35)
      at initializeRecipes (src/App.jsx:270:9)

    console.warn
      ⚠️ Smart search failed for "Summer BBQ": TypeError: Cannot read properties of undefined (reading 'length')
          at length (/workspace/frontend/src/App.jsx:168:93)
          at runNextTicks (node:internal/process/task_queues:65:5)
          at listOnTimeout (node:internal/timers:549:9)
          at processTimers (node:internal/timers:523:7)
          at processTag (/workspace/frontend/src/App.jsx:800:37)
          at async Promise.allSettled (index 2)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:882:35)
          at initializeRecipes (/workspace/frontend/src/App.jsx:270:9)

      171 |       return [];
      172 |     } catch (error) {
    > 173 |       console.warn(`⚠️ Smart search failed for "${tag}":`, error);
          |               ^
      174 |       return [];
      175 |     }
      176 |   }

      at warn (src/App.jsx:173:15)
      at processTag (src/App.jsx:800:37)
          at async Promise.allSettled (index 2)
      at getRecipesFromRecommendations (src/App.jsx:882:35)
      at initializeRecipes (src/App.jsx:270:9)

    console.warn
      ⚠️ Smart search failed for "Ice Cream": TypeError: Cannot read properties of undefined (reading 'length')
          at length (/workspace/frontend/src/App.jsx:168:93)
          at runNextTicks (node:internal/process/task_queues:65:5)
          at listOnTimeout (node:internal/timers:549:9)
          at processTimers (node:internal/timers:523:7)
          at processTag (/workspace/frontend/src/App.jsx:800:37)
          at async Promise.allSettled (index 3)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:882:35)
          at initializeRecipes (/workspace/frontend/src/App.jsx:270:9)

      171 |       return [];
      172 |     } catch (error) {
    > 173 |       console.warn(`⚠️ Smart search failed for "${tag}":`, error);
          |               ^
      174 |       return [];
      175 |     }
      176 |   }

      at warn (src/App.jsx:173:15)
      at processTag (src/App.jsx:800:37)
          at async Promise.allSettled (index 3)
      at getRecipesFromRecommendations (src/App.jsx:882:35)
      at initializeRecipes (src/App.jsx:270:9)

    console.warn
      ⚠️ No recipes found from search results, showing empty state

      991 |           // If no recipes found, still clear loading state to prevent hanging
      992 |           if (uniqueRecipes.length === 0) {
    > 993 |             console.warn('⚠️ No recipes found from search results, showing empty state');
          |                     ^
      994 |           }
      995 |         } else {
      996 |           console.warn('⚠️ No recommendations data received');

      at warn (src/App.jsx:993:21)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      📋 Processing recommendations for categories: [ 'Bad Category' ]

      at log (src/App.jsx:782:19)

    console.warn
      ⚠️ No recipes found from search results, showing empty state

      991 |           // If no recipes found, still clear loading state to prevent hanging
      992 |           if (uniqueRecipes.length === 0) {
    > 993 |             console.warn('⚠️ No recipes found from search results, showing empty state');
          |                     ^
      994 |           }
      995 |         } else {
      996 |           console.warn('⚠️ No recommendations data received');

      at warn (src/App.jsx:993:21)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 877.4448850549281,
        y: 385.828479829425,
        size: 3.335194321550576,
        opacity: 0.3192784659260283,
        speed: 0.257525594447706,
        color: 'rgba(139, 69, 19, ',
        type: 'circle',
        rotation: 5.055994691949001,
        rotationSpeed: -0.007152325807353925,
        twinkle: 2.9940792518491333,
        twinkleSpeed: 0.00615457803012143
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.log
      📋 Processing recommendations for categories: [ 'Seasonal Favorites', 'Local Specialties', 'Holiday Treats' ]

      at log (src/App.jsx:782:19)

    console.warn
      ⚠️ No recipes found from search results, showing empty state

      991 |           // If no recipes found, still clear loading state to prevent hanging
      992 |           if (uniqueRecipes.length === 0) {
    > 993 |             console.warn('⚠️ No recipes found from search results, showing empty state');
          |                     ^
      994 |           }
      995 |         } else {
      996 |           console.warn('⚠️ No recommendations data received');

      at warn (src/App.jsx:993:21)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 653.4899004464733,
        y: 427.768033456453,
        size: 2.887483861500061,
        opacity: 0.4094043786811829,
        speed: 0.21372123323555725,
        color: 'rgba(139, 69, 19, ',
        type: 'circle',
        rotation: 3.5999818604281035,
        rotationSpeed: -0.008001260509173323,
        twinkle: 2.5625680022330277,
        twinkleSpeed: 0.005343397228129012
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.log
      📋 Processing recommendations for categories: [ 'Seasonal Favorites', 'Local Specialties', 'Holiday Treats' ]

      at log (src/App.jsx:782:19)

    console.warn
      ⚠️ No recipes found from search results, showing empty state

      991 |           // If no recipes found, still clear loading state to prevent hanging
      992 |           if (uniqueRecipes.length === 0) {
    > 993 |             console.warn('⚠️ No recipes found from search results, showing empty state');
          |                     ^
      994 |           }
      995 |         } else {
      996 |           console.warn('⚠️ No recommendations data received');

      at warn (src/App.jsx:993:21)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 135.26751120335712,
        y: 678.6230797077551,
        size: 3.345090511927746,
        opacity: 0.8610135497095066,
        speed: 0.15164072696738248,
        color: 'rgba(220, 53, 69, ',
        type: 'pepper',
        rotation: 1.4857231612964128,
        rotationSpeed: -0.004063400724691269,
        twinkle: 0.3163442013489163,
        twinkleSpeed: 0.01052207921754917
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.log
      📋 Processing recommendations for categories: [ 'Seasonal Favorites', 'Local Specialties', 'Holiday Treats' ]

      at log (src/App.jsx:782:19)

    console.warn
      ⚠️ No recipes found from search results, showing empty state

      991 |           // If no recipes found, still clear loading state to prevent hanging
      992 |           if (uniqueRecipes.length === 0) {
    > 993 |             console.warn('⚠️ No recipes found from search results, showing empty state');
          |                     ^
      994 |           }
      995 |         } else {
      996 |           console.warn('⚠️ No recommendations data received');

      at warn (src/App.jsx:993:21)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 393.3029529275534,
        y: 35.74582255915408,
        size: 4.134239337057967,
        opacity: 0.7569935781967718,
        speed: 0.20208397167590758,
        color: 'rgba(34, 139, 34, ',
        type: 'leaf',
        rotation: 2.0627055170934496,
        rotationSpeed: -0.007679472462491446,
        twinkle: 5.787175940974286,
        twinkleSpeed: 0.005289084842069669
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

    console.log
      📋 Processing recommendations for categories: [ 'Desserts' ]

      at log (src/App.jsx:782:19)

    console.warn
      ⚠️ Smart search failed for "pie": TypeError: Cannot read properties of undefined (reading 'length')
          at length (/workspace/frontend/src/App.jsx:168:93)
          at processTag (/workspace/frontend/src/App.jsx:800:37)
          at async Promise.allSettled (index 0)
          at getRecipesFromRecommendations (/workspace/frontend/src/App.jsx:882:35)
          at initializeRecipes (/workspace/frontend/src/App.jsx:270:9)

      171 |       return [];
      172 |     } catch (error) {
    > 173 |       console.warn(`⚠️ Smart search failed for "${tag}":`, error);
          |               ^
      174 |       return [];
      175 |     }
      176 |   }

      at warn (src/App.jsx:173:15)
      at processTag (src/App.jsx:800:37)
          at async Promise.allSettled (index 0)
      at getRecipesFromRecommendations (src/App.jsx:882:35)
      at initializeRecipes (src/App.jsx:270:9)

    console.warn
      ⚠️ No recipes found from search results, showing empty state

      991 |           // If no recipes found, still clear loading state to prevent hanging
      992 |           if (uniqueRecipes.length === 0) {
    > 993 |             console.warn('⚠️ No recipes found from search results, showing empty state');
          |                     ^
      994 |           }
      995 |         } else {
      996 |           console.warn('⚠️ No recommendations data received');

      at warn (src/App.jsx:993:21)
      at initializeRecipes (src/App.jsx:270:9)

    console.log
      ✅ Recipe loading process completed

      at log (src/App.jsx:1011:15)

    console.log
      Initializing custom seasoning background...

      at log (src/App.jsx:527:15)

    console.log
      Canvas dimensions: 1024 x 768

      at log (src/App.jsx:528:15)

    console.log
      Created 100 seasoning particles

      at log (src/App.jsx:570:15)

    console.log
      Sample particle: {
        x: 260.64344504980386,
        y: 182.0443440224259,
        size: 3.5087470068175066,
        opacity: 0.7032988535376625,
        speed: 0.24452762653772933,
        color: 'rgba(139, 69, 19, ',
        type: 'circle',
        rotation: 0.5776382783706239,
        rotationSpeed: -0.009848304553619203,
        twinkle: 2.877860600488729,
        twinkleSpeed: 0.0120782038639972
      }

      at log (src/App.jsx:571:15)

    console.log
      Custom seasoning background initialized successfully

      at log (src/App.jsx:671:15)

    console.log
      ✅ Initialization completed

      at log (src/App.jsx:284:17)

  ● Recommendations Component Integration › calls onRecipeSelect when recipe is selected

    thrown: "Exceeded timeout of 5000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      40 |   });
      41 |
    > 42 |   it('calls onRecipeSelect when recipe is selected', async () => {
         |   ^
      43 |     const mockRecommendations = {
      44 |       recommendations: {
      45 |         'Seasonal Favorites': ['summer berries']

      at it (src/__tests__/RecipeRecommendations.test.jsx:42:3)
      at Object.describe (src/__tests__/RecipeRecommendations.test.jsx:26:1)

  ● Recipe Recommendations Feature › Recommendation Loading States › should show loading placeholders on initial load

    Unable to find an element with the text: Seasonal Favorites. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<canvas[39m
          [33mclass[39m=[32m"seasoning-background"[39m
          [33mheight[39m=[32m"768"[39m
          [33mstyle[39m=[32m"display: block; position: fixed; top: 0px; left: 0px; width: 100vw; height: 100vh; z-index: -1; pointer-events: none;"[39m
          [33mwidth[39m=[32m"1024"[39m
        [36m/>[39m
        [36m<div[39m
          [33mclass[39m=[32m"header-container"[39m
        [36m>[39m
          [36m<h1[39m
            [33mclass[39m=[32m"title"[39m
          [36m>[39m
            [36m<img[39m
              [33malt[39m=[32m"Seasoned"[39m
              [33mclass[39m=[32m"title-icon"[39m
              [33msrc[39m=[32m"/spoon.svg"[39m
            [36m/>[39m
            [0mSeasoned[0m
            [36m<div[39m
              [33mclass[39m=[32m"title-search  "[39m
            [36m>[39m
              [36m<input[39m
                [33maria-label[39m=[32m"Search recipes"[39m
                [33mclass[39m=[32m"title-search-input"[39m
                [33mplaceholder[39m=[32m"Search recipes or paste a URL to clip..."[39m
                [33mtype[39m=[32m"text"[39m
                [33mvalue[39m=[32m""[39m
              [36m/>[39m
              [36m<button[39m
                [33maria-label[39m=[32m"Search"[39m
                [33mclass[39m=[32m"title-search-button "[39m
                [33mtitle[39m=[32m"Search recipes"[39m
              [36m>[39m
                [36m<svg[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mheight[39m=[32m"18"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mstroke-linecap[39m=[32m"round"[39m
                  [33mstroke-linejoin[39m=[32m"round"[39m
                  [33mstroke-width[39m=[32m"2"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                  [33mwidth[39m=[32m"18"[39m
                [36m>[39m
                  [36m<circle[39m
                    [33mcx[39m=[32m"11"[39m
                    [33mcy[39m=[32m"11"[39m
                    [33mr[39m=[32m"8"[39m
                  [36m/>[39m
                  [36m<path[39m
                    [33md[39m=[32m"m21 21-4.35-4.35"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</button>[39m
            [36m</div>[39m
          [36m</h1>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"container "[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipes-list"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"no-recipes-found"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"no-recipes-content"[39m
              [36m>[39m
                [36m<h2>[39m
                  [0mNo Recipes Found[0m
                [36m</h2>[39m
                [36m<p>[39m
                  [0mWe couldn't load any recipes at the moment. This might be due to:[0m
                [36m</p>[39m
                [36m<ul>[39m
                  [36m<li>[39m
                    [0mNetwork connectivity issues[0m
                  [36m</li>[39m
                  [36m<li>[39m
                    [0mSearch service temporarily unavailable[0m
                  [36m</li>[39m
                  [36m<li>[39m
                    [0mNo recipes matching current recommendations[0m
                  [36m</li>[39m
                [36m</ul>[39m
                [36m<button[39m
                  [33mclass[39m=[32m"retry-button"[39m
                [36m>[39m
                  [0m🔄 Try Again[0m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      257 |       
      258 |       // Should show loading cards immediately
    > 259 |       await waitFor(() => {
          |                    ^
      260 |         expect(screen.getByText('Seasonal Favorites')).toBeInTheDocument();
      261 |         expect(screen.getByText('Local Specialties')).toBeInTheDocument();
      262 |         expect(screen.getByText('Holiday Treats')).toBeInTheDocument();

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (src/__tests__/RecipeRecommendations.test.jsx:259:20)

  ● Recipe Recommendations Feature › Recommendation Loading States › should replace loading cards with actual recommendations

    Unable to find an element with the text: Seasonal Favorites. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<canvas[39m
          [33mclass[39m=[32m"seasoning-background"[39m
          [33mheight[39m=[32m"768"[39m
          [33mstyle[39m=[32m"display: block; position: fixed; top: 0px; left: 0px; width: 100vw; height: 100vh; z-index: -1; pointer-events: none;"[39m
          [33mwidth[39m=[32m"1024"[39m
        [36m/>[39m
        [36m<div[39m
          [33mclass[39m=[32m"header-container"[39m
        [36m>[39m
          [36m<h1[39m
            [33mclass[39m=[32m"title"[39m
          [36m>[39m
            [36m<img[39m
              [33malt[39m=[32m"Seasoned"[39m
              [33mclass[39m=[32m"title-icon"[39m
              [33msrc[39m=[32m"/spoon.svg"[39m
            [36m/>[39m
            [0mSeasoned[0m
            [36m<div[39m
              [33mclass[39m=[32m"title-search  "[39m
            [36m>[39m
              [36m<input[39m
                [33maria-label[39m=[32m"Search recipes"[39m
                [33mclass[39m=[32m"title-search-input"[39m
                [33mplaceholder[39m=[32m"Search recipes or paste a URL to clip..."[39m
                [33mtype[39m=[32m"text"[39m
                [33mvalue[39m=[32m""[39m
              [36m/>[39m
              [36m<button[39m
                [33maria-label[39m=[32m"Search"[39m
                [33mclass[39m=[32m"title-search-button "[39m
                [33mtitle[39m=[32m"Search recipes"[39m
              [36m>[39m
                [36m<svg[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mheight[39m=[32m"18"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mstroke-linecap[39m=[32m"round"[39m
                  [33mstroke-linejoin[39m=[32m"round"[39m
                  [33mstroke-width[39m=[32m"2"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                  [33mwidth[39m=[32m"18"[39m
                [36m>[39m
                  [36m<circle[39m
                    [33mcx[39m=[32m"11"[39m
                    [33mcy[39m=[32m"11"[39m
                    [33mr[39m=[32m"8"[39m
                  [36m/>[39m
                  [36m<path[39m
                    [33md[39m=[32m"m21 21-4.35-4.35"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</button>[39m
            [36m</div>[39m
          [36m</h1>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"container "[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipes-list"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"no-recipes-found"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"no-recipes-content"[39m
              [36m>[39m
                [36m<h2>[39m
                  [0mNo Recipes Found[0m
                [36m</h2>[39m
                [36m<p>[39m
                  [0mWe couldn't load any recipes at the moment. This might be due to:[0m
                [36m</p>[39m
                [36m<ul>[39m
                  [36m<li>[39m
                    [0mNetwork connectivity issues[0m
                  [36m</li>[39m
                  [36m<li>[39m
                    [0mSearch service temporarily unavailable[0m
                  [36m</li>[39m
                  [36m<li>[39m
                    [0mNo recipes matching current recommendations[0m
                  [36m</li>[39m
                [36m</ul>[39m
                [36m<button[39m
                  [33mclass[39m=[32m"retry-button"[39m
                [36m>[39m
                  [0m🔄 Try Again[0m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      272 |       
      273 |       // Wait for recommendations to load
    > 274 |       await waitFor(() => {
          |                    ^
      275 |         // TODO: Fix mock data - component should show actual recipes, not loading states
      276 |         // expect(screen.getByText('Summer Berry Salad')).toBeInTheDocument();
      277 |         expect(screen.getByText('Seasonal Favorites')).toBeInTheDocument();

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (src/__tests__/RecipeRecommendations.test.jsx:274:20)

  ● Recipe Recommendations Feature › Recommendation Filtering › should filter recipes by tag matches

    Unable to find an element with the text: Seasonal Favorites. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<canvas[39m
          [33mclass[39m=[32m"seasoning-background"[39m
          [33mheight[39m=[32m"768"[39m
          [33mstyle[39m=[32m"display: block; position: fixed; top: 0px; left: 0px; width: 100vw; height: 100vh; z-index: -1; pointer-events: none;"[39m
          [33mwidth[39m=[32m"1024"[39m
        [36m/>[39m
        [36m<div[39m
          [33mclass[39m=[32m"header-container"[39m
        [36m>[39m
          [36m<h1[39m
            [33mclass[39m=[32m"title"[39m
          [36m>[39m
            [36m<img[39m
              [33malt[39m=[32m"Seasoned"[39m
              [33mclass[39m=[32m"title-icon"[39m
              [33msrc[39m=[32m"/spoon.svg"[39m
            [36m/>[39m
            [0mSeasoned[0m
            [36m<div[39m
              [33mclass[39m=[32m"title-search  "[39m
            [36m>[39m
              [36m<input[39m
                [33maria-label[39m=[32m"Search recipes"[39m
                [33mclass[39m=[32m"title-search-input"[39m
                [33mplaceholder[39m=[32m"Search recipes or paste a URL to clip..."[39m
                [33mtype[39m=[32m"text"[39m
                [33mvalue[39m=[32m""[39m
              [36m/>[39m
              [36m<button[39m
                [33maria-label[39m=[32m"Search"[39m
                [33mclass[39m=[32m"title-search-button "[39m
                [33mtitle[39m=[32m"Search recipes"[39m
              [36m>[39m
                [36m<svg[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mheight[39m=[32m"18"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mstroke-linecap[39m=[32m"round"[39m
                  [33mstroke-linejoin[39m=[32m"round"[39m
                  [33mstroke-width[39m=[32m"2"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                  [33mwidth[39m=[32m"18"[39m
                [36m>[39m
                  [36m<circle[39m
                    [33mcx[39m=[32m"11"[39m
                    [33mcy[39m=[32m"11"[39m
                    [33mr[39m=[32m"8"[39m
                  [36m/>[39m
                  [36m<path[39m
                    [33md[39m=[32m"m21 21-4.35-4.35"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</button>[39m
            [36m</div>[39m
          [36m</h1>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"container "[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipes-list"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"no-recipes-found"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"no-recipes-content"[39m
              [36m>[39m
                [36m<h2>[39m
                  [0mNo Recipes Found[0m
                [36m</h2>[39m
                [36m<p>[39m
                  [0mWe couldn't load any recipes at the moment. This might be due to:[0m
                [36m</p>[39m
                [36m<ul>[39m
                  [36m<li>[39m
                    [0mNetwork connectivity issues[0m
                  [36m</li>[39m
                  [36m<li>[39m
                    [0mSearch service temporarily unavailable[0m
                  [36m</li>[39m
                  [36m<li>[39m
                    [0mNo recipes matching current recommendations[0m
                  [36m</li>[39m
                [36m</ul>[39m
                [36m<button[39m
                  [33mclass[39m=[32m"retry-button"[39m
                [36m>[39m
                  [0m🔄 Try Again[0m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      293 |       
      294 |       // Wait for recommendations to load
    > 295 |       await waitFor(() => {
          |                    ^
      296 |         // TODO: Fix mock data - component should show actual recipes, not loading states
      297 |         // expect(screen.getByText('Summer Berry Salad')).toBeInTheDocument();
      298 |         // expect(screen.getByText('Grilled Vegetables')).toBeInTheDocument();

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (src/__tests__/RecipeRecommendations.test.jsx:295:20)

  ● Recipe Recommendations Feature › Recommendation Filtering › should handle camelCase tags by splitting them

    Unable to find an element with the text: Seasonal Favorites. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<canvas[39m
          [33mclass[39m=[32m"seasoning-background"[39m
          [33mheight[39m=[32m"768"[39m
          [33mstyle[39m=[32m"display: block; position: fixed; top: 0px; left: 0px; width: 100vw; height: 100vh; z-index: -1; pointer-events: none;"[39m
          [33mwidth[39m=[32m"1024"[39m
        [36m/>[39m
        [36m<div[39m
          [33mclass[39m=[32m"header-container"[39m
        [36m>[39m
          [36m<h1[39m
            [33mclass[39m=[32m"title"[39m
          [36m>[39m
            [36m<img[39m
              [33malt[39m=[32m"Seasoned"[39m
              [33mclass[39m=[32m"title-icon"[39m
              [33msrc[39m=[32m"/spoon.svg"[39m
            [36m/>[39m
            [0mSeasoned[0m
            [36m<div[39m
              [33mclass[39m=[32m"title-search  "[39m
            [36m>[39m
              [36m<input[39m
                [33maria-label[39m=[32m"Search recipes"[39m
                [33mclass[39m=[32m"title-search-input"[39m
                [33mplaceholder[39m=[32m"Search recipes or paste a URL to clip..."[39m
                [33mtype[39m=[32m"text"[39m
                [33mvalue[39m=[32m""[39m
              [36m/>[39m
              [36m<button[39m
                [33maria-label[39m=[32m"Search"[39m
                [33mclass[39m=[32m"title-search-button "[39m
                [33mtitle[39m=[32m"Search recipes"[39m
              [36m>[39m
                [36m<svg[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mheight[39m=[32m"18"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mstroke-linecap[39m=[32m"round"[39m
                  [33mstroke-linejoin[39m=[32m"round"[39m
                  [33mstroke-width[39m=[32m"2"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                  [33mwidth[39m=[32m"18"[39m
                [36m>[39m
                  [36m<circle[39m
                    [33mcx[39m=[32m"11"[39m
                    [33mcy[39m=[32m"11"[39m
                    [33mr[39m=[32m"8"[39m
                  [36m/>[39m
                  [36m<path[39m
                    [33md[39m=[32m"m21 21-4.35-4.35"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</button>[39m
            [36m</div>[39m
          [36m</h1>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"container "[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipes-list"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"no-recipes-found"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"no-recipes-content"[39m
              [36m>[39m
                [36m<h2>[39m
                  [0mNo Recipes Found[0m
                [36m</h2>[39m
                [36m<p>[39m
                  [0mWe couldn't load any recipes at the moment. This might be due to:[0m
                [36m</p>[39m
                [36m<ul>[39m
                  [36m<li>[39m
                    [0mNetwork connectivity issues[0m
                  [36m</li>[39m
                  [36m<li>[39m
                    [0mSearch service temporarily unavailable[0m
                  [36m</li>[39m
                  [36m<li>[39m
                    [0mNo recipes matching current recommendations[0m
                  [36m</li>[39m
                [36m</ul>[39m
                [36m<button[39m
                  [33mclass[39m=[32m"retry-button"[39m
                [36m>[39m
                  [0m🔄 Try Again[0m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      309 |       
      310 |       // Wait for recommendations to load
    > 311 |       await waitFor(() => {
          |                    ^
      312 |         // TODO: Fix mock data - component should show actual recipes, not loading states
      313 |         // GrilledVegetables should match "Grilled Vegetables" recipe
      314 |         // expect(screen.getByText('Grilled Vegetables')).toBeInTheDocument();

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (src/__tests__/RecipeRecommendations.test.jsx:311:20)

  ● Recipe Recommendations Feature › Recommendation Filtering › should not show duplicate recipes across categories

    Unable to find an element with the text: Seasonal Favorites. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<canvas[39m
          [33mclass[39m=[32m"seasoning-background"[39m
          [33mheight[39m=[32m"768"[39m
          [33mstyle[39m=[32m"display: block; position: fixed; top: 0px; left: 0px; width: 100vw; height: 100vh; z-index: -1; pointer-events: none;"[39m
          [33mwidth[39m=[32m"1024"[39m
        [36m/>[39m
        [36m<div[39m
          [33mclass[39m=[32m"header-container"[39m
        [36m>[39m
          [36m<h1[39m
            [33mclass[39m=[32m"title"[39m
          [36m>[39m
            [36m<img[39m
              [33malt[39m=[32m"Seasoned"[39m
              [33mclass[39m=[32m"title-icon"[39m
              [33msrc[39m=[32m"/spoon.svg"[39m
            [36m/>[39m
            [0mSeasoned[0m
            [36m<div[39m
              [33mclass[39m=[32m"title-search  "[39m
            [36m>[39m
              [36m<input[39m
                [33maria-label[39m=[32m"Search recipes"[39m
                [33mclass[39m=[32m"title-search-input"[39m
                [33mplaceholder[39m=[32m"Search recipes or paste a URL to clip..."[39m
                [33mtype[39m=[32m"text"[39m
                [33mvalue[39m=[32m""[39m
              [36m/>[39m
              [36m<button[39m
                [33maria-label[39m=[32m"Search"[39m
                [33mclass[39m=[32m"title-search-button "[39m
                [33mtitle[39m=[32m"Search recipes"[39m
              [36m>[39m
                [36m<svg[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mheight[39m=[32m"18"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mstroke-linecap[39m=[32m"round"[39m
                  [33mstroke-linejoin[39m=[32m"round"[39m
                  [33mstroke-width[39m=[32m"2"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                  [33mwidth[39m=[32m"18"[39m
                [36m>[39m
                  [36m<circle[39m
                    [33mcx[39m=[32m"11"[39m
                    [33mcy[39m=[32m"11"[39m
                    [33mr[39m=[32m"8"[39m
                  [36m/>[39m
                  [36m<path[39m
                    [33md[39m=[32m"m21 21-4.35-4.35"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</button>[39m
            [36m</div>[39m
          [36m</h1>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"container "[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipes-list"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"no-recipes-found"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"no-recipes-content"[39m
              [36m>[39m
                [36m<h2>[39m
                  [0mNo Recipes Found[0m
                [36m</h2>[39m
                [36m<p>[39m
                  [0mWe couldn't load any recipes at the moment. This might be due to:[0m
                [36m</p>[39m
                [36m<ul>[39m
                  [36m<li>[39m
                    [0mNetwork connectivity issues[0m
                  [36m</li>[39m
                  [36m<li>[39m
                    [0mSearch service temporarily unavailable[0m
                  [36m</li>[39m
                  [36m<li>[39m
                    [0mNo recipes matching current recommendations[0m
                  [36m</li>[39m
                [36m</ul>[39m
                [36m<button[39m
                  [33mclass[39m=[32m"retry-button"[39m
                [36m>[39m
                  [0m🔄 Try Again[0m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      321 |       
      322 |       // Wait for recommendations to load
    > 323 |       await waitFor(() => {
          |                    ^
      324 |         // TODO: Fix mock data - component should show actual recipes, not loading states
      325 |         // expect(screen.getByText('Summer Berry Salad')).toBeInTheDocument();
      326 |         expect(screen.getByText('Seasonal Favorites')).toBeInTheDocument();

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (src/__tests__/RecipeRecommendations.test.jsx:323:20)

  ● Recipe Recommendations Feature › Recommendation Filtering › should show maximum 3 recipes per category

    Unable to find an element with the text: Seasonal Favorites. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<canvas[39m
          [33mclass[39m=[32m"seasoning-background"[39m
          [33mheight[39m=[32m"768"[39m
          [33mstyle[39m=[32m"display: block; position: fixed; top: 0px; left: 0px; width: 100vw; height: 100vh; z-index: -1; pointer-events: none;"[39m
          [33mwidth[39m=[32m"1024"[39m
        [36m/>[39m
        [36m<div[39m
          [33mclass[39m=[32m"header-container"[39m
        [36m>[39m
          [36m<h1[39m
            [33mclass[39m=[32m"title"[39m
          [36m>[39m
            [36m<img[39m
              [33malt[39m=[32m"Seasoned"[39m
              [33mclass[39m=[32m"title-icon"[39m
              [33msrc[39m=[32m"/spoon.svg"[39m
            [36m/>[39m
            [0mSeasoned[0m
            [36m<div[39m
              [33mclass[39m=[32m"title-search  "[39m
            [36m>[39m
              [36m<input[39m
                [33maria-label[39m=[32m"Search recipes"[39m
                [33mclass[39m=[32m"title-search-input"[39m
                [33mplaceholder[39m=[32m"Search recipes or paste a URL to clip..."[39m
                [33mtype[39m=[32m"text"[39m
                [33mvalue[39m=[32m""[39m
              [36m/>[39m
              [36m<button[39m
                [33maria-label[39m=[32m"Search"[39m
                [33mclass[39m=[32m"title-search-button "[39m
                [33mtitle[39m=[32m"Search recipes"[39m
              [36m>[39m
                [36m<svg[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mheight[39m=[32m"18"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mstroke-linecap[39m=[32m"round"[39m
                  [33mstroke-linejoin[39m=[32m"round"[39m
                  [33mstroke-width[39m=[32m"2"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                  [33mwidth[39m=[32m"18"[39m
                [36m>[39m
                  [36m<circle[39m
                    [33mcx[39m=[32m"11"[39m
                    [33mcy[39m=[32m"11"[39m
                    [33mr[39m=[32m"8"[39m
                  [36m/>[39m
                  [36m<path[39m
                    [33md[39m=[32m"m21 21-4.35-4.35"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</button>[39m
            [36m</div>[39m
          [36m</h1>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"container "[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipes-list"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"no-recipes-found"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"no-recipes-content"[39m
              [36m>[39m
                [36m<h2>[39m
                  [0mNo Recipes Found[0m
                [36m</h2>[39m
                [36m<p>[39m
                  [0mWe couldn't load any recipes at the moment. This might be due to:[0m
                [36m</p>[39m
                [36m<ul>[39m
                  [36m<li>[39m
                    [0mNetwork connectivity issues[0m
                  [36m</li>[39m
                  [36m<li>[39m
                    [0mSearch service temporarily unavailable[0m
                  [36m</li>[39m
                  [36m<li>[39m
                    [0mNo recipes matching current recommendations[0m
                  [36m</li>[39m
                [36m</ul>[39m
                [36m<button[39m
                  [33mclass[39m=[32m"retry-button"[39m
                [36m>[39m
                  [0m🔄 Try Again[0m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      337 |       
      338 |       // Wait for recommendations to load
    > 339 |       await waitFor(() => {
          |                    ^
      340 |         expect(screen.getByText('Seasonal Favorites')).toBeInTheDocument();
      341 |       }, { timeout: 3000 });
      342 |       

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (src/__tests__/RecipeRecommendations.test.jsx:339:20)

  ● Recipe Recommendations Feature › Location-based Recommendations › should request user location for recommendations

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<canvas[39m
            [33mclass[39m=[32m"seasoning-background"[39m
            [33mheight[39m=[32m"768"[39m
            [33mstyle[39m=[32m"display: block; position: fixed; top: 0px; left: 0px; width: 100vw; height: 100vh; z-index: -1; pointer-events: none;"[39m
            [33mwidth[39m=[32m"1024"[39m
          [36m/>[39m
          [36m<div[39m
            [33mclass[39m=[32m"header-container"[39m
          [36m>[39m
            [36m<h1[39m
              [33mclass[39m=[32m"title"[39m
            [36m>[39m
              [36m<img[39m
                [33malt[39m=[32m"Seasoned"[39m
                [33mclass[39m=[32m"title-icon"[39m
                [33msrc[39m=[32m"/spoon.svg"[39m
              [36m/>[39m
              [0mSeasoned[0m
              [36m<div[39m
                [33mclass[39m=[32m"title-search  "[39m
              [36m>[39m
                [36m<input[39m
                  [33maria-label[39m=[32m"Search recipes"[39m
                  [33mclass[39m=[32m"title-search-input"[39m
                  [33mplaceholder[39m=[32m"Search recipes or paste a URL to clip..."[39m
                  [33mtype[39m=[32m"text"[39m
                  [33mvalue[39m=[32m""[39m
                [36m/>[39m
                [36m<button[39m
                  [33maria-label[39m=[32m"Search"[39m
                  [33mclass[39m=[32m"title-search-button "[39m
                  [33mtitle[39m=[32m"Search recipes"[39m
                [36m>[39m
                  [36m<svg[39m
                    [33mfill[39m=[32m"none"[39m
                    [33mheight[39m=[32m"18"[39m
                    [33mstroke[39m=[32m"currentColor"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                    [33mviewBox[39m=[32m"0 0 24 24"[39m
                    [33mwidth[39m=[32m"18"[39m
                  [36m>[39m
                    [36m<circle[39m
                      [33mcx[39m=[32m"11"[39m
                      [33mcy[39m=[32m"11"[39m
                      [33mr[39m=[32m"8"[39m
                    [36m/>[39m
                    [36m<path[39m
                      [33md[39m=[32m"m21 21-4.35-4.35"[39m
                    [36m/>[39m
                  [36m</svg>[39m
                [36m</button>[39m
              [36m</div>[39m
            [36m</h1>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"container "[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"recipes-list"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"no-recipes-found"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"no-recipes-content"[39m
                [36m>[39m
                  [36m<h2>[39m
                    [0mNo Recipes Found[0m
                  [36m</h2>[39m
                  [36m<p>[39m
                    [0mWe couldn't load any recipes at the moment. This might be due to:[0m
                  [36m</p>[39m
                  [36m<ul>[39m
                    [36m<li>[39m
                      [0mNetwork connectivity issues[0m
                    [36m</li>[39m
                    [36m<li>[39m
                      [0mSearch service temporarily unavailable[0m
                    [36m</li>[39m
                    [36m<li>[39m
                      [0mNo recipes matching current recommendations[0m
                    [36m</li>[39m
                  [36m</ul>[39m
                  [36m<button[39m
                    [33mclass[39m=[32m"retry-button"[39m
                  [36m>[39m
                    [0m🔄 Try Again[0m
                  [36m</button>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      365 |       // Wait for geolocation to be called
      366 |       await waitFor(() => {
    > 367 |         expect(mockGeolocation.getCurrentPosition).toHaveBeenCalled();
          |                                                    ^
      368 |       });
      369 |     });
      370 |

      at toHaveBeenCalled (src/__tests__/RecipeRecommendations.test.jsx:367:52)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  ● Recipe Recommendations Feature › Error Handling › should handle malformed recommendation data

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "Invalid tags format", Any<String>

    Number of calls: 0

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<canvas[39m
            [33mclass[39m=[32m"seasoning-background"[39m
            [33mheight[39m=[32m"768"[39m
            [33mstyle[39m=[32m"display: block; position: fixed; top: 0px; left: 0px; width: 100vw; height: 100vh; z-index: -1; pointer-events: none;"[39m
            [33mwidth[39m=[32m"1024"[39m
          [36m/>[39m
          [36m<div[39m
            [33mclass[39m=[32m"header-container"[39m
          [36m>[39m
            [36m<h1[39m
              [33mclass[39m=[32m"title"[39m
            [36m>[39m
              [36m<img[39m
                [33malt[39m=[32m"Seasoned"[39m
                [33mclass[39m=[32m"title-icon"[39m
                [33msrc[39m=[32m"/spoon.svg"[39m
              [36m/>[39m
              [0mSeasoned[0m
              [36m<div[39m
                [33mclass[39m=[32m"title-search  "[39m
              [36m>[39m
                [36m<input[39m
                  [33maria-label[39m=[32m"Search recipes"[39m
                  [33mclass[39m=[32m"title-search-input"[39m
                  [33mplaceholder[39m=[32m"Search recipes or paste a URL to clip..."[39m
                  [33mtype[39m=[32m"text"[39m
                  [33mvalue[39m=[32m""[39m
                [36m/>[39m
                [36m<button[39m
                  [33maria-label[39m=[32m"Search"[39m
                  [33mclass[39m=[32m"title-search-button "[39m
                  [33mtitle[39m=[32m"Search recipes"[39m
                [36m>[39m
                  [36m<svg[39m
                    [33mfill[39m=[32m"none"[39m
                    [33mheight[39m=[32m"18"[39m
                    [33mstroke[39m=[32m"currentColor"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                    [33mviewBox[39m=[32m"0 0 24 24"[39m
                    [33mwidth[39m=[32m"18"[39m
                  [36m>[39m
                    [36m<circle[39m
                      [33mcx[39m=[32m"11"[39m
                      [33mcy[39m=[32m"11"[39m
                      [33mr[39m=[32m"8"[39m
                    [36m/>[39m
                    [36m<path[39m
                      [33md[39m=[32m"m21 21-4.35-4.35"[39m
                    [36m/>[39m
                  [36m</svg>[39m
                [36m</button>[39m
              [36m</div>[39m
            [36m</h1>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"container "[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"recipes-list"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"no-recipes-found"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"no-recipes-content"[39m
                [36m>[39m
                  [36m<h2>[39m
                    [0mNo Recipes Found[0m
                  [36m</h2>[39m
                  [36m<p>[39m
                    [0mWe couldn't load any recipes at the moment. This might be due to:[0m
                  [36m</p>[39m
                  [36m<ul>[39m
                    [36m<li>[39m
                      [0mNetwork connectivity issues[0m
                    [36m</li>[39m
                    [36m<li>[39m
                      [0mSearch service temporarily unavailable[0m
                    [36m</li>[39m
                    [36m<li>[39m
                      [0mNo recipes matching current recommendations[0m
                    [36m</li>[39m
                  [36m</ul>[39m
                  [36m<button[39m
                    [33mclass[39m=[32m"retry-button"[39m
                  [36m>[39m
                    [0m🔄 Try Again[0m
                  [36m</button>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      480 |       // Should handle error gracefully
      481 |       await waitFor(() => {
    > 482 |         expect(consoleSpy).toHaveBeenCalledWith(
          |                            ^
      483 |           expect.stringContaining('Invalid tags format'),
      484 |           expect.any(String)
      485 |         );

      at toHaveBeenCalledWith (src/__tests__/RecipeRecommendations.test.jsx:482:28)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  ● Recipe Recommendations Feature › Recipe Card Interactions › should open recipe view when clicking on a recommendation card

    Unable to find an element with the text: Seasonal Favorites. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<canvas[39m
          [33mclass[39m=[32m"seasoning-background"[39m
          [33mheight[39m=[32m"768"[39m
          [33mstyle[39m=[32m"display: block; position: fixed; top: 0px; left: 0px; width: 100vw; height: 100vh; z-index: -1; pointer-events: none;"[39m
          [33mwidth[39m=[32m"1024"[39m
        [36m/>[39m
        [36m<div[39m
          [33mclass[39m=[32m"header-container"[39m
        [36m>[39m
          [36m<h1[39m
            [33mclass[39m=[32m"title"[39m
          [36m>[39m
            [36m<img[39m
              [33malt[39m=[32m"Seasoned"[39m
              [33mclass[39m=[32m"title-icon"[39m
              [33msrc[39m=[32m"/spoon.svg"[39m
            [36m/>[39m
            [0mSeasoned[0m
            [36m<div[39m
              [33mclass[39m=[32m"title-search  "[39m
            [36m>[39m
              [36m<input[39m
                [33maria-label[39m=[32m"Search recipes"[39m
                [33mclass[39m=[32m"title-search-input"[39m
                [33mplaceholder[39m=[32m"Search recipes or paste a URL to clip..."[39m
                [33mtype[39m=[32m"text"[39m
                [33mvalue[39m=[32m""[39m
              [36m/>[39m
              [36m<button[39m
                [33maria-label[39m=[32m"Search"[39m
                [33mclass[39m=[32m"title-search-button "[39m
                [33mtitle[39m=[32m"Search recipes"[39m
              [36m>[39m
                [36m<svg[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mheight[39m=[32m"18"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mstroke-linecap[39m=[32m"round"[39m
                  [33mstroke-linejoin[39m=[32m"round"[39m
                  [33mstroke-width[39m=[32m"2"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                  [33mwidth[39m=[32m"18"[39m
                [36m>[39m
                  [36m<circle[39m
                    [33mcx[39m=[32m"11"[39m
                    [33mcy[39m=[32m"11"[39m
                    [33mr[39m=[32m"8"[39m
                  [36m/>[39m
                  [36m<path[39m
                    [33md[39m=[32m"m21 21-4.35-4.35"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</button>[39m
            [36m</div>[39m
          [36m</h1>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"container "[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipes-list"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"no-recipes-found"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"no-recipes-content"[39m
              [36m>[39m
                [36m<h2>[39m
                  [0mNo Recipes Found[0m
                [36m</h2>[39m
                [36m<p>[39m
                  [0mWe couldn't load any recipes at the moment. This might be due to:[0m
                [36m</p>[39m
                [36m<ul>[39m
                  [36m<li>[39m
                    [0mNetwork connectivity issues[0m
                  [36m</li>[39m
                  [36m<li>[39m
                    [0mSearch service temporarily unavailable[0m
                  [36m</li>[39m
                  [36m<li>[39m
                    [0mNo recipes matching current recommendations[0m
                  [36m</li>[39m
                [36m</ul>[39m
                [36m<button[39m
                  [33mclass[39m=[32m"retry-button"[39m
                [36m>[39m
                  [0m🔄 Try Again[0m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      495 |       
      496 |       // Wait for recommendations to load
    > 497 |       await waitFor(() => {
          |                    ^
      498 |         // TODO: Fix mock data - component should show actual recipes, not loading states
      499 |         // expect(screen.getByText('Summer Berry Salad')).toBeInTheDocument();
      500 |         expect(screen.getByText('Seasonal Favorites')).toBeInTheDocument();

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (src/__tests__/RecipeRecommendations.test.jsx:497:20)

  ● Recipe Recommendations Feature › Tag Matching Algorithm › should match recipes with partial word matches

    Unable to find an element with the text: Seasonal Favorites. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<canvas[39m
          [33mclass[39m=[32m"seasoning-background"[39m
          [33mheight[39m=[32m"768"[39m
          [33mstyle[39m=[32m"display: block; position: fixed; top: 0px; left: 0px; width: 100vw; height: 100vh; z-index: -1; pointer-events: none;"[39m
          [33mwidth[39m=[32m"1024"[39m
        [36m/>[39m
        [36m<div[39m
          [33mclass[39m=[32m"header-container"[39m
        [36m>[39m
          [36m<h1[39m
            [33mclass[39m=[32m"title"[39m
          [36m>[39m
            [36m<img[39m
              [33malt[39m=[32m"Seasoned"[39m
              [33mclass[39m=[32m"title-icon"[39m
              [33msrc[39m=[32m"/spoon.svg"[39m
            [36m/>[39m
            [0mSeasoned[0m
            [36m<div[39m
              [33mclass[39m=[32m"title-search  "[39m
            [36m>[39m
              [36m<input[39m
                [33maria-label[39m=[32m"Search recipes"[39m
                [33mclass[39m=[32m"title-search-input"[39m
                [33mplaceholder[39m=[32m"Search recipes or paste a URL to clip..."[39m
                [33mtype[39m=[32m"text"[39m
                [33mvalue[39m=[32m""[39m
              [36m/>[39m
              [36m<button[39m
                [33maria-label[39m=[32m"Search"[39m
                [33mclass[39m=[32m"title-search-button "[39m
                [33mtitle[39m=[32m"Search recipes"[39m
              [36m>[39m
                [36m<svg[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mheight[39m=[32m"18"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mstroke-linecap[39m=[32m"round"[39m
                  [33mstroke-linejoin[39m=[32m"round"[39m
                  [33mstroke-width[39m=[32m"2"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                  [33mwidth[39m=[32m"18"[39m
                [36m>[39m
                  [36m<circle[39m
                    [33mcx[39m=[32m"11"[39m
                    [33mcy[39m=[32m"11"[39m
                    [33mr[39m=[32m"8"[39m
                  [36m/>[39m
                  [36m<path[39m
                    [33md[39m=[32m"m21 21-4.35-4.35"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</button>[39m
            [36m</div>[39m
          [36m</h1>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"container "[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipes-list"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"no-recipes-found"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"no-recipes-content"[39m
              [36m>[39m
                [36m<h2>[39m
                  [0mNo Recipes Found[0m
                [36m</h2>[39m
                [36m<p>[39m
                  [0mWe couldn't load any recipes at the moment. This might be due to:[0m
                [36m</p>[39m
                [36m<ul>[39m
                  [36m<li>[39m
                    [0mNetwork connectivity issues[0m
                  [36m</li>[39m
                  [36m<li>[39m
                    [0mSearch service temporarily unavailable[0m
                  [36m</li>[39m
                  [36m<li>[39m
                    [0mNo recipes matching current recommendations[0m
                  [36m</li>[39m
                [36m</ul>[39m
                [36m<button[39m
                  [33mclass[39m=[32m"retry-button"[39m
                [36m>[39m
                  [0m🔄 Try Again[0m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      520 |       
      521 |       // Wait for recommendations - 'berries' tag should match 'Summer Berry Salad'
    > 522 |       await waitFor(() => {
          |                    ^
      523 |         // TODO: Fix mock data - component should show actual recipes, not loading states
      524 |         // expect(screen.getByText('Summer Berry Salad')).toBeInTheDocument();
      525 |         expect(screen.getByText('Seasonal Favorites')).toBeInTheDocument();

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (src/__tests__/RecipeRecommendations.test.jsx:522:20)

  ● Recipe Recommendations Feature › Tag Matching Algorithm › should match recipes with multiple word tags

    Unable to find an element with the text: Seasonal Favorites. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<canvas[39m
          [33mclass[39m=[32m"seasoning-background"[39m
          [33mheight[39m=[32m"768"[39m
          [33mstyle[39m=[32m"display: block; position: fixed; top: 0px; left: 0px; width: 100vw; height: 100vh; z-index: -1; pointer-events: none;"[39m
          [33mwidth[39m=[32m"1024"[39m
        [36m/>[39m
        [36m<div[39m
          [33mclass[39m=[32m"header-container"[39m
        [36m>[39m
          [36m<h1[39m
            [33mclass[39m=[32m"title"[39m
          [36m>[39m
            [36m<img[39m
              [33malt[39m=[32m"Seasoned"[39m
              [33mclass[39m=[32m"title-icon"[39m
              [33msrc[39m=[32m"/spoon.svg"[39m
            [36m/>[39m
            [0mSeasoned[0m
            [36m<div[39m
              [33mclass[39m=[32m"title-search  "[39m
            [36m>[39m
              [36m<input[39m
                [33maria-label[39m=[32m"Search recipes"[39m
                [33mclass[39m=[32m"title-search-input"[39m
                [33mplaceholder[39m=[32m"Search recipes or paste a URL to clip..."[39m
                [33mtype[39m=[32m"text"[39m
                [33mvalue[39m=[32m""[39m
              [36m/>[39m
              [36m<button[39m
                [33maria-label[39m=[32m"Search"[39m
                [33mclass[39m=[32m"title-search-button "[39m
                [33mtitle[39m=[32m"Search recipes"[39m
              [36m>[39m
                [36m<svg[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mheight[39m=[32m"18"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mstroke-linecap[39m=[32m"round"[39m
                  [33mstroke-linejoin[39m=[32m"round"[39m
                  [33mstroke-width[39m=[32m"2"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                  [33mwidth[39m=[32m"18"[39m
                [36m>[39m
                  [36m<circle[39m
                    [33mcx[39m=[32m"11"[39m
                    [33mcy[39m=[32m"11"[39m
                    [33mr[39m=[32m"8"[39m
                  [36m/>[39m
                  [36m<path[39m
                    [33md[39m=[32m"m21 21-4.35-4.35"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</button>[39m
            [36m</div>[39m
          [36m</h1>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"container "[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"recipes-list"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"no-recipes-found"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"no-recipes-content"[39m
              [36m>[39m
                [36m<h2>[39m
                  [0mNo Recipes Found[0m
                [36m</h2>[39m
                [36m<p>[39m
                  [0mWe couldn't load any recipes at the moment. This might be due to:[0m
                [36m</p>[39m
                [36m<ul>[39m
                  [36m<li>[39m
                    [0mNetwork connectivity issues[0m
                  [36m</li>[39m
                  [36m<li>[39m
                    [0mSearch service temporarily unavailable[0m
                  [36m</li>[39m
                  [36m<li>[39m
                    [0mNo recipes matching current recommendations[0m
                  [36m</li>[39m
                [36m</ul>[39m
                [36m<button[39m
                  [33mclass[39m=[32m"retry-button"[39m
                [36m>[39m
                  [0m🔄 Try Again[0m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      531 |       
      532 |       // 'SummerSalads' should be split and match recipes with 'summer' or 'salad'
    > 533 |       await waitFor(() => {
          |                    ^
      534 |         // TODO: Fix mock data - component should show actual recipes, not loading states
      535 |         // expect(screen.getByText('Summer Berry Salad')).toBeInTheDocument();
      536 |         expect(screen.getByText('Seasonal Favorites')).toBeInTheDocument();

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (src/__tests__/RecipeRecommendations.test.jsx:533:20)

  ● Recipe Recommendations Feature › Tag Matching Algorithm › should use word boundaries for accurate matching

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<canvas[39m
            [33mclass[39m=[32m"seasoning-background"[39m
            [33mheight[39m=[32m"768"[39m
            [33mstyle[39m=[32m"display: block; position: fixed; top: 0px; left: 0px; width: 100vw; height: 100vh; z-index: -1; pointer-events: none;"[39m
            [33mwidth[39m=[32m"1024"[39m
          [36m/>[39m
          [36m<div[39m
            [33mclass[39m=[32m"header-container"[39m
          [36m>[39m
            [36m<h1[39m
              [33mclass[39m=[32m"title"[39m
            [36m>[39m
              [36m<img[39m
                [33malt[39m=[32m"Seasoned"[39m
                [33mclass[39m=[32m"title-icon"[39m
                [33msrc[39m=[32m"/spoon.svg"[39m
              [36m/>[39m
              [0mSeasoned[0m
              [36m<div[39m
                [33mclass[39m=[32m"title-search  "[39m
              [36m>[39m
                [36m<input[39m
                  [33maria-label[39m=[32m"Search recipes"[39m
                  [33mclass[39m=[32m"title-search-input"[39m
                  [33mplaceholder[39m=[32m"Search recipes or paste a URL to clip..."[39m
                  [33mtype[39m=[32m"text"[39m
                  [33mvalue[39m=[32m""[39m
                [36m/>[39m
                [36m<button[39m
                  [33maria-label[39m=[32m"Search"[39m
                  [33mclass[39m=[32m"title-search-button "[39m
                  [33mtitle[39m=[32m"Search recipes"[39m
                [36m>[39m
                  [36m<svg[39m
                    [33mfill[39m=[32m"none"[39m
                    [33mheight[39m=[32m"18"[39m
                    [33mstroke[39m=[32m"currentColor"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                    [33mviewBox[39m=[32m"0 0 24 24"[39m
                    [33mwidth[39m=[32m"18"[39m
                  [36m>[39m
                    [36m<circle[39m
                      [33mcx[39m=[32m"11"[39m
                      [33mcy[39m=[32m"11"[39m
                      [33mr[39m=[32m"8"[39m
                    [36m/>[39m
                    [36m<path[39m
                      [33md[39m=[32m"m21 21-4.35-4.35"[39m
                    [36m/>[39m
                  [36m</svg>[39m
                [36m</button>[39m
              [36m</div>[39m
            [36m</h1>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"container "[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"recipes-list"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"no-recipes-found"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"no-recipes-content"[39m
                [36m>[39m
                  [36m<h2>[39m
                    [0mNo Recipes Found[0m
                  [36m</h2>[39m
                  [36m<p>[39m
                    [0mWe couldn't load any recipes at the moment. This might be due to:[0m
                  [36m</p>[39m
                  [36m<ul>[39m
                    [36m<li>[39m
                      [0mNetwork connectivity issues[0m
                    [36m</li>[39m
                    [36m<li>[39m
                      [0mSearch service temporarily unavailable[0m
                    [36m</li>[39m
                    [36m<li>[39m
                      [0mNo recipes matching current recommendations[0m
                    [36m</li>[39m
                  [36m</ul>[39m
                  [36m<button[39m
                    [33mclass[39m=[32m"retry-button"[39m
                  [36m>[39m
                    [0m🔄 Try Again[0m
                  [36m</button>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      575 |       await waitFor(() => {
      576 |         const categories = document.querySelectorAll('.recommendation-category');
    > 577 |         expect(categories.length).toBeGreaterThan(0);
          |                                   ^
      578 |       });
      579 |       
      580 |       // Should not find 'Piece of Cake' when searching for 'pie'

      at toBeGreaterThan (src/__tests__/RecipeRecommendations.test.jsx:577:35)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

--------------------------|---------|----------|---------|---------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
File                      | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                                                                                                                                                                                                                                                                                                         
--------------------------|---------|----------|---------|---------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
All files                 |   50.67 |       37 |   40.37 |   51.84 |                                                                                                                                                                                                                                                                                                                           
 src                      |   47.04 |    36.56 |   35.62 |   48.19 |                                                                                                                                                                                                                                                                                                                           
  App.jsx                 |   47.09 |    36.56 |   35.62 |   48.25 | 20-21,28,45-76,169,193-215,219-248,278-280,302-305,321,334,350-355,360,379-399,409,435-455,673-674,683-694,746-747,802-864,870-871,891,907,921-922,933-941,946-947,958-960,973-975,1052-1053,1062-1349,1357-1505,1510-1512,1518-1521,1543-1544,1594-1599,1667-1674,1692,1695,1814-2536,2567-2573,2579-2684,2748-2749,2918 
  main.jsx                |       0 |      100 |     100 |       0 | 9                                                                                                                                                                                                                                                                                                                         
 src/components           |    62.1 |    38.42 |   54.71 |   63.27 |                                                                                                                                                                                                                                                                                                                           
  Recommendations.jsx     |   60.57 |    32.82 |   53.33 |   61.76 | 15,36-64,69,87-93,106-107,145-155,162-163,215-218,249,262-284,290-291,300-304,311-414,473,487-575                                                                                                                                                                                                                         
  SwipeableRecipeGrid.jsx |   72.97 |    46.15 |    62.5 |   79.41 | 27-33,73-95                                                                                                                                                                                                                                                                                                               
  VideoPopup.jsx          |   60.27 |    67.64 |   53.33 |   59.15 | 45-46,54-56,65-67,78-97,102-103,107-108,120-123,187-188                                                                                                                                                                                                                                                                   
--------------------------|---------|----------|---------|---------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Test Suites: 10 failed, 10 passed, 20 total
Tests:       56 failed, 1 skipped, 156 passed, 213 total
Snapshots:   0 total
Time:        34.727 s, estimated 36 s
Ran all test suites.
