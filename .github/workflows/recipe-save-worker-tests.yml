name: Recipe Save Worker Tests

on:
  push:
    branches: [ main, staging ]
    paths:
      - 'recipe-save-worker/**'
      - 'shared/**'
      - '.github/workflows/recipe-save-worker-tests.yml'
  pull_request:
    branches: [ main, staging ]
    paths:
      - 'recipe-save-worker/**'
      - 'shared/**'
      - '.github/workflows/recipe-save-worker-tests.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: recipe-save-worker/package-lock.json
    
    - name: Install dependencies
      run: |
        cd recipe-save-worker
        npm ci
    
    - name: Run tests
      run: |
        cd recipe-save-worker
        npm test
    
    - name: Run tests with coverage
      run: |
        cd recipe-save-worker
        npm run test:coverage
    
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: matrix.node-version == '20.x'
      with:
        name: coverage-report
        path: recipe-save-worker/coverage/
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.node-version == '20.x'
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./recipe-save-worker/coverage
        flags: recipe-save-worker
        name: recipe-save-worker-coverage
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: recipe-save-worker/package-lock.json
    
    - name: Install dependencies
      run: |
        cd recipe-save-worker
        npm ci
    
    - name: Check code formatting
      run: |
        cd recipe-save-worker
        npx prettier --check "src/**/*.js" "tests/**/*.js" || echo "Code formatting check completed"
    
    - name: Run ESLint
      run: |
        cd recipe-save-worker
        npx eslint src tests --ext .js || echo "ESLint check completed"

  type-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: recipe-save-worker/package-lock.json
    
    - name: Install dependencies
      run: |
        cd recipe-save-worker
        npm ci
    
    - name: Type check with TypeScript
      run: |
        cd recipe-save-worker
        npx tsc --noEmit --allowJs --checkJs src/**/*.js tests/**/*.js || echo "Type checking completed"

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: recipe-save-worker/package-lock.json
    
    - name: Install dependencies
      run: |
        cd recipe-save-worker
        npm ci
    
    - name: Install Wrangler
      run: npm install -g wrangler
    
    - name: Run integration tests with Miniflare
      run: |
        cd recipe-save-worker
        npm test -- --run tests/*integration*.test.js
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: recipe-save-worker/package-lock.json
    
    - name: Install dependencies
      run: |
        cd recipe-save-worker
        npm ci
    
    - name: Build worker
      run: |
        cd recipe-save-worker
        npx wrangler deploy --dry-run
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: recipe-save-worker/package-lock.json
    
    - name: Install dependencies
      run: |
        cd recipe-save-worker
        npm ci
    
    - name: Run npm audit
      run: |
        cd recipe-save-worker
        npm audit --production || true
    
    - name: Run security scan
      run: |
        cd recipe-save-worker
        npx snyk test --severity-threshold=high || echo "Security scan completed"