name: Recipe Scraper Tests

on:
  push:
    branches: [ main, staging ]
    paths:
      - 'recipe-scraper/**'
      - '.github/workflows/recipe-scraper-tests.yml'
      - 'shared/**'
      - 'package.json'
      - 'package-lock.json'
  pull_request:
    branches: [ main, staging ]
    paths:
      - 'recipe-scraper/**'
      - '.github/workflows/recipe-scraper-tests.yml'
      - 'shared/**'
      - 'package.json'
      - 'package-lock.json'

permissions:
  contents: read
  pull-requests: write
  issues: write
  checks: write

jobs:
  test-worker:
    name: Recipe Scraper Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: recipe-scraper/package-lock.json
    
    - name: Install Worker Dependencies
      working-directory: ./recipe-scraper
      run: npm ci
    
    - name: Install System Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y lcov
    
    - name: Run Worker Tests with Coverage
      working-directory: ./recipe-scraper
      run: |
        echo "Running tests with Vitest coverage..."
        npm run test:coverage
        echo "✅ Tests passed successfully!"
    
    - name: Upload Coverage Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: recipe-scraper-coverage-reports
        path: |
          recipe-scraper/coverage/
        retention-days: 30
    
    - name: Coverage Summary
      working-directory: ./recipe-scraper
      run: |
        if [ -f coverage/lcov.info ]; then
          echo "## 📊 Recipe Scraper Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Extract coverage percentages from lcov.info
          if command -v lcov >/dev/null 2>&1; then
            lcov --summary coverage/lcov.info 2>/dev/null | grep -E "(lines|functions|branches)" >> $GITHUB_STEP_SUMMARY || true
          fi
          
          # Show Vitest coverage summary
          if [ -f coverage/coverage-final.json ]; then
            echo "Coverage data collected successfully ✅" >> $GITHUB_STEP_SUMMARY
          fi
        else
          echo "## ⚠️ No Coverage Data Generated" >> $GITHUB_STEP_SUMMARY
          echo "Coverage collection may have failed or no tests were run." >> $GITHUB_STEP_SUMMARY
        fi

  lint-worker:
    name: Recipe Scraper Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Lint Worker
      working-directory: ./recipe-scraper
      run: |
        npm ci
        if npm run | grep -q "lint"; then
          npm run lint || echo "Linting completed with warnings"
        else
          echo "No lint script found"
        fi
